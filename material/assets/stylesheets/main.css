@charset "UTF-8";
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  -webkit-text-size-adjust: none;
     -moz-text-size-adjust: none;
      -ms-text-size-adjust: none;
          text-size-adjust: none;
}

body {
  margin: 0;
}

hr {
  overflow: visible;
  box-sizing: content-box;
}

a {
  -webkit-text-decoration-skip: objects;
}

a,
button,
label,
input {
  -webkit-tap-highlight-color: transparent;
}

a {
  color: inherit;
  text-decoration: none;
}

small {
  font-size: 80%;
}

sub,
sup {
  position: relative;
  font-size: 80%;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

img {
  border-style: none;
}

table {
  border-collapse: separate;
  border-spacing: 0;
}

td,
th {
  font-weight: normal;
  vertical-align: top;
}

button {
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;
  font-size: inherit;
}

input {
  border: 0;
  outline: 0;
}

:root {
  --md-default-fg-color: hsla(0, 0%, 0%, 0.87);
  --md-default-fg-color--light: hsla(0, 0%, 0%, 0.54);
  --md-default-fg-color--lighter: hsla(0, 0%, 0%, 0.26);
  --md-default-fg-color--lightest: hsla(0, 0%, 0%, 0.07);
  --md-default-bg-color: hsla(0, 0%, 100%, 1);
  --md-default-bg-color--light: hsla(0, 0%, 100%, 0.7);
  --md-default-bg-color--lighter: hsla(0, 0%, 100%, 0.3);
  --md-default-bg-color--lightest: hsla(0, 0%, 100%, 0.12);
  --md-primary-fg-color: hsla(231deg, 48%, 48%, 1);
  --md-primary-fg-color--light: hsla(230deg, 44%, 64%, 1);
  --md-primary-fg-color--dark: hsla(232deg, 54%, 41%, 1);
  --md-primary-bg-color: var(--md-default-bg-color);
  --md-primary-bg-color--light: var(--md-default-bg-color--light);
  --md-accent-fg-color: hsla(231deg, 99%, 66%, 1);
  --md-accent-fg-color--transparent: hsla(231deg, 99%, 66%, 0.1);
  --md-accent-bg-color: var(--md-default-bg-color);
  --md-accent-bg-color--light: var(--md-default-bg-color--light);
  --md-code-bg-color: hsla(0, 0%, 92.5%, 0.5);
  --md-code-fg-color: hsla(200, 18%, 26%, 1);
}

.md-icon svg {
  display: block;
  width: 1.2rem;
  height: 1.2rem;
  margin: 0 auto;
  fill: currentColor;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body,
input {
  color: var(--md-default-fg-color);
  -webkit-font-feature-settings: "kern", "liga";
          font-feature-settings: "kern", "liga";
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

code,
pre,
kbd {
  color: var(--md-default-fg-color);
  -webkit-font-feature-settings: "kern";
          font-feature-settings: "kern";
  font-family: "Courier New", Courier, monospace;
}

.md-typeset {
  font-size: 0.8rem;
  line-height: 1.6;
  -webkit-print-color-adjust: exact;
}
.md-typeset p,
.md-typeset ul,
.md-typeset ol,
.md-typeset blockquote {
  margin: 1em 0;
}
.md-typeset h1 {
  margin: 0 0 2rem;
  color: var(--md-default-fg-color--light);
  font-size: 1.5625rem;
  font-weight: 300;
  letter-spacing: -0.01em;
  line-height: 1.3;
}
.md-typeset h2 {
  margin: 2rem 0 0.8rem;
  font-size: 1.25rem;
  font-weight: 300;
  letter-spacing: -0.01em;
  line-height: 1.4;
}
.md-typeset h3 {
  margin: 1.6rem 0 0.8rem;
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: -0.01em;
  line-height: 1.5;
}
.md-typeset h2 + h3 {
  margin-top: 0.8rem;
}
.md-typeset h4 {
  margin: 0.8rem 0;
  font-size: 0.8rem;
  font-weight: 700;
  letter-spacing: -0.01em;
}
.md-typeset h5,
.md-typeset h6 {
  margin: 0.8rem 0;
  color: var(--md-default-fg-color--light);
  font-size: 0.64rem;
  font-weight: 700;
  letter-spacing: -0.01em;
}
.md-typeset h5 {
  text-transform: uppercase;
}
.md-typeset hr {
  margin: 1.5em 0;
  border-bottom: 0.05rem dotted var(--md-default-fg-color--lighter);
}
.md-typeset a {
  color: var(--md-primary-fg-color);
  word-break: break-word;
}
.md-typeset a, .md-typeset a::before {
  transition: color 125ms;
}
.md-typeset a:focus, .md-typeset a:hover {
  color: var(--md-accent-fg-color);
}
.md-typeset code,
.md-typeset pre,
.md-typeset kbd {
  background-color: var(--md-code-bg-color);
  color: var(--md-code-fg-color);
  font-size: 85%;
  direction: ltr;
}
.md-typeset code {
  margin: 0 0.2941176471em;
  padding: 0.0735294118em 0;
  border-radius: 0.1rem;
  box-shadow: 0.2941176471em 0 0 var(--md-code-bg-color), -0.2941176471em 0 0 var(--md-code-bg-color);
  word-break: break-word;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}
.md-typeset h1 code,
.md-typeset h2 code,
.md-typeset h3 code,
.md-typeset h4 code,
.md-typeset h5 code,
.md-typeset h6 code {
  margin: 0;
  background-color: transparent;
  box-shadow: none;
}
.md-typeset a > code {
  margin: inherit;
  padding: inherit;
  border-radius: initial;
  background-color: inherit;
  color: inherit;
  box-shadow: none;
}
.md-typeset pre {
  position: relative;
  margin: 1em 0;
  border-radius: 0.1rem;
  line-height: 1.4;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-overflow-scrolling: touch;
}
.md-typeset pre > code {
  display: block;
  margin: 0;
  padding: 0.525rem 0.6rem;
  background-color: transparent;
  font-size: inherit;
  box-shadow: none;
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
  overflow: auto;
  word-break: normal;
}
.md-typeset pre > code::-webkit-scrollbar {
  width: 0.2rem;
  height: 0.2rem;
}
.md-typeset pre > code::-webkit-scrollbar-thumb {
  background-color: var(--md-default-fg-color--lighter);
}
.md-typeset pre > code::-webkit-scrollbar-thumb:hover {
  background-color: var(--md-accent-fg-color);
}
.md-typeset kbd {
  display: inline-block;
  padding: 0 0.5882352941em;
  border-radius: 0.1rem;
  font-size: 0.75em;
  line-height: 1.5;
  box-shadow: 0 0.1rem 0 0.05rem var(--md-default-fg-color--lighter), 0 0.1rem 0 var(--md-default-fg-color--lighter), inset 0 -0.1rem 0.2rem var(--md-default-bg-color);
  word-break: break-word;
  vertical-align: text-top;
}
.md-typeset mark {
  margin: 0 0.25em;
  padding: 0.0625em 0;
  border-radius: 0.1rem;
  background-color: rgba(255, 235, 59, 0.5);
  box-shadow: 0.25em 0 0 rgba(255, 235, 59, 0.5), -0.25em 0 0 rgba(255, 235, 59, 0.5);
  word-break: break-word;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}
.md-typeset abbr {
  border-bottom: 0.05rem dotted var(--md-default-fg-color--light);
  text-decoration: none;
  cursor: help;
}
.md-typeset small {
  opacity: 0.75;
}
.md-typeset sup,
.md-typeset sub {
  margin-left: 0.078125em;
}
[dir=rtl] .md-typeset sup,
[dir=rtl] .md-typeset sub {
  margin-right: 0.078125em;
  margin-left: initial;
}
.md-typeset blockquote {
  padding-left: 0.6rem;
  border-left: 0.2rem solid var(--md-default-fg-color--lighter);
  color: var(--md-default-fg-color--light);
}
[dir=rtl] .md-typeset blockquote {
  padding-right: 0.6rem;
  padding-left: initial;
  border-right: 0.2rem solid var(--md-default-fg-color--lighter);
  border-left: initial;
}
.md-typeset ul {
  list-style-type: disc;
}
.md-typeset ul,
.md-typeset ol {
  margin-left: 0.625em;
  padding: 0;
}
[dir=rtl] .md-typeset ul,
[dir=rtl] .md-typeset ol {
  margin-right: 0.625em;
  margin-left: initial;
}
.md-typeset ul ol,
.md-typeset ol ol {
  list-style-type: lower-alpha;
}
.md-typeset ul ol ol,
.md-typeset ol ol ol {
  list-style-type: lower-roman;
}
.md-typeset ul li,
.md-typeset ol li {
  margin-bottom: 0.5em;
  margin-left: 1.25em;
}
[dir=rtl] .md-typeset ul li,
[dir=rtl] .md-typeset ol li {
  margin-right: 1.25em;
  margin-left: initial;
}
.md-typeset ul li p,
.md-typeset ul li blockquote,
.md-typeset ol li p,
.md-typeset ol li blockquote {
  margin: 0.5em 0;
}
.md-typeset ul li:last-child,
.md-typeset ol li:last-child {
  margin-bottom: 0;
}
.md-typeset ul li ul,
.md-typeset ul li ol,
.md-typeset ol li ul,
.md-typeset ol li ol {
  margin: 0.5em 0 0.5em 0.625em;
}
[dir=rtl] .md-typeset ul li ul,
[dir=rtl] .md-typeset ul li ol,
[dir=rtl] .md-typeset ol li ul,
[dir=rtl] .md-typeset ol li ol {
  margin-right: 0.625em;
  margin-left: initial;
}
.md-typeset dd {
  margin: 1em 0 1em 1.875em;
}
[dir=rtl] .md-typeset dd {
  margin-right: 1.875em;
  margin-left: initial;
}
.md-typeset iframe,
.md-typeset img,
.md-typeset svg {
  max-width: 100%;
}
.md-typeset table:not([class]) {
  display: inline-block;
  max-width: 100%;
  border-radius: 0.1rem;
  background: var(--md-default-bg-color);
  font-size: 0.64rem;
  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.05), 0 0 0.05rem rgba(0, 0, 0, 0.1);
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.md-typeset table:not([class]) + * {
  margin-top: 1.5em;
}
.md-typeset table:not([class]) th:not([align]),
.md-typeset table:not([class]) td:not([align]) {
  text-align: left;
}
[dir=rtl] .md-typeset table:not([class]) th:not([align]),
[dir=rtl] .md-typeset table:not([class]) td:not([align]) {
  text-align: right;
}
.md-typeset table:not([class]) th {
  min-width: 5rem;
  padding: 0.6rem 0.8rem;
  background-color: var(--md-default-fg-color--light);
  color: var(--md-default-bg-color);
  vertical-align: top;
}
.md-typeset table:not([class]) td {
  padding: 0.6rem 0.8rem;
  border-top: 0.05rem solid var(--md-default-fg-color--lightest);
  vertical-align: top;
}
.md-typeset table:not([class]) tr {
  transition: background-color 125ms;
}
.md-typeset table:not([class]) tr:hover {
  background-color: rgba(0, 0, 0, 0.035);
  box-shadow: 0 0.05rem 0 var(--md-default-bg-color) inset;
}
.md-typeset table:not([class]) tr:first-child td {
  border-top: 0;
}
.md-typeset table:not([class]) a {
  word-break: normal;
}
.md-typeset__scrollwrap {
  margin: 1em -0.8rem;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}
.md-typeset .md-typeset__table {
  display: inline-block;
  margin-bottom: 0.5em;
  padding: 0 0.8rem;
}
.md-typeset .md-typeset__table table {
  display: table;
  width: 100%;
  margin: 0;
  overflow: hidden;
}

html {
  height: 100%;
  background-color: var(--md-default-bg-color);
  font-size: 125%;
  overflow-x: hidden;
}

body {
  display: flex;
  position: relative;
  flex-direction: column;
  width: 100%;
  min-height: 100%;
  font-size: 0.5rem;
}

hr {
  display: block;
  height: 0.05rem;
  padding: 0;
  border: 0;
}

.md-grid {
  max-width: 61rem;
  margin-right: auto;
  margin-left: auto;
}

.md-container {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.md-main {
  flex-grow: 1;
}
.md-main__inner {
  height: 100%;
  padding-top: 1.5rem;
  padding-bottom: 0.05rem;
}

.md-ellipsis {
  display: block;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.md-toggle {
  display: none;
}

.md-overlay {
  position: fixed;
  top: 0;
  width: 0;
  height: 0;
  transition: width 0ms 250ms, height 0ms 250ms, opacity 250ms;
  background-color: var(--md-default-fg-color--light);
  opacity: 0;
  z-index: 3;
}

.md-skip {
  position: fixed;
  margin: 0.5rem;
  padding: 0.3rem 0.5rem;
  transform: translateY(0.4rem);
  border-radius: 0.1rem;
  background-color: var(--md-default-fg-color);
  color: var(--md-default-bg-color);
  font-size: 0.64rem;
  opacity: 0;
}
.md-skip:focus {
  transform: translateY(0);
  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1), opacity 175ms 75ms;
  opacity: 1;
  z-index: 10;
}

@page {
  margin: 25mm;
}
.md-announce {
  background-color: var(--md-default-fg-color);
}
.md-announce__inner {
  min-height: 2.4rem;
  padding: 0 0.8rem;
  color: var(--md-default-bg-color);
  font-size: 0.7rem;
  line-height: 2.4rem;
}

.md-clipboard {
  position: absolute;
  top: 0.4rem;
  right: 0.4rem;
  width: 1.2rem;
  height: 1.2rem;
  transition: color 250ms;
  border-radius: 0.1rem;
  color: var(--md-default-fg-color--lightest);
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}
.md-clipboard svg {
  width: 0.9rem;
  height: 0.9rem;
}
pre:hover .md-clipboard {
  color: var(--md-default-fg-color--light);
}
pre .md-clipboard:focus, pre .md-clipboard:hover {
  color: var(--md-accent-fg-color);
}
.md-content__inner {
  margin: 0 0.8rem 1.2rem;
  padding-top: 0.6rem;
}
.md-content__inner::before {
  display: block;
  height: 0.4rem;
  content: "";
}
.md-content__inner > :last-child {
  margin-bottom: 0;
}
.md-content__button {
  margin: 0.4rem 0;
  margin-left: 0.4rem;
  padding: 0;
  float: right;
}
[dir=rtl] .md-content__button {
  margin-right: 0.4rem;
  margin-left: initial;
  float: left;
}
[dir=rtl] .md-content__button svg {
  transform: scaleX(-1);
}
.md-typeset .md-content__button {
  color: var(--md-default-fg-color--lighter);
}
.md-content__button svg {
  display: inline;
  vertical-align: top;
}

.md-dialog {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
  display: block;
  position: fixed;
  right: 0.8rem;
  bottom: 0.8rem;
  left: initial;
  min-width: 11.1rem;
  padding: 0.4rem 0.6rem;
  transform: translateY(100%);
  transition: transform 0ms 400ms, opacity 400ms;
  border: none;
  border-radius: 0.1rem;
  background: var(--md-default-fg-color);
  color: var(--md-default-bg-color);
  font-size: 0.7rem;
  opacity: 0;
  z-index: 2;
}
[dir=rtl] .md-dialog {
  right: initial;
  left: 0.8rem;
}
.md-dialog[data-md-state=open] {
  transform: translateY(0);
  transition: transform 400ms cubic-bezier(0.075, 0.85, 0.175, 1), opacity 400ms;
  opacity: 1;
}

.md-header {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  right: 0;
  left: 0;
  height: 2.4rem;
  transition: background-color 250ms, color 250ms;
  background-color: var(--md-primary-fg-color);
  color: var(--md-primary-bg-color);
  box-shadow: 0 0 0.2rem rgba(0, 0, 0, 0), 0 0.2rem 0.4rem rgba(0, 0, 0, 0);
  z-index: 2;
}
.no-js .md-header {
  transition: none;
  box-shadow: none;
}
.md-header[data-md-state=shadow] {
  transition: background-color 250ms, color 250ms, box-shadow 250ms;
  box-shadow: 0 0 0.2rem rgba(0, 0, 0, 0.1), 0 0.2rem 0.4rem rgba(0, 0, 0, 0.2);
}

.md-header-nav {
  display: flex;
  padding: 0 0.2rem;
}
.md-header-nav__button {
  position: relative;
  margin: 0.2rem;
  padding: 0.4rem;
  transition: opacity 250ms;
  cursor: pointer;
  z-index: 1;
}
[dir=rtl] .md-header-nav__button svg {
  transform: scaleX(-1);
}
.md-header-nav__button:focus, .md-header-nav__button:hover {
  opacity: 0.7;
}
.md-header-nav__button.md-logo {
  margin: 0.2rem;
  padding: 0.4rem;
}
.md-header-nav__button.md-logo img,
.md-header-nav__button.md-logo svg {
  display: block;
  width: 1.2rem;
  height: 1.2rem;
  fill: currentColor;
}
.no-js .md-header-nav__button[for=__search] {
  display: none;
}
.md-header-nav__topic {
  display: block;
  position: absolute;
  width: 100%;
  padding: 0 1rem;
  transition: transform 400ms cubic-bezier(0.1, 0.7, 0.1, 1), opacity 150ms;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}
.md-header-nav__topic + .md-header-nav__topic {
  transform: translateX(1.25rem);
  transition: transform 400ms cubic-bezier(1, 0.7, 0.1, 0.1), opacity 150ms;
  opacity: 0;
  z-index: -1;
  pointer-events: none;
}
[dir=rtl] .md-header-nav__topic + .md-header-nav__topic {
  transform: translateX(-1.25rem);
}
.no-js .md-header-nav__topic {
  position: initial;
}
.no-js .md-header-nav__topic + .md-header-nav__topic {
  display: none;
}
.md-header-nav__title {
  flex-grow: 1;
  font-size: 0.9rem;
  line-height: 2.4rem;
}
.md-header-nav__title[data-md-state=active] .md-header-nav__topic {
  transform: translateX(-1.25rem);
  transition: transform 400ms cubic-bezier(1, 0.7, 0.1, 0.1), opacity 150ms;
  opacity: 0;
  z-index: -1;
  pointer-events: none;
}
[dir=rtl] .md-header-nav__title[data-md-state=active] .md-header-nav__topic {
  transform: translateX(1.25rem);
}
.md-header-nav__title[data-md-state=active] .md-header-nav__topic + .md-header-nav__topic {
  transform: translateX(0);
  transition: transform 400ms cubic-bezier(0.1, 0.7, 0.1, 1), opacity 150ms;
  opacity: 1;
  z-index: 0;
  pointer-events: initial;
}
.md-header-nav__title > .md-header-nav__ellipsis {
  position: relative;
  width: 100%;
  height: 100%;
}
.md-header-nav__source {
  display: none;
}

.md-hero {
  transition: background 250ms;
  background-color: var(--md-primary-fg-color);
  color: var(--md-primary-bg-color);
  font-size: 1rem;
  overflow: hidden;
}
.md-hero__inner {
  margin-top: 1rem;
  padding: 0.8rem 0.8rem 0.4rem;
  transition: transform 400ms cubic-bezier(0.1, 0.7, 0.1, 1), opacity 250ms;
  transition-delay: 100ms;
}
[data-md-state=hidden] .md-hero__inner {
  pointer-events: none;
  transform: translateY(0.625rem);
  transition: transform 0ms 400ms, opacity 100ms 0ms;
  opacity: 0;
}
.md-hero--expand .md-hero__inner {
  margin-bottom: 1.2rem;
}

.md-footer {
  background-color: var(--md-default-fg-color);
  color: var(--md-default-bg-color);
}

.md-footer-nav__inner {
  padding: 0.2rem;
  overflow: auto;
}
.md-footer-nav__link {
  display: flex;
  padding-top: 1.4rem;
  padding-bottom: 0.4rem;
  transition: opacity 250ms;
}
.md-footer-nav__link:focus, .md-footer-nav__link:hover {
  opacity: 0.7;
}
.md-footer-nav__link--prev {
  width: 25%;
  float: left;
}
[dir=rtl] .md-footer-nav__link--prev {
  float: right;
}
[dir=rtl] .md-footer-nav__link--prev svg {
  transform: scaleX(-1);
}
.md-footer-nav__link--next {
  width: 75%;
  float: right;
  text-align: right;
}
[dir=rtl] .md-footer-nav__link--next {
  float: left;
  text-align: left;
}
[dir=rtl] .md-footer-nav__link--next svg {
  transform: scaleX(-1);
}
.md-footer-nav__title {
  position: relative;
  flex-grow: 1;
  max-width: calc(100% - 2.4rem);
  padding: 0 1rem;
  font-size: 0.9rem;
  line-height: 2.4rem;
}
.md-footer-nav__button {
  margin: 0.2rem;
  padding: 0.4rem;
}
.md-footer-nav__direction {
  position: absolute;
  right: 0;
  left: 0;
  margin-top: -1rem;
  padding: 0 1rem;
  color: var(--md-default-bg-color--light);
  font-size: 0.64rem;
}

.md-footer-meta {
  background-color: var(--md-default-fg-color--lighter);
}
.md-footer-meta__inner {
  padding: 0.2rem;
  overflow: auto;
}
html .md-footer-meta.md-typeset a {
  color: var(--md-default-bg-color--light);
}
html .md-footer-meta.md-typeset a:focus, html .md-footer-meta.md-typeset a:hover {
  color: var(--md-default-bg-color);
}

.md-footer-copyright {
  margin: 0 0.6rem;
  padding: 0.4rem 0;
  color: var(--md-default-bg-color--lighter);
  font-size: 0.64rem;
}
.md-footer-copyright__highlight {
  color: var(--md-default-bg-color--light);
}

.md-footer-social {
  margin: 0 0.4rem;
  padding: 0.2rem 0 0.6rem;
}
.md-footer-social__link {
  display: inline-block;
  width: 1.6rem;
  height: 1.6rem;
  transition: color 250ms;
  text-align: center;
}
.md-footer-social__link::before {
  line-height: 1.9;
}
.md-footer-social__link svg {
  width: 0.8rem;
  vertical-align: -25%;
  fill: currentColor;
}

.md-nav {
  font-size: 0.7rem;
  line-height: 1.3;
}
.md-nav__title {
  display: block;
  padding: 0 0.6rem;
  font-weight: 700;
  text-overflow: ellipsis;
  overflow: hidden;
}
.md-nav__title .md-nav__button {
  display: none;
}
.md-nav__title .md-nav__button img {
  width: 100%;
  height: auto;
}
.md-nav__title .md-nav__button.md-logo img,
.md-nav__title .md-nav__button.md-logo svg {
  display: block;
  width: 2.4rem;
  height: 2.4rem;
}
.md-nav__title .md-nav__button.md-logo svg {
  fill: currentColor;
}
.md-nav__list {
  margin: 0;
  padding: 0;
  list-style: none;
}
.md-nav__item {
  padding: 0 0.6rem;
}
.md-nav__item:last-child {
  padding-bottom: 0.6rem;
}
.md-nav__item .md-nav__item {
  padding-right: 0;
}
[dir=rtl] .md-nav__item .md-nav__item {
  padding-right: 0.6rem;
  padding-left: 0;
}
.md-nav__item .md-nav__item:last-child {
  padding-bottom: 0;
}
.md-nav__link {
  display: block;
  margin-top: 0.625em;
  transition: color 125ms;
  text-overflow: ellipsis;
  cursor: pointer;
  overflow: hidden;
  scroll-snap-align: start;
}
html .md-nav__link[for=__toc] {
  display: none;
}
html .md-nav__link[for=__toc] ~ .md-nav {
  display: none;
}
.md-nav__link[data-md-state=blur] {
  color: var(--md-default-fg-color--light);
}
.md-nav__item .md-nav__link--active {
  color: var(--md-primary-fg-color);
}
.md-nav__item--nested > .md-nav__link {
  color: inherit;
}
.md-nav__link:focus, .md-nav__link:hover {
  color: var(--md-accent-fg-color);
}
.md-nav__source {
  display: none;
}

.md-search {
  position: relative;
}
.no-js .md-search {
  display: none;
}
.md-search__overlay {
  opacity: 0;
  z-index: 1;
}
.md-search__inner {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}
.md-search__form {
  position: relative;
}
.md-search__input {
  position: relative;
  padding: 0 2.2rem 0 3.6rem;
  text-overflow: ellipsis;
  z-index: 2;
}
[dir=rtl] .md-search__input {
  padding: 0 3.6rem 0 2.2rem;
}
.md-search__input::-webkit-input-placeholder {
  -webkit-transition: color 250ms;
  transition: color 250ms;
}
.md-search__input::-moz-placeholder {
  -moz-transition: color 250ms;
  transition: color 250ms;
}
.md-search__input::-ms-input-placeholder {
  -ms-transition: color 250ms;
  transition: color 250ms;
}
.md-search__input::placeholder {
  transition: color 250ms;
}
.md-search__input::-webkit-input-placeholder {
  color: var(--md-default-fg-color--light);
}
.md-search__input::-moz-placeholder {
  color: var(--md-default-fg-color--light);
}
.md-search__input::-ms-input-placeholder {
  color: var(--md-default-fg-color--light);
}
.md-search__input ~ .md-search__icon, .md-search__input::placeholder {
  color: var(--md-default-fg-color--light);
}
.md-search__input::-ms-clear {
  display: none;
}
.md-search__icon {
  position: absolute;
  width: 1.2rem;
  height: 1.2rem;
  transition: color 250ms, opacity 250ms;
  cursor: pointer;
  z-index: 2;
}
.md-search__icon:hover {
  opacity: 0.7;
}
.md-search__icon[for=__search] {
  top: 0.3rem;
  left: 0.5rem;
}
[dir=rtl] .md-search__icon[for=__search] {
  right: 0.5rem;
  left: initial;
}
[dir=rtl] .md-search__icon[for=__search] svg {
  transform: scaleX(-1);
}
.md-search__icon[type=reset] {
  top: 0.3rem;
  right: 0.5rem;
  transform: scale(0.75);
  transition: transform 150ms cubic-bezier(0.1, 0.7, 0.1, 1), opacity 150ms;
  opacity: 0;
  pointer-events: none;
}
[dir=rtl] .md-search__icon[type=reset] {
  right: initial;
  left: 0.5rem;
}
[data-md-toggle=search]:checked ~ .md-header .md-search__input:valid ~ .md-search__icon[type=reset] {
  transform: scale(1);
  opacity: 1;
  pointer-events: initial;
}
[data-md-toggle=search]:checked ~ .md-header .md-search__input:valid ~ .md-search__icon[type=reset]:hover {
  opacity: 0.7;
}
.md-search__output {
  position: absolute;
  width: 100%;
  border-radius: 0 0 0.1rem 0.1rem;
  overflow: hidden;
  z-index: 1;
}
.md-search__scrollwrap {
  height: 100%;
  background-color: var(--md-default-bg-color);
  box-shadow: inset 0 0.05rem 0 var(--md-default-fg-color--lightest);
  overflow-y: auto;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-scroll-snap-type: y mandatory;
      -ms-scroll-snap-type: y mandatory;
          scroll-snap-type: y mandatory;
  -webkit-overflow-scrolling: touch;
}

.md-search-result {
  color: var(--md-default-fg-color);
  word-break: break-word;
}
.md-search-result__meta {
  padding: 0 0.8rem;
  background-color: var(--md-default-fg-color--lightest);
  color: var(--md-default-fg-color--light);
  font-size: 0.64rem;
  line-height: 1.8rem;
  scroll-snap-align: start;
}
.md-search-result__list {
  margin: 0;
  padding: 0;
  border-top: 0.05rem solid var(--md-default-fg-color--lightest);
  list-style: none;
}
.md-search-result__item {
  box-shadow: 0 -0.05rem 0 var(--md-default-fg-color--lightest);
}
.md-search-result__link {
  display: block;
  transition: background 250ms;
  outline: 0;
  overflow: hidden;
  scroll-snap-align: start;
}
.md-search-result__link:focus, .md-search-result__link:hover {
  background-color: var(--md-accent-fg-color--transparent);
}
.md-search-result__link:focus .md-search-result__article::before, .md-search-result__link:hover .md-search-result__article::before {
  opacity: 0.7;
}
.md-search-result__link:last-child .md-search-result__teaser {
  margin-bottom: 0.6rem;
}
.md-search-result__article {
  position: relative;
  padding: 0 0.8rem;
  overflow: auto;
}
.md-search-result__article--document .md-search-result__title {
  margin: 0.55rem 0;
  font-size: 0.8rem;
  font-weight: 400;
  line-height: 1.4;
}
.md-search-result__icon {
  position: absolute;
  left: 0;
  margin: 0.1rem;
  padding: 0.4rem;
  color: var(--md-default-fg-color--light);
}
[dir=rtl] .md-search-result__icon {
  right: 0;
  left: initial;
}
[dir=rtl] .md-search-result__icon svg {
  transform: scaleX(-1);
}
.md-search-result__title {
  margin: 0.5em 0;
  font-size: 0.64rem;
  font-weight: 700;
  line-height: 1.4;
}
.md-search-result__teaser {
  display: -webkit-box;
  max-height: 1.65rem;
  margin: 0.5em 0;
  color: var(--md-default-fg-color--light);
  font-size: 0.64rem;
  line-height: 1.4;
  text-overflow: ellipsis;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.md-search-result em {
  font-style: normal;
  font-weight: 700;
  text-decoration: underline;
}

.md-sidebar {
  position: absolute;
  width: 12.1rem;
  padding: 1.2rem 0;
  overflow: hidden;
}
.md-sidebar[data-md-state=lock] {
  position: fixed;
  top: 2.4rem;
}
.md-sidebar--secondary {
  display: none;
}
.md-sidebar__scrollwrap {
  max-height: 100%;
  margin: 0 0.2rem;
  overflow-y: auto;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-scroll-snap-type: y mandatory;
      -ms-scroll-snap-type: y mandatory;
          scroll-snap-type: y mandatory;
}
.md-sidebar__scrollwrap::-webkit-scrollbar {
  width: 0.2rem;
  height: 0.2rem;
}
.md-sidebar__scrollwrap::-webkit-scrollbar-thumb {
  background-color: var(--md-default-fg-color--lighter);
}
.md-sidebar__scrollwrap::-webkit-scrollbar-thumb:hover {
  background-color: var(--md-accent-fg-color);
}

@-webkit-keyframes md-source__facts--done {
  0% {
    height: 0;
  }
  100% {
    height: 0.65rem;
  }
}

@keyframes md-source__facts--done {
  0% {
    height: 0;
  }
  100% {
    height: 0.65rem;
  }
}
@-webkit-keyframes md-source__fact--done {
  0% {
    transform: translateY(100%);
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    transform: translateY(0%);
    opacity: 1;
  }
}
@keyframes md-source__fact--done {
  0% {
    transform: translateY(100%);
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    transform: translateY(0%);
    opacity: 1;
  }
}
.md-source {
  display: block;
  transition: opacity 250ms;
  font-size: 0.65rem;
  line-height: 1.25;
  white-space: nowrap;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}
[dir=rtl] .md-source {
  padding-right: initial;
  padding-left: 0.6rem;
}
.md-source:hover {
  opacity: 0.7;
}
.md-source__icon {
  display: inline-block;
  width: 2.4rem;
  height: 2.4rem;
  vertical-align: middle;
}
.md-source__icon svg {
  margin-top: 0.6rem;
  margin-left: 0.6rem;
}
[dir=rtl] .md-source__icon svg {
  margin-right: 0.6rem;
  margin-left: initial;
}
.md-source__icon + .md-source__repository {
  margin-left: -2rem;
  padding-left: 2rem;
}
[dir=rtl] .md-source__icon + .md-source__repository {
  margin-right: -2rem;
  margin-left: initial;
  padding-right: 2rem;
  padding-left: initial;
}
.md-source__repository {
  display: inline-block;
  max-width: calc(100% - 1.2rem);
  margin-left: 0.6rem;
  font-weight: 700;
  text-overflow: ellipsis;
  overflow: hidden;
  vertical-align: middle;
}
.md-source__facts {
  margin: 0;
  padding: 0;
  font-size: 0.55rem;
  font-weight: 700;
  list-style-type: none;
  opacity: 0.75;
  overflow: hidden;
}
[data-md-state=done] .md-source__facts {
  -webkit-animation: md-source__facts--done 250ms ease-in;
          animation: md-source__facts--done 250ms ease-in;
}
.md-source__fact {
  float: left;
}
[dir=rtl] .md-source__fact {
  float: right;
}
[data-md-state=done] .md-source__fact {
  -webkit-animation: md-source__fact--done 400ms ease-out;
          animation: md-source__fact--done 400ms ease-out;
}
.md-source__fact::before {
  margin: 0 0.1rem;
  content: "·";
}
.md-source__fact:first-child::before {
  display: none;
}

.md-tabs {
  width: 100%;
  transition: background 250ms;
  background-color: var(--md-primary-fg-color);
  color: var(--md-primary-bg-color);
  overflow: auto;
}
.no-js .md-tabs {
  transition: none;
}
.md-tabs__list {
  margin: 0;
  margin-left: 0.2rem;
  padding: 0;
  list-style: none;
  white-space: nowrap;
}
[dir=rtl] .md-tabs__list {
  margin-right: 0.2rem;
  margin-left: initial;
}
.md-tabs__item {
  display: inline-block;
  height: 2.4rem;
  padding-right: 0.6rem;
  padding-left: 0.6rem;
}
.md-tabs__link {
  display: block;
  margin-top: 0.8rem;
  transition: transform 400ms cubic-bezier(0.1, 0.7, 0.1, 1), opacity 250ms;
  font-size: 0.7rem;
  opacity: 0.7;
}
.no-js .md-tabs__link {
  transition: none;
}
.md-tabs__link--active, .md-tabs__link:hover {
  color: inherit;
  opacity: 1;
}
.md-tabs__item:nth-child(2) .md-tabs__link {
  transition-delay: 20ms;
}
.md-tabs__item:nth-child(3) .md-tabs__link {
  transition-delay: 40ms;
}
.md-tabs__item:nth-child(4) .md-tabs__link {
  transition-delay: 60ms;
}
.md-tabs__item:nth-child(5) .md-tabs__link {
  transition-delay: 80ms;
}
.md-tabs__item:nth-child(6) .md-tabs__link {
  transition-delay: 100ms;
}
.md-tabs__item:nth-child(7) .md-tabs__link {
  transition-delay: 120ms;
}
.md-tabs__item:nth-child(8) .md-tabs__link {
  transition-delay: 140ms;
}
.md-tabs__item:nth-child(9) .md-tabs__link {
  transition-delay: 160ms;
}
.md-tabs__item:nth-child(10) .md-tabs__link {
  transition-delay: 180ms;
}
.md-tabs__item:nth-child(11) .md-tabs__link {
  transition-delay: 200ms;
}
.md-tabs__item:nth-child(12) .md-tabs__link {
  transition-delay: 220ms;
}
.md-tabs__item:nth-child(13) .md-tabs__link {
  transition-delay: 240ms;
}
.md-tabs__item:nth-child(14) .md-tabs__link {
  transition-delay: 260ms;
}
.md-tabs__item:nth-child(15) .md-tabs__link {
  transition-delay: 280ms;
}
.md-tabs__item:nth-child(16) .md-tabs__link {
  transition-delay: 300ms;
}
.md-tabs[data-md-state=hidden] {
  pointer-events: none;
}
.md-tabs[data-md-state=hidden] .md-tabs__link {
  transform: translateY(50%);
  transition: color 250ms, transform 0ms 400ms, opacity 100ms;
  opacity: 0;
}

.md-typeset .admonition, .md-typeset details {
  margin: 1.5625em 0;
  padding: 0 0.6rem;
  border-left: 0.2rem solid #448aff;
  border-radius: 0.1rem;
  font-size: 0.64rem;
  box-shadow: 0 0.2rem 0.5rem rgba(0, 0, 0, 0.05), 0 0 0.05rem rgba(0, 0, 0, 0.1);
  overflow: auto;
}
[dir=rtl] .md-typeset .admonition, [dir=rtl] .md-typeset details {
  border-right: 0.2rem solid #448aff;
  border-left: none;
}
html .md-typeset .admonition > :last-child, html .md-typeset details > :last-child {
  margin-bottom: 0.6rem;
}
.md-typeset .admonition .admonition, .md-typeset details .admonition, .md-typeset .admonition details, .md-typeset details details {
  margin: 1em 0;
}
.md-typeset .admonition.tldr, .md-typeset details.tldr, .md-typeset .admonition.summary, .md-typeset details.summary, .md-typeset .admonition.abstract, .md-typeset details.abstract {
  border-left-color: #00b0ff;
}
.md-typeset .admonition.tldr > :first-child, .md-typeset details.tldr > :first-child, .md-typeset .admonition.summary > :first-child, .md-typeset details.summary > :first-child, .md-typeset .admonition.abstract > :first-child, .md-typeset details.abstract > :first-child {
  background-color: rgba(0, 176, 255, 0.1);
}
.md-typeset .admonition.tldr > :first-child::before, .md-typeset details.tldr > :first-child::before, .md-typeset .admonition.summary > :first-child::before, .md-typeset details.summary > :first-child::before, .md-typeset .admonition.abstract > :first-child::before, .md-typeset details.abstract > :first-child::before {
  background-color: #00b0ff;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M4,5H20V7H4V5M4,9H20V11H4V9M4,13H20V15H4V13M4,17H14V19H4V17Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M4,5H20V7H4V5M4,9H20V11H4V9M4,13H20V15H4V13M4,17H14V19H4V17Z\" /></svg>");
}
.md-typeset .admonition.todo, .md-typeset details.todo, .md-typeset .admonition.info, .md-typeset details.info {
  border-left-color: #00b8d4;
}
.md-typeset .admonition.todo > :first-child, .md-typeset details.todo > :first-child, .md-typeset .admonition.info > :first-child, .md-typeset details.info > :first-child {
  background-color: rgba(0, 184, 212, 0.1);
}
.md-typeset .admonition.todo > :first-child::before, .md-typeset details.todo > :first-child::before, .md-typeset .admonition.info > :first-child::before, .md-typeset details.info > :first-child::before {
  background-color: #00b8d4;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" /></svg>");
}
.md-typeset .admonition.important, .md-typeset details.important, .md-typeset .admonition.hint, .md-typeset details.hint, .md-typeset .admonition.tip, .md-typeset details.tip {
  border-left-color: #00bfa5;
}
.md-typeset .admonition.important > :first-child, .md-typeset details.important > :first-child, .md-typeset .admonition.hint > :first-child, .md-typeset details.hint > :first-child, .md-typeset .admonition.tip > :first-child, .md-typeset details.tip > :first-child {
  background-color: rgba(0, 191, 165, 0.1);
}
.md-typeset .admonition.important > :first-child::before, .md-typeset details.important > :first-child::before, .md-typeset .admonition.hint > :first-child::before, .md-typeset details.hint > :first-child::before, .md-typeset .admonition.tip > :first-child::before, .md-typeset details.tip > :first-child::before {
  background-color: #00bfa5;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M17.55,11.2C17.32,10.9 17.05,10.64 16.79,10.38C16.14,9.78 15.39,9.35 14.76,8.72C13.3,7.26 13,4.85 13.91,3C13,3.23 12.16,3.75 11.46,4.32C8.92,6.4 7.92,10.07 9.12,13.22C9.16,13.32 9.2,13.42 9.2,13.55C9.2,13.77 9.05,13.97 8.85,14.05C8.63,14.15 8.39,14.09 8.21,13.93C8.15,13.88 8.11,13.83 8.06,13.76C6.96,12.33 6.78,10.28 7.53,8.64C5.89,10 5,12.3 5.14,14.47C5.18,14.97 5.24,15.47 5.41,15.97C5.55,16.57 5.81,17.17 6.13,17.7C7.17,19.43 9,20.67 10.97,20.92C13.07,21.19 15.32,20.8 16.93,19.32C18.73,17.66 19.38,15 18.43,12.72L18.3,12.46C18.1,12 17.83,11.59 17.5,11.21L17.55,11.2M14.45,17.5C14.17,17.74 13.72,18 13.37,18.1C12.27,18.5 11.17,17.94 10.5,17.28C11.69,17 12.39,16.12 12.59,15.23C12.76,14.43 12.45,13.77 12.32,13C12.2,12.26 12.22,11.63 12.5,10.94C12.67,11.32 12.87,11.7 13.1,12C13.86,13 15.05,13.44 15.3,14.8C15.34,14.94 15.36,15.08 15.36,15.23C15.39,16.05 15.04,16.95 14.44,17.5H14.45Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M17.55,11.2C17.32,10.9 17.05,10.64 16.79,10.38C16.14,9.78 15.39,9.35 14.76,8.72C13.3,7.26 13,4.85 13.91,3C13,3.23 12.16,3.75 11.46,4.32C8.92,6.4 7.92,10.07 9.12,13.22C9.16,13.32 9.2,13.42 9.2,13.55C9.2,13.77 9.05,13.97 8.85,14.05C8.63,14.15 8.39,14.09 8.21,13.93C8.15,13.88 8.11,13.83 8.06,13.76C6.96,12.33 6.78,10.28 7.53,8.64C5.89,10 5,12.3 5.14,14.47C5.18,14.97 5.24,15.47 5.41,15.97C5.55,16.57 5.81,17.17 6.13,17.7C7.17,19.43 9,20.67 10.97,20.92C13.07,21.19 15.32,20.8 16.93,19.32C18.73,17.66 19.38,15 18.43,12.72L18.3,12.46C18.1,12 17.83,11.59 17.5,11.21L17.55,11.2M14.45,17.5C14.17,17.74 13.72,18 13.37,18.1C12.27,18.5 11.17,17.94 10.5,17.28C11.69,17 12.39,16.12 12.59,15.23C12.76,14.43 12.45,13.77 12.32,13C12.2,12.26 12.22,11.63 12.5,10.94C12.67,11.32 12.87,11.7 13.1,12C13.86,13 15.05,13.44 15.3,14.8C15.34,14.94 15.36,15.08 15.36,15.23C15.39,16.05 15.04,16.95 14.44,17.5H14.45Z\" /></svg>");
}
.md-typeset .admonition.done, .md-typeset details.done, .md-typeset .admonition.check, .md-typeset details.check, .md-typeset .admonition.success, .md-typeset details.success {
  border-left-color: #00c853;
}
.md-typeset .admonition.done > :first-child, .md-typeset details.done > :first-child, .md-typeset .admonition.check > :first-child, .md-typeset details.check > :first-child, .md-typeset .admonition.success > :first-child, .md-typeset details.success > :first-child {
  background-color: rgba(0, 200, 83, 0.1);
}
.md-typeset .admonition.done > :first-child::before, .md-typeset details.done > :first-child::before, .md-typeset .admonition.check > :first-child::before, .md-typeset details.check > :first-child::before, .md-typeset .admonition.success > :first-child::before, .md-typeset details.success > :first-child::before {
  background-color: #00c853;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z\" /></svg>");
}
.md-typeset .admonition.faq, .md-typeset details.faq, .md-typeset .admonition.help, .md-typeset details.help, .md-typeset .admonition.question, .md-typeset details.question {
  border-left-color: #64dd17;
}
.md-typeset .admonition.faq > :first-child, .md-typeset details.faq > :first-child, .md-typeset .admonition.help > :first-child, .md-typeset details.help > :first-child, .md-typeset .admonition.question > :first-child, .md-typeset details.question > :first-child {
  background-color: rgba(100, 221, 23, 0.1);
}
.md-typeset .admonition.faq > :first-child::before, .md-typeset details.faq > :first-child::before, .md-typeset .admonition.help > :first-child::before, .md-typeset details.help > :first-child::before, .md-typeset .admonition.question > :first-child::before, .md-typeset details.question > :first-child::before {
  background-color: #64dd17;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M15.07,11.25L14.17,12.17C13.45,12.89 13,13.5 13,15H11V14.5C11,13.39 11.45,12.39 12.17,11.67L13.41,10.41C13.78,10.05 14,9.55 14,9C14,7.89 13.1,7 12,7A2,2 0 0,0 10,9H8A4,4 0 0,1 12,5A4,4 0 0,1 16,9C16,9.88 15.64,10.67 15.07,11.25M13,19H11V17H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" /></svg>");
}
.md-typeset .admonition.attention, .md-typeset details.attention, .md-typeset .admonition.caution, .md-typeset details.caution, .md-typeset .admonition.warning, .md-typeset details.warning {
  border-left-color: #ff9100;
}
.md-typeset .admonition.attention > :first-child, .md-typeset details.attention > :first-child, .md-typeset .admonition.caution > :first-child, .md-typeset details.caution > :first-child, .md-typeset .admonition.warning > :first-child, .md-typeset details.warning > :first-child {
  background-color: rgba(255, 145, 0, 0.1);
}
.md-typeset .admonition.attention > :first-child::before, .md-typeset details.attention > :first-child::before, .md-typeset .admonition.caution > :first-child::before, .md-typeset details.caution > :first-child::before, .md-typeset .admonition.warning > :first-child::before, .md-typeset details.warning > :first-child::before {
  background-color: #ff9100;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" /></svg>");
}
.md-typeset .admonition.missing, .md-typeset details.missing, .md-typeset .admonition.fail, .md-typeset details.fail, .md-typeset .admonition.failure, .md-typeset details.failure {
  border-left-color: #ff5252;
}
.md-typeset .admonition.missing > :first-child, .md-typeset details.missing > :first-child, .md-typeset .admonition.fail > :first-child, .md-typeset details.fail > :first-child, .md-typeset .admonition.failure > :first-child, .md-typeset details.failure > :first-child {
  background-color: rgba(255, 82, 82, 0.1);
}
.md-typeset .admonition.missing > :first-child::before, .md-typeset details.missing > :first-child::before, .md-typeset .admonition.fail > :first-child::before, .md-typeset details.fail > :first-child::before, .md-typeset .admonition.failure > :first-child::before, .md-typeset details.failure > :first-child::before {
  background-color: #ff5252;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\" /></svg>");
}
.md-typeset .admonition.error, .md-typeset details.error, .md-typeset .admonition.danger, .md-typeset details.danger {
  border-left-color: #ff1744;
}
.md-typeset .admonition.error > :first-child, .md-typeset details.error > :first-child, .md-typeset .admonition.danger > :first-child, .md-typeset details.danger > :first-child {
  background-color: rgba(255, 23, 68, 0.1);
}
.md-typeset .admonition.error > :first-child::before, .md-typeset details.error > :first-child::before, .md-typeset .admonition.danger > :first-child::before, .md-typeset details.danger > :first-child::before {
  background-color: #ff1744;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11.5,20L16.36,10.27H13V4L8,13.73H11.5V20M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12C22,14.75 21,17.1 19.05,19.05C17.1,21 14.75,22 12,22C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M11.5,20L16.36,10.27H13V4L8,13.73H11.5V20M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12C22,14.75 21,17.1 19.05,19.05C17.1,21 14.75,22 12,22C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\" /></svg>");
}
.md-typeset .admonition.bug, .md-typeset details.bug {
  border-left-color: #f50057;
}
.md-typeset .admonition.bug > :first-child, .md-typeset details.bug > :first-child {
  background-color: rgba(245, 0, 87, 0.1);
}
.md-typeset .admonition.bug > :first-child::before, .md-typeset details.bug > :first-child::before {
  background-color: #f50057;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14,12H10V10H14M14,16H10V14H14M20,8H17.19C16.74,7.22 16.12,6.55 15.37,6.04L17,4.41L15.59,3L13.42,5.17C12.96,5.06 12.5,5 12,5C11.5,5 11.04,5.06 10.59,5.17L8.41,3L7,4.41L8.62,6.04C7.88,6.55 7.26,7.22 6.81,8H4V10H6.09C6.04,10.33 6,10.66 6,11V12H4V14H6V15C6,15.34 6.04,15.67 6.09,16H4V18H6.81C7.85,19.79 9.78,21 12,21C14.22,21 16.15,19.79 17.19,18H20V16H17.91C17.96,15.67 18,15.34 18,15V14H20V12H18V11C18,10.66 17.96,10.33 17.91,10H20V8Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14,12H10V10H14M14,16H10V14H14M20,8H17.19C16.74,7.22 16.12,6.55 15.37,6.04L17,4.41L15.59,3L13.42,5.17C12.96,5.06 12.5,5 12,5C11.5,5 11.04,5.06 10.59,5.17L8.41,3L7,4.41L8.62,6.04C7.88,6.55 7.26,7.22 6.81,8H4V10H6.09C6.04,10.33 6,10.66 6,11V12H4V14H6V15C6,15.34 6.04,15.67 6.09,16H4V18H6.81C7.85,19.79 9.78,21 12,21C14.22,21 16.15,19.79 17.19,18H20V16H17.91C17.96,15.67 18,15.34 18,15V14H20V12H18V11C18,10.66 17.96,10.33 17.91,10H20V8Z\" /></svg>");
}
.md-typeset .admonition.example, .md-typeset details.example {
  border-left-color: #651fff;
}
.md-typeset .admonition.example > :first-child, .md-typeset details.example > :first-child {
  background-color: rgba(101, 31, 255, 0.1);
}
.md-typeset .admonition.example > :first-child::before, .md-typeset details.example > :first-child::before {
  background-color: #651fff;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7,13V11H21V13H7M7,19V17H21V19H7M7,7V5H21V7H7M3,8V5H2V4H4V8H3M2,17V16H5V20H2V19H4V18.5H3V17.5H4V17H2M4.25,10A0.75,0.75 0 0,1 5,10.75C5,10.95 4.92,11.14 4.79,11.27L3.12,13H5V14H2V13.08L4,11H2V10H4.25Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7,13V11H21V13H7M7,19V17H21V19H7M7,7V5H21V7H7M3,8V5H2V4H4V8H3M2,17V16H5V20H2V19H4V18.5H3V17.5H4V17H2M4.25,10A0.75,0.75 0 0,1 5,10.75C5,10.95 4.92,11.14 4.79,11.27L3.12,13H5V14H2V13.08L4,11H2V10H4.25Z\" /></svg>");
}
.md-typeset .admonition.cite, .md-typeset details.cite, .md-typeset .admonition.quote, .md-typeset details.quote {
  border-left-color: #9e9e9e;
}
.md-typeset .admonition.cite > :first-child, .md-typeset details.cite > :first-child, .md-typeset .admonition.quote > :first-child, .md-typeset details.quote > :first-child {
  background-color: rgba(158, 158, 158, 0.1);
}
.md-typeset .admonition.cite > :first-child::before, .md-typeset details.cite > :first-child::before, .md-typeset .admonition.quote > :first-child::before, .md-typeset details.quote > :first-child::before {
  background-color: #9e9e9e;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14,17H17L19,13V7H13V13H16M6,17H9L11,13V7H5V13H8L6,17Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M14,17H17L19,13V7H13V13H16M6,17H9L11,13V7H5V13H8L6,17Z\" /></svg>");
}
.md-typeset .admonition-title, .md-typeset summary {
  margin: 0 -0.6rem;
  padding: 0.4rem 0.6rem 0.4rem 2rem;
  background-color: rgba(68, 138, 255, 0.1);
  font-weight: 700;
}
[dir=rtl] .md-typeset .admonition-title, [dir=rtl] .md-typeset summary {
  padding: 0.4rem 2rem 0.4rem 0.6rem;
}
.md-typeset .admonition-title:last-child, .md-typeset summary:last-child {
  margin-bottom: 0;
}
.md-typeset .admonition-title::before, .md-typeset summary::before {
  position: absolute;
  width: 1rem;
  height: 1rem;
  margin-left: -1.4rem;
  background-color: #448aff;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\" /></svg>");
  content: "";
}
[dir=rtl] .md-typeset .admonition-title::before, [dir=rtl] .md-typeset summary::before {
  margin-right: -1.4rem;
  margin-left: initial;
}

.codehilite .o, .highlight .o {
  color: inherit;
}
.codehilite .ow, .highlight .ow {
  color: inherit;
}
.codehilite .ge, .highlight .ge {
  color: #000000;
}
.codehilite .gr, .highlight .gr {
  color: #AA0000;
}
.codehilite .gh, .highlight .gh {
  color: #999999;
}
.codehilite .go, .highlight .go {
  color: #888888;
}
.codehilite .gp, .highlight .gp {
  color: #555555;
}
.codehilite .gs, .highlight .gs {
  color: inherit;
}
.codehilite .gu, .highlight .gu {
  color: #AAAAAA;
}
.codehilite .gt, .highlight .gt {
  color: #AA0000;
}
.codehilite .gd, .highlight .gd {
  background-color: #FFDDDD;
}
.codehilite .gi, .highlight .gi {
  background-color: #DDFFDD;
}
.codehilite .k, .highlight .k {
  color: #3B78E7;
}
.codehilite .kc, .highlight .kc {
  color: #A71D5D;
}
.codehilite .kd, .highlight .kd {
  color: #3B78E7;
}
.codehilite .kn, .highlight .kn {
  color: #3B78E7;
}
.codehilite .kp, .highlight .kp {
  color: #A71D5D;
}
.codehilite .kr, .highlight .kr {
  color: #3E61A2;
}
.codehilite .kt, .highlight .kt {
  color: #3E61A2;
}
.codehilite .c, .highlight .c {
  color: #999999;
}
.codehilite .cm, .highlight .cm {
  color: #999999;
}
.codehilite .cp, .highlight .cp {
  color: #666666;
}
.codehilite .c1, .highlight .c1 {
  color: #999999;
}
.codehilite .ch, .highlight .ch {
  color: #999999;
}
.codehilite .cs, .highlight .cs {
  color: #999999;
}
.codehilite .na, .highlight .na {
  color: #C2185B;
}
.codehilite .nb, .highlight .nb {
  color: #C2185B;
}
.codehilite .bp, .highlight .bp {
  color: #3E61A2;
}
.codehilite .nc, .highlight .nc {
  color: #C2185B;
}
.codehilite .no, .highlight .no {
  color: #3E61A2;
}
.codehilite .nd, .highlight .nd {
  color: #666666;
}
.codehilite .ni, .highlight .ni {
  color: #666666;
}
.codehilite .ne, .highlight .ne {
  color: #C2185B;
}
.codehilite .nf, .highlight .nf {
  color: #C2185B;
}
.codehilite .nl, .highlight .nl {
  color: #3B5179;
}
.codehilite .nn, .highlight .nn {
  color: #EC407A;
}
.codehilite .nt, .highlight .nt {
  color: #3B78E7;
}
.codehilite .nv, .highlight .nv {
  color: #3E61A2;
}
.codehilite .vc, .highlight .vc {
  color: #3E61A2;
}
.codehilite .vg, .highlight .vg {
  color: #3E61A2;
}
.codehilite .vi, .highlight .vi {
  color: #3E61A2;
}
.codehilite .nx, .highlight .nx {
  color: #EC407A;
}
.codehilite .m, .highlight .m {
  color: #E74C3C;
}
.codehilite .mf, .highlight .mf {
  color: #E74C3C;
}
.codehilite .mh, .highlight .mh {
  color: #E74C3C;
}
.codehilite .mi, .highlight .mi {
  color: #E74C3C;
}
.codehilite .il, .highlight .il {
  color: #E74C3C;
}
.codehilite .mo, .highlight .mo {
  color: #E74C3C;
}
.codehilite .s, .highlight .s {
  color: #0D904F;
}
.codehilite .sb, .highlight .sb {
  color: #0D904F;
}
.codehilite .sc, .highlight .sc {
  color: #0D904F;
}
.codehilite .sd, .highlight .sd {
  color: #999999;
}
.codehilite .s2, .highlight .s2 {
  color: #0D904F;
}
.codehilite .se, .highlight .se {
  color: #183691;
}
.codehilite .sh, .highlight .sh {
  color: #183691;
}
.codehilite .si, .highlight .si {
  color: #183691;
}
.codehilite .sx, .highlight .sx {
  color: #183691;
}
.codehilite .sr, .highlight .sr {
  color: #009926;
}
.codehilite .s1, .highlight .s1 {
  color: #0D904F;
}
.codehilite .ss, .highlight .ss {
  color: #0D904F;
}
.codehilite .err, .highlight .err {
  color: #A61717;
}
.codehilite .w, .highlight .w {
  color: transparent;
}
.codehilite .hll, .highlight .hll {
  display: block;
  margin: 0 -0.6rem;
  padding: 0 0.6rem;
  background-color: rgba(255, 235, 59, 0.5);
}

.codehilitetable, .highlighttable {
  display: block;
  overflow: hidden;
}
.codehilitetable tbody, .highlighttable tbody,
.codehilitetable td,
.highlighttable td {
  display: block;
  padding: 0;
}
.codehilitetable tr, .highlighttable tr {
  display: flex;
}
.codehilitetable pre, .highlighttable pre,
.codehilitetable .linenodiv,
.highlighttable .linenodiv {
  margin: 0;
  border-radius: 0;
}
.codehilitetable .linenodiv, .highlighttable .linenodiv {
  padding: 0.525rem 0.6rem;
}
.codehilitetable .linenos, .highlighttable .linenos {
  color: var(--md-default-fg-color--lighter);
  box-shadow: inset 0 0 0 0.05rem var(--md-code-bg-color);
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.codehilitetable .linenos pre, .highlighttable .linenos pre {
  background-color: transparent;
  color: inherit;
  text-align: right;
}
.codehilitetable .code, .highlighttable .code {
  flex: 1;
  overflow: hidden;
}

.md-typeset > .codehilitetable, .md-typeset > .highlighttable {
  margin: 1em 0;
  border-radius: 0.2em;
}

.md-typeset [id^="fnref:"] {
  display: inline-block;
}
.md-typeset [id^="fnref:"]:target {
  margin-top: -3.8rem;
  padding-top: 3.8rem;
  pointer-events: none;
}
.md-typeset [id^="fn:"]::before {
  display: none;
  height: 0;
  content: "";
}
.md-typeset [id^="fn:"]:target::before {
  display: block;
  margin-top: -3.5rem;
  padding-top: 3.5rem;
  pointer-events: none;
}
.md-typeset .footnote {
  color: var(--md-default-fg-color--light);
  font-size: 0.64rem;
}
.md-typeset .footnote ol {
  margin-left: 0;
}
.md-typeset .footnote li {
  transition: color 250ms;
}
.md-typeset .footnote li:target {
  color: var(--md-default-fg-color);
}
.md-typeset .footnote li :first-child {
  margin-top: 0;
}
.md-typeset .footnote li:hover .footnote-backref, .md-typeset .footnote li:target .footnote-backref {
  transform: translateX(0);
  opacity: 1;
}
.md-typeset .footnote li:hover .footnote-backref:hover, .md-typeset .footnote li:target .footnote-backref {
  color: var(--md-accent-fg-color);
}
.md-typeset .footnote-ref {
  display: inline-block;
  pointer-events: initial;
}
.md-typeset .footnote-ref::before {
  display: inline;
  margin: 0 0.2em;
  border-left: 0.05rem solid var(--md-default-fg-color--lighter);
  font-size: 1.25em;
  content: "";
  vertical-align: -0.25rem;
}
.md-typeset .footnote-backref {
  display: inline-block;
  transform: translateX(0.25rem);
  transition: transform 250ms 250ms, color 250ms, opacity 125ms 250ms;
  color: var(--md-default-fg-color--lighter);
  font-size: 0;
  opacity: 0;
  vertical-align: text-bottom;
}
[dir=rtl] .md-typeset .footnote-backref {
  transform: translateX(-0.25rem);
}
.md-typeset .footnote-backref::before {
  display: inline-block;
  width: 0.8rem;
  height: 0.8rem;
  background-color: currentColor;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19,7V11H5.83L9.41,7.41L8,6L2,12L8,18L9.41,16.58L5.83,13H21V7H19Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19,7V11H5.83L9.41,7.41L8,6L2,12L8,18L9.41,16.58L5.83,13H21V7H19Z\" /></svg>");
  content: "";
}
[dir=rtl] .md-typeset .footnote-backref::before svg {
  transform: scaleX(-1);
}

.md-typeset .headerlink {
  display: inline-block;
  margin-left: 0.5rem;
  transform: translate(0, 0.25rem);
  transition: transform 250ms 250ms, color 250ms, opacity 125ms 250ms, visibility 0ms 500ms;
  opacity: 0;
  visibility: hidden;
}
[dir=rtl] .md-typeset .headerlink {
  margin-right: 0.5rem;
  margin-left: initial;
}
html body .md-typeset .headerlink {
  color: var(--md-default-fg-color--lighter);
}
.md-typeset :hover .headerlink,
.md-typeset :target .headerlink,
.md-typeset .headerlink:focus {
  transform: translate(0, 0);
  transition: transform 250ms 250ms, color 250ms, opacity 125ms 250ms, visibility 0ms;
  opacity: 1;
  visibility: visible;
}
.md-typeset .headerlink:focus,
.md-typeset .headerlink:hover,
.md-typeset :target .headerlink {
  color: var(--md-accent-fg-color);
}
.md-typeset h3[id]::before, .md-typeset h2[id]::before, .md-typeset h1[id]::before {
  display: block;
  margin-top: -0.4rem;
  padding-top: 0.4rem;
  content: "";
}
.md-typeset h3[id]:target::before, .md-typeset h2[id]:target::before, .md-typeset h1[id]:target::before {
  margin-top: -3.4rem;
  padding-top: 3.4rem;
}
.md-typeset h4[id]::before {
  display: block;
  margin-top: -0.45rem;
  padding-top: 0.45rem;
  content: "";
}
.md-typeset h4[id]:target::before {
  margin-top: -3.45rem;
  padding-top: 3.45rem;
}
.md-typeset h6[id]::before, .md-typeset h5[id]::before {
  display: block;
  margin-top: -0.6rem;
  padding-top: 0.6rem;
  content: "";
}
.md-typeset h6[id]:target::before, .md-typeset h5[id]:target::before {
  margin-top: -3.6rem;
  padding-top: 3.6rem;
}
.md-typeset .MJXc-display {
  margin: 0.75em 0;
  padding: 0.75em 0;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.md-typeset .MathJax_CHTML {
  outline: 0;
}

.md-typeset del.critic,
.md-typeset ins.critic,
.md-typeset .critic.comment {
  margin: 0 0.25em;
  padding: 0.0625em 0;
  border-radius: 0.1rem;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}
.md-typeset del.critic {
  background-color: #FFDDDD;
  box-shadow: 0.25em 0 0 #FFDDDD, -0.25em 0 0 #FFDDDD;
}
.md-typeset ins.critic {
  background-color: #DDFFDD;
  box-shadow: 0.25em 0 0 #DDFFDD, -0.25em 0 0 #DDFFDD;
}
.md-typeset .critic.comment {
  color: #999999;
}
.md-typeset .critic.comment::before {
  content: "/* ";
}
.md-typeset .critic.comment::after {
  content: " */";
}
.md-typeset .critic.block {
  display: block;
  margin: 1em 0;
  padding-right: 0.8rem;
  padding-left: 0.8rem;
  box-shadow: none;
}
.md-typeset .critic.block :first-child {
  margin-top: 0.5em;
}
.md-typeset .critic.block :last-child {
  margin-bottom: 0.5em;
}

.md-typeset details {
  display: block;
  padding-top: 0;
}
.md-typeset details[open] > summary::after {
  transform: rotate(180deg);
}
.md-typeset details:not([open]) {
  padding-bottom: 0;
}
.md-typeset details:not([open]) > summary {
  border-bottom: none;
}
.md-typeset details summary {
  position: relative;
  padding-right: 2rem;
}
[dir=rtl] .md-typeset details summary {
  padding-left: 2rem;
}
.md-typeset summary {
  display: block;
  outline: none;
  cursor: pointer;
}
.md-typeset summary::-webkit-details-marker {
  display: none;
}
.md-typeset summary::after {
  position: absolute;
  right: 0.6rem;
  width: 1rem;
  height: 1rem;
  background-color: var(--md-default-fg-color--lighter);
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\" /></svg>");
  content: "";
}
[dir=rtl] .md-typeset summary::after {
  right: initial;
  left: 0.6rem;
}

.md-typeset .emojione,
.md-typeset .twemoji,
.md-typeset .gemoji {
  width: 1rem;
  vertical-align: text-top;
}

.highlight [data-linenos]::before {
  display: inline-block;
  position: -webkit-sticky;
  position: sticky;
  left: -0.6rem;
  margin-right: 0.6rem;
  margin-left: -0.6rem;
  padding-left: 0.6rem;
  border-right: 0.05rem solid var(--md-default-fg-color--lightest);
  color: var(--md-default-fg-color--lighter);
  content: attr(data-linenos);
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.md-typeset code.codehilite, .md-typeset code.highlight {
  margin: 0 0.2941176471em;
  padding: 0.0735294118em 0;
}

.md-typeset .tabbed-content {
  display: none;
  order: 99;
  width: 100%;
  background-color: var(--md-code-bg-color);
}
.md-typeset .tabbed-content pre {
  margin: 0;
  border-radius: 0;
}
.md-typeset .tabbed-set {
  display: flex;
  position: relative;
  flex-wrap: wrap;
  margin: 1em 0;
  border: 0.05rem solid var(--md-default-fg-color--lightest);
  border-radius: 0.1rem;
}
.md-typeset .tabbed-set > input {
  display: none;
}
.md-typeset .tabbed-set > input:checked + label {
  border-color: var(--md-accent-fg-color);
  color: var(--md-accent-fg-color);
}
.md-typeset .tabbed-set > input:checked + label + .tabbed-content {
  display: block;
  padding: 0 0.6rem;
}
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > :last-child {
  margin-bottom: 0.6rem;
}
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > pre:only-child,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .highlight:only-child,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .highlighttable:only-child,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .codehilite:only-child,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .codehilitetable:only-child {
  margin: 0 -0.6rem;
}
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > pre:only-child pre,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .highlight:only-child pre,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .highlighttable:only-child pre,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .codehilite:only-child pre,
.md-typeset .tabbed-set > input:checked + label + .tabbed-content > .codehilitetable:only-child pre {
  background: transparent;
}
.md-typeset .tabbed-set > label {
  width: auto;
  padding: 0.6rem;
  padding-bottom: 0.5rem;
  transition: color 125ms, border 250ms;
  border-bottom: 0.1rem solid transparent;
  color: var(--md-default-fg-color--light);
  font-size: 0.64rem;
  font-weight: 700;
  cursor: pointer;
}
html .md-typeset .tabbed-set > label:hover {
  color: var(--md-accent-fg-color);
}

.md-typeset .task-list-item {
  position: relative;
  list-style-type: none;
}
.md-typeset .task-list-item [type=checkbox] {
  position: absolute;
  top: 0.45em;
  left: -2em;
}
[dir=rtl] .md-typeset .task-list-item [type=checkbox] {
  right: -2em;
  left: initial;
}
.md-typeset .task-list-control .task-list-indicator::before {
  position: absolute;
  top: 0.15em;
  left: -1.5em;
  width: 1.25em;
  height: 1.25em;
  background-color: var(--md-default-fg-color--lightest);
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" /></svg>");
  content: "";
}
[dir=rtl] .md-typeset .task-list-control .task-list-indicator::before {
  right: -1.5em;
  left: initial;
}
.md-typeset .task-list-control [type=checkbox]:checked + .task-list-indicator::before {
  background-color: #00e676;
  -webkit-mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z\" /></svg>");
          mask-image: url("data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M11,16.5L18,9.5L16.59,8.09L11,13.67L7.91,10.59L6.5,12L11,16.5Z\" /></svg>");
}
.md-typeset .task-list-control [type=checkbox] {
  opacity: 0;
  z-index: -1;
}
@media print {
  .md-typeset a::after {
    color: var(--md-default-fg-color--light);
    content: " [" attr(href) "]";
  }
  .md-typeset code,
.md-typeset pre,
.md-typeset kbd {
    white-space: pre-wrap;
  }
  .md-clipboard {
    display: none;
  }
  .md-content__button {
    display: none;
  }
  .md-dialog {
    display: none;
  }
  .md-header {
    display: none;
  }
  .md-footer {
    display: none;
  }
  .md-sidebar {
    display: none;
  }
  .md-tabs {
    display: none;
  }
  .md-typeset .headerlink {
    display: none;
  }
}
@media screen and (max-width: 44.9375em) {
  .md-typeset > pre {
    margin: 1em -0.8rem;
    border-radius: 0;
  }
  .md-typeset > pre > code {
    padding: 0.525rem 0.8rem;
  }
  .md-footer-nav__link--prev .md-footer-nav__title {
    display: none;
  }
  .md-search-result__teaser {
    max-height: 2.5rem;
    -webkit-line-clamp: 3;
  }
  .codehilite .hll, .highlight .hll {
    margin: 0 -0.8rem;
    padding: 0 0.8rem;
  }
  .md-typeset > .codehilite, .md-typeset > .highlight {
    margin: 1em -0.8rem;
  }
  .md-typeset > .codehilite code, .md-typeset > .highlight code {
    padding: 0.525rem 0.8rem;
  }
  .md-typeset > .codehilitetable, .md-typeset > .highlighttable {
    margin: 1em -0.8rem;
    border-radius: 0;
  }
  .md-typeset > .codehilitetable .linenodiv, .md-typeset > .highlighttable .linenodiv {
    padding: 0.5rem 0.8rem;
  }
  .md-typeset > p > .MJXc-display {
    margin: 0.75em -0.8rem;
    padding: 0.25em 0.8rem;
  }
  .highlight [data-linenos]::before {
    left: -1.6rem;
    margin-left: -1.6rem;
    padding-left: 1.6rem;
  }
  .md-typeset > .tabbed-set {
    margin: 1em -0.8rem;
    border: 0;
    border-top: 0.05rem solid var(--md-default-fg-color--lightest);
    border-radius: 0;
  }
  .md-typeset > .tabbed-set code {
    padding: 0.525rem 0.8rem;
  }
  .md-typeset > .tabbed-set input:first-child + label {
    margin-left: 0.2rem;
  }
}
@media screen and (min-width: 100em) {
  html {
    font-size: 137.5%;
  }
}
@media screen and (min-width: 125em) {
  html {
    font-size: 150%;
  }
}
@media screen and (max-width: 59.9375em) {
  body[data-md-state=lock] {
    position: fixed;
  }
  html .md-nav__link[for=__toc] {
    display: block;
    padding-right: 2.4rem;
  }
  html .md-nav__link[for=__toc] + .md-nav__link {
    display: none;
  }
  html .md-nav__link[for=__toc] ~ .md-nav {
    display: flex;
  }
  html [dir=rtl] .md-nav__link {
    padding-right: 0.8rem;
    padding-left: 2.4rem;
  }
  .md-nav__source {
    display: block;
    padding: 0 0.2rem;
    background-color: var(--md-primary-fg-color--dark);
    color: var(--md-primary-bg-color);
  }
  .md-search__overlay {
    position: absolute;
    top: 0.2rem;
    left: -2.2rem;
    width: 2rem;
    height: 2rem;
    transform-origin: center;
    transition: transform 300ms 100ms, opacity 200ms 200ms;
    border-radius: 1rem;
    background-color: var(--md-default-bg-color);
    overflow: hidden;
    pointer-events: none;
  }
  [dir=rtl] .md-search__overlay {
    right: -2.2rem;
    left: initial;
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__overlay {
    transition: transform 400ms, opacity 100ms;
    opacity: 1;
  }
  .md-search__inner {
    position: fixed;
    top: 0;
    left: 100%;
    width: 100%;
    height: 100%;
    transform: translateX(5%);
    transition: right 0ms 300ms, left 0ms 300ms, transform 150ms 150ms cubic-bezier(0.4, 0, 0.2, 1), opacity 150ms 150ms;
    opacity: 0;
    z-index: 2;
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__inner {
    left: 0;
    transform: translateX(0);
    transition: right 0ms 0ms, left 0ms 0ms, transform 150ms 150ms cubic-bezier(0.1, 0.7, 0.1, 1), opacity 150ms 150ms;
    opacity: 1;
  }
  [dir=rtl] [data-md-toggle=search]:checked ~ .md-header .md-search__inner {
    right: 0;
    left: initial;
  }
  html [dir=rtl] .md-search__inner {
    right: 100%;
    left: initial;
    transform: translateX(-5%);
  }
  .md-search__input {
    width: 100%;
    height: 2.4rem;
    font-size: 0.9rem;
  }
  .md-search__icon[for=__search] {
    top: 0.6rem;
    left: 0.8rem;
  }
  [dir=rtl] .md-search__icon[for=__search] {
    right: 0.8rem;
    left: initial;
  }
  .md-search__icon[for=__search] svg:first-child {
    display: none;
  }
  .md-search__icon[type=reset] {
    top: 0.6rem;
    right: 0.8rem;
  }
  [dir=rtl] .md-search__icon[type=reset] {
    right: initial;
    left: 0.8rem;
  }
  .md-search__output {
    top: 2.4rem;
    bottom: 0;
  }
  .md-search-result__icon {
    display: none;
  }
}
@media screen and (max-width: 76.1875em) {
  [data-md-toggle=drawer]:checked ~ .md-overlay {
    width: 100%;
    height: 100%;
    transition: width 0ms, height 0ms, opacity 250ms;
    opacity: 1;
  }
  .md-header-nav__button.md-logo {
    display: none;
  }
  .md-hero__inner {
    margin-top: 2.4rem;
    margin-bottom: 1.2rem;
  }
  .md-nav {
    background-color: var(--md-default-bg-color);
  }
  .md-nav--primary, .md-nav--primary .md-nav {
    display: flex;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    flex-direction: column;
    height: 100%;
    z-index: 1;
  }
  .md-nav--primary .md-nav__title,
.md-nav--primary .md-nav__item {
    font-size: 0.8rem;
    line-height: 1.5;
  }
  .md-nav--primary .md-nav__title {
    position: relative;
    height: 5.6rem;
    padding: 3rem 0.8rem 0.2rem;
    background-color: var(--md-default-fg-color--lightest);
    color: var(--md-default-fg-color--light);
    font-weight: 400;
    line-height: 2.4rem;
    white-space: nowrap;
    cursor: pointer;
  }
  .md-nav--primary .md-nav__title .md-nav__icon {
    display: block;
    position: absolute;
    top: 0.4rem;
    left: 0.4rem;
    width: 1.2rem;
    height: 1.2rem;
    margin: 0.2rem;
  }
  [dir=rtl] .md-nav--primary .md-nav__title .md-nav__icon {
    right: 0.4rem;
    left: initial;
  }
  .md-nav--primary .md-nav__title ~ .md-nav__list {
    background-color: var(--md-default-bg-color);
    box-shadow: inset 0 0.05rem 0 var(--md-default-fg-color--lightest);
    overflow-y: auto;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-scroll-snap-type: y mandatory;
        -ms-scroll-snap-type: y mandatory;
            scroll-snap-type: y mandatory;
  }
  .md-nav--primary .md-nav__title ~ .md-nav__list > .md-nav__item:first-child {
    border-top: 0;
  }
  .md-nav--primary .md-nav__title[for=__drawer] {
    position: relative;
    background-color: var(--md-primary-fg-color);
    color: var(--md-primary-bg-color);
  }
  .md-nav--primary .md-nav__title[for=__drawer] .md-nav__button {
    display: block;
    position: absolute;
    top: 0.2rem;
    left: 0.2rem;
    margin: 0.2rem;
    padding: 0.4rem;
    font-size: 2.4rem;
  }
  html [dir=rtl] .md-nav--primary .md-nav__title[for=__drawer] .md-nav__button {
    right: 0.2rem;
    left: initial;
  }
  .md-nav--primary .md-nav__list {
    flex: 1;
  }
  .md-nav--primary .md-nav__item {
    padding: 0;
    border-top: 0.05rem solid var(--md-default-fg-color--lightest);
  }
  [dir=rtl] .md-nav--primary .md-nav__item {
    padding: 0;
  }
  .md-nav--primary .md-nav__item--nested > .md-nav__link {
    padding-right: 2.4rem;
  }
  [dir=rtl] .md-nav--primary .md-nav__item--nested > .md-nav__link {
    padding-right: 0.8rem;
    padding-left: 2.4rem;
  }
  .md-nav--primary .md-nav__item--active > .md-nav__link {
    color: var(--md-primary-fg-color);
  }
  .md-nav--primary .md-nav__link {
    position: relative;
    margin-top: 0;
    padding: 0.6rem 0.8rem;
  }
  .md-nav--primary .md-nav__link .md-nav__icon {
    position: absolute;
    top: 50%;
    right: 0.6rem;
    margin-top: -0.6rem;
    color: inherit;
    font-size: 1.2rem;
  }
  [dir=rtl] .md-nav--primary .md-nav__link .md-nav__icon {
    right: initial;
    left: 0.6rem;
  }
  [dir=rtl] .md-nav--primary .md-nav__icon svg {
    transform: scale(-1);
  }
  .md-nav--primary .md-nav--secondary .md-nav__link {
    position: static;
  }
  .md-nav--primary .md-nav--secondary .md-nav {
    position: static;
    background-color: transparent;
  }
  .md-nav--primary .md-nav--secondary .md-nav .md-nav__link {
    padding-left: 1.4rem;
  }
  [dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav__link {
    padding-right: 1.4rem;
    padding-left: initial;
  }
  .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link {
    padding-left: 2rem;
  }
  [dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav__link {
    padding-right: 2rem;
    padding-left: initial;
  }
  .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link {
    padding-left: 2.6rem;
  }
  [dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav__link {
    padding-right: 2.6rem;
    padding-left: initial;
  }
  .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link {
    padding-left: 3.2rem;
  }
  [dir=rtl] .md-nav--primary .md-nav--secondary .md-nav .md-nav .md-nav .md-nav .md-nav__link {
    padding-right: 3.2rem;
    padding-left: initial;
  }
  .md-nav__toggle ~ .md-nav {
    display: flex;
    transform: translateX(100%);
    transition: transform 250ms cubic-bezier(0.8, 0, 0.6, 1), opacity 125ms 50ms;
    opacity: 0;
  }
  [dir=rtl] .md-nav__toggle ~ .md-nav {
    transform: translateX(-100%);
  }
  .md-nav__toggle:checked ~ .md-nav {
    transform: translateX(0);
    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1), opacity 125ms 125ms;
    opacity: 1;
  }
  .md-sidebar--primary {
    position: fixed;
    top: 0;
    left: -12.1rem;
    width: 12.1rem;
    height: 100%;
    transform: translateX(0);
    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 250ms;
    background-color: var(--md-default-bg-color);
    z-index: 3;
  }
  [dir=rtl] .md-sidebar--primary {
    right: -12.1rem;
    left: initial;
  }
  [data-md-toggle=drawer]:checked ~ .md-container .md-sidebar--primary {
    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);
    transform: translateX(12.1rem);
  }
  [dir=rtl] [data-md-toggle=drawer]:checked ~ .md-container .md-sidebar--primary {
    transform: translateX(-12.1rem);
  }
  .md-sidebar--primary .md-sidebar__scrollwrap {
    overflow: hidden;
  }
  .md-sidebar--primary .md-sidebar__scrollwrap {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: 0;
    -webkit-scroll-snap-type: none;
        -ms-scroll-snap-type: none;
            scroll-snap-type: none;
  }
  .md-tabs {
    display: none;
  }
}
@media screen and (min-width: 60em) {
  .md-content {
    margin-right: 12.1rem;
  }
  [dir=rtl] .md-content {
    margin-right: initial;
    margin-left: 12.1rem;
  }
  .md-header-nav__button[for=__search] {
    display: none;
  }
  .md-header-nav__source {
    display: block;
    width: 11.7rem;
    max-width: 11.7rem;
    margin-left: 1rem;
  }
  [dir=rtl] .md-header-nav__source {
    margin-right: 1rem;
    margin-left: initial;
  }
  .md-nav--secondary .md-nav__title[for=__toc] {
    scroll-snap-align: start;
  }
  .md-nav--secondary .md-nav__title .md-nav__icon {
    display: none;
  }
  .md-search {
    padding: 0.2rem 0;
  }
  .md-search__overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 0;
    height: 0;
    transition: width 0ms 250ms, height 0ms 250ms, opacity 250ms;
    background-color: var(--md-default-fg-color--light);
    cursor: pointer;
  }
  [dir=rtl] .md-search__overlay {
    right: 0;
    left: initial;
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__overlay {
    width: 100%;
    height: 100%;
    transition: width 0ms, height 0ms, opacity 250ms;
    opacity: 1;
  }
  .md-search__inner {
    position: relative;
    width: 11.7rem;
    padding: 0.1rem 0;
    float: right;
    transition: width 250ms cubic-bezier(0.1, 0.7, 0.1, 1);
  }
  [dir=rtl] .md-search__inner {
    float: left;
  }
  .md-search__form {
    border-radius: 0.1rem;
  }
  .md-search__input {
    width: 100%;
    height: 1.8rem;
    padding-left: 2.2rem;
    transition: background-color 250ms, color 250ms;
    border-radius: 0.1rem;
    background-color: var(--md-default-fg-color--lighter);
    color: inherit;
    font-size: 0.8rem;
  }
  [dir=rtl] .md-search__input {
    padding-right: 2.2rem;
  }
  .md-search__input + .md-search__icon {
    color: var(--md-primary-bg-color);
  }
  .md-search__input::-webkit-input-placeholder {
    color: var(--md-primary-bg-color--light);
  }
  .md-search__input::-moz-placeholder {
    color: var(--md-primary-bg-color--light);
  }
  .md-search__input::-ms-input-placeholder {
    color: var(--md-primary-bg-color--light);
  }
  .md-search__input::placeholder {
    color: var(--md-primary-bg-color--light);
  }
  .md-search__input:hover {
    background-color: var(--md-default-bg-color--lightest);
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__input {
    border-radius: 0.1rem 0.1rem 0 0;
    background-color: var(--md-default-bg-color);
    color: var(--md-default-fg-color);
    text-overflow: clip;
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__input::-webkit-input-placeholder {
    color: var(--md-default-fg-color--light);
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__input::-moz-placeholder {
    color: var(--md-default-fg-color--light);
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__input::-ms-input-placeholder {
    color: var(--md-default-fg-color--light);
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__input + .md-search__icon, [data-md-toggle=search]:checked ~ .md-header .md-search__input::placeholder {
    color: var(--md-default-fg-color--light);
  }
  .md-search__icon[for=__search] svg:last-child {
    display: none;
  }
  .md-search__output {
    top: 1.9rem;
    transition: opacity 400ms;
    opacity: 0;
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__output {
    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);
    opacity: 1;
  }
  .md-search__scrollwrap {
    max-height: 0;
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__scrollwrap {
    max-height: 75vh;
  }
  .md-search__scrollwrap::-webkit-scrollbar {
    width: 0.2rem;
    height: 0.2rem;
  }
  .md-search__scrollwrap::-webkit-scrollbar-thumb {
    background-color: var(--md-default-fg-color--lighter);
  }
  .md-search__scrollwrap::-webkit-scrollbar-thumb:hover {
    background-color: var(--md-accent-fg-color);
  }
  .md-search-result__meta {
    padding-left: 2.2rem;
  }
  [dir=rtl] .md-search-result__meta {
    padding-right: 2.2rem;
    padding-left: initial;
  }
  .md-search-result__article {
    padding-left: 2.2rem;
  }
  [dir=rtl] .md-search-result__article {
    padding-right: 2.2rem;
    padding-left: 0.8rem;
  }
  .md-sidebar--secondary {
    display: block;
    margin-left: calc(100% - 12.1rem);
  }
  [dir=rtl] .md-sidebar--secondary {
    margin-right: calc(100% - 12.1rem);
    margin-left: initial;
  }
  .md-sidebar--secondary .md-sidebar__scrollwrap {
    -webkit-overflow-scrolling: touch;
  }
}
@media screen and (min-width: 76.25em) {
  .md-content {
    margin-left: 12.1rem;
  }
  [dir=rtl] .md-content {
    margin-right: 12.1rem;
  }
  .md-content__inner {
    margin-right: 1.2rem;
    margin-left: 1.2rem;
  }
  .md-header-nav__button[for=__drawer] {
    display: none;
  }
  .md-header-nav__source {
    margin-left: 1.4rem;
  }
  [dir=rtl] .md-header-nav__source {
    margin-right: 1.4rem;
  }
  .md-nav {
    transition: max-height 250ms cubic-bezier(0.86, 0, 0.07, 1);
  }
  .md-nav--primary .md-nav__title[for=__drawer] {
    scroll-snap-align: start;
  }
  .md-nav--primary .md-nav__title .md-nav__icon {
    display: none;
  }
  .md-nav__toggle ~ .md-nav {
    display: none;
  }
  .md-nav__toggle:checked ~ .md-nav {
    display: block;
  }
  .md-nav__item--nested > .md-nav > .md-nav__title {
    display: none;
  }
  .md-nav__icon {
    height: 0.9rem;
    float: right;
    transition: transform 250ms;
  }
  .md-nav__icon svg {
    display: inline-block;
    width: 0.9rem;
    height: 0.9rem;
    vertical-align: -0.1rem;
  }
  .md-nav__item--nested .md-nav__toggle:checked ~ .md-nav__link .md-nav__icon {
    transform: rotateZ(90deg);
  }
  [data-md-toggle=search]:checked ~ .md-header .md-search__inner {
    width: 34.4rem;
  }
  .md-search__scrollwrap {
    width: 34.4rem;
  }
  .md-sidebar--secondary {
    margin-left: 48.9rem;
  }
  [dir=rtl] .md-sidebar--secondary {
    margin-right: 48.9rem;
    margin-left: initial;
  }
  .md-tabs ~ .md-main .md-nav--primary > .md-nav__list > .md-nav__item--nested {
    display: none;
  }
  .md-tabs--active ~ .md-main .md-nav--primary .md-nav__title {
    display: block;
    padding: 0 0.6rem;
    pointer-events: none;
    scroll-snap-align: start;
  }
  .md-tabs--active ~ .md-main .md-nav--primary .md-nav__title[for=__drawer] {
    display: none;
  }
  .md-tabs--active ~ .md-main .md-nav--primary > .md-nav__list > .md-nav__item {
    display: none;
  }
  .md-tabs--active ~ .md-main .md-nav--primary > .md-nav__list > .md-nav__item--active {
    display: block;
    padding: 0;
  }
  .md-tabs--active ~ .md-main .md-nav--primary > .md-nav__list > .md-nav__item--active > .md-nav__link {
    display: none;
  }
  .md-tabs--active ~ .md-main .md-nav[data-md-level="1"] > .md-nav__list > .md-nav__item {
    padding: 0 0.6rem;
  }
  .md-tabs--active ~ .md-main .md-nav[data-md-level="1"] .md-nav .md-nav__title {
    display: none;
  }
}
@media screen and (min-width: 45em) {
  .md-footer-nav__link {
    width: 50%;
  }
  .md-footer-copyright {
    max-width: 75%;
    float: left;
  }
  [dir=rtl] .md-footer-copyright {
    float: right;
  }
  .md-footer-social {
    padding: 0.6rem 0;
    float: right;
  }
  [dir=rtl] .md-footer-social {
    float: left;
  }
}
@media screen and (max-width: 29.9375em) {
  [data-md-toggle=search]:checked ~ .md-header .md-search__overlay {
    transform: scale(45);
  }
}
@media screen and (min-width: 30em) and (max-width: 44.9375em) {
  [data-md-toggle=search]:checked ~ .md-header .md-search__overlay {
    transform: scale(60);
  }
}
@media screen and (min-width: 45em) and (max-width: 59.9375em) {
  [data-md-toggle=search]:checked ~ .md-header .md-search__overlay {
    transform: scale(75);
  }
}
@media screen and (min-width: 60em) and (max-width: 76.1875em) {
  [data-md-toggle=search]:checked ~ .md-header .md-search__inner {
    width: 23.4rem;
  }
  .md-search__scrollwrap {
    width: 23.4rem;
  }
  .md-search-result__teaser {
    max-height: 2.5rem;
    -webkit-line-clamp: 3;
  }
}
@media (-webkit-max-device-pixel-ratio: 1), (max-resolution: 1dppx) {
  .md-search__scrollwrap {
    transform: translateZ(0);
  }
}
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/main.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/base/_reset.scss */
/*# sourceURL=main.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/base/_colors.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/base/_icons.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/base/_typeset.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_base.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_announce.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_clipboard.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_content.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_dialog.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/node_modules/material-shadows/material-shadows.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_header.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_hero.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_footer.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_nav.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_search.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_sidebar.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_source.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/layout/_tabs.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/_admonition.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/_codehilite.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/_footnotes.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/_permalinks.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_arithmatex.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_critic.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_details.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_emoji.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_highlight.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_inlinehilite.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_tabbed.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/extensions/pymdown/_tasklist.scss */
/*# sourceURL=/Users/squidfunk/Desktop/General/Sources/mkdocs-material-typescript/src/assets/stylesheets/utilities/_break.scss */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */