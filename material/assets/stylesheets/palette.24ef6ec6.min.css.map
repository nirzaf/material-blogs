{"version":3,"sources":["webpack:///./src/assets/stylesheets/palette/_accent.scss","webpack:///./src/assets/stylesheets/palette/_primary.scss","webpack:///./src/assets/stylesheets/utilities/_break.scss","webpack:///./src/assets/stylesheets/palette/_scheme.scss"],"names":[],"mappings":"AA8CE,2BACE,8CACA,6DAOE,2CACA,oDAVJ,4BACE,8CACA,6DAOE,2CACA,oDAVJ,8BACE,6CACA,4DAOE,2CACA,oDAVJ,mCACE,8CACA,6DAOE,2CACA,oDAVJ,8BACE,6CACA,4DAOE,2CACA,oDAVJ,4BACE,8CACA,6DAOE,2CACA,oDAVJ,kCACE,8CACA,6DAOE,2CACA,oDAVJ,4BACE,8CACA,6DAOE,2CACA,oDAVJ,4BACE,8CACA,6DAOE,2CACA,oDAVJ,6BACE,8CACA,6DAOE,2CACA,oDAVJ,mCACE,4CACA,2DAOE,2CACA,oDAVJ,4BACE,6CACA,4DAIE,4CACA,mDAPJ,8BACE,6CACA,4DAIE,4CACA,mDAPJ,6BACE,6CACA,4DAIE,4CACA,mDAPJ,8BACE,6CACA,4DAIE,4CACA,mDAPJ,mCACE,6CACA,4DAOE,2CACA,oDCPJ,4BACE,4CACA,mDACA,kDAOE,4CACA,qDAXJ,6BACE,8CACA,qDACA,oDAOE,4CACA,qDAXJ,+BACE,8CACA,qDACA,oDAOE,4CACA,qDAXJ,oCACE,8CACA,qDACA,oDAOE,4CACA,qDAXJ,+BACE,8CACA,qDACA,oDAOE,4CACA,qDAXJ,6BACE,8CACA,qDACA,oDAOE,4CACA,qDAXJ,mCACE,8CACA,qDACA,oDAOE,4CACA,qDAXJ,6BACE,+CACA,qDACA,qDAOE,4CACA,qDAXJ,6BACE,+CACA,qDACA,qDAOE,4CACA,qDAXJ,8BACE,8CACA,qDACA,oDAOE,4CACA,qDAXJ,oCACE,6CACA,oDACA,mDAOE,4CACA,qDAXJ,6BACE,6CACA,oDACA,mDAIE,6CACA,oDARJ,+BACE,8CACA,qDACA,mDAIE,6CACA,oDARJ,8BACE,8CACA,qDACA,oDAIE,6CACA,oDARJ,+BACE,8CACA,qDACA,oDAIE,6CACA,oDARJ,oCACE,8CACA,qDACA,mDAOE,4CACA,qDAXJ,8BACE,6CACA,oDACA,mDAOE,4CACA,qDAXJ,6BACE,2CACA,kDACA,iDAOE,4CACA,qDAXJ,kCACE,8CACA,qDACA,oDAOE,4CACA,qDAUN,8BACE,4CACA,qDACA,mDACA,6CACA,oDAGA,6CAGA,+CACE,2CC2HA,yCDpHA,uCACE,4CCiGF,oCDzFA,gDACE,iCAGA,iEACE,sBAIF,2EACE,sBADF,kEACE,sBADF,uEACE,sBADF,6DACE,sBAIF,sDACE,kCC0EJ,uCDjEA,uCACE,4CAUN,8BACE,0CACA,oDACA,gDACA,4CACA,qDAGA,6CAGA,yCACE,sBAIF,uCACE,sBCuDA,yCDhDA,8CACE,kCC6BF,oCDrBA,gDACE,uCAGA,sDACE,uCCkCJ,yCDzBA,iFACE,uBCMF,uCDEA,uCACE,uBEnKN,6BAGE,4CACA,sDACA,wDACA,yDACA,8CACA,wDACA,0DACA,2DAGA,2CACA,0CAGA,mDACA,iDAGA,mDACA,qDAGA,gDACA,mD","file":"assets/stylesheets/palette.24ef6ec6.min.css","sourcesContent":["////\n/// Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\n///\n/// Permission is hereby granted, free of charge, to any person obtaining a\n/// copy of this software and associated documentation files (the \"Software\"),\n/// to deal in the Software without restriction, including without limitation\n/// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n/// and/or sell copies of the Software, and to permit persons to whom the\n/// Software is furnished to do so, subject to the following conditions:\n///\n/// The above copyright notice and this permission notice shall be included in\n/// all copies or substantial portions of the Software.\n///\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n/// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL\n/// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n/// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n/// DEALINGS\n////\n\n// ----------------------------------------------------------------------------\n// Rules\n// ----------------------------------------------------------------------------\n\n@each $name, $color in (\n  \"red\":         $clr-red-a400,\n  \"pink\":        $clr-pink-a400,\n  \"purple\":      $clr-purple-a200,\n  \"deep-purple\": $clr-deep-purple-a200,\n  \"indigo\":      $clr-indigo-a200,\n  \"blue\":        $clr-blue-a200,\n  \"light-blue\":  $clr-light-blue-a700,\n  \"cyan\":        $clr-cyan-a700,\n  \"teal\":        $clr-teal-a700,\n  \"green\":       $clr-green-a700,\n  \"light-green\": $clr-light-green-a700,\n  \"lime\":        $clr-lime-a700,\n  \"yellow\":      $clr-yellow-a700,\n  \"amber\":       $clr-amber-a700,\n  \"orange\":      $clr-orange-a400,\n  \"deep-orange\": $clr-deep-orange-a200\n) {\n\n  // Color palette\n  [data-md-color-accent=\"#{$name}\"] {\n    --md-accent-fg-color:              hsla(#{hex2hsl($color)}, 1);\n    --md-accent-fg-color--transparent: hsla(#{hex2hsl($color)}, 0.1);\n\n    // Inverted text for lighter shades\n    @if index(\"lime\" \"yellow\" \"amber\" \"orange\", $name) {\n      --md-accent-bg-color:           hsla(0, 0%, 0%, 0.87);\n      --md-accent-bg-color--light:    hsla(0, 0%, 0%, 0.54);\n    } @else {\n      --md-accent-bg-color:           hsla(0, 0%, 100%, 1);\n      --md-accent-bg-color--light:    hsla(0, 0%, 100%, 0.7);\n    }\n  }\n}\n","////\n/// Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\n///\n/// Permission is hereby granted, free of charge, to any person obtaining a\n/// copy of this software and associated documentation files (the \"Software\"),\n/// to deal in the Software without restriction, including without limitation\n/// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n/// and/or sell copies of the Software, and to permit persons to whom the\n/// Software is furnished to do so, subject to the following conditions:\n///\n/// The above copyright notice and this permission notice shall be included in\n/// all copies or substantial portions of the Software.\n///\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n/// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL\n/// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n/// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n/// DEALINGS\n////\n\n// ----------------------------------------------------------------------------\n// Rules\n// ----------------------------------------------------------------------------\n\n@each $name, $colors in (\n  \"red\":         $clr-red-400         $clr-red-300         $clr-red-600,\n  \"pink\":        $clr-pink-500        $clr-pink-400        $clr-pink-700,\n  \"purple\":      $clr-purple-400      $clr-purple-300      $clr-purple-600,\n  \"deep-purple\": $clr-deep-purple-400 $clr-deep-purple-300 $clr-deep-purple-500,\n  \"indigo\":      $clr-indigo-500      $clr-indigo-400      $clr-indigo-700,\n  \"blue\":        $clr-blue-500        $clr-blue-400        $clr-blue-700,\n  \"light-blue\":  $clr-light-blue-500  $clr-light-blue-400  $clr-light-blue-700,\n  \"cyan\":        $clr-cyan-500        $clr-cyan-400        $clr-cyan-700,\n  \"teal\":        $clr-teal-500        $clr-teal-400        $clr-teal-700,\n  \"green\":       $clr-green-500       $clr-green-400       $clr-green-700,\n  \"light-green\": $clr-light-green-500 $clr-light-green-400 $clr-light-green-700,\n  \"lime\":        $clr-lime-500        $clr-lime-400        $clr-lime-700,\n  \"yellow\":      $clr-yellow-500      $clr-yellow-400      $clr-yellow-700,\n  \"amber\":       $clr-amber-500       $clr-amber-400       $clr-amber-700,\n  \"orange\":      $clr-orange-400      $clr-orange-400      $clr-orange-600,\n  \"deep-orange\": $clr-deep-orange-400 $clr-deep-orange-300 $clr-deep-orange-600,\n  \"brown\":       $clr-brown-500       $clr-brown-400       $clr-brown-700,\n  \"grey\":        $clr-grey-600        $clr-grey-500        $clr-grey-700,\n  \"blue-grey\":   $clr-blue-grey-600   $clr-blue-grey-500   $clr-blue-grey-700\n) {\n\n  // Color palette\n  [data-md-color-primary=\"#{$name}\"] {\n    --md-primary-fg-color:             hsla(#{hex2hsl(nth($colors, 1))}, 1);\n    --md-primary-fg-color--light:      hsla(#{hex2hsl(nth($colors, 2))}, 1);\n    --md-primary-fg-color--dark:       hsla(#{hex2hsl(nth($colors, 3))}, 1);\n\n    // Inverted text for lighter shades\n    @if index(\"lime\" \"yellow\" \"amber\" \"orange\", $name) {\n      --md-primary-bg-color:           hsla(0, 0%, 0%, 0.87);\n      --md-primary-bg-color--light:    hsla(0, 0%, 0%, 0.54);\n    } @else {\n      --md-primary-bg-color:           hsla(0, 0%, 100%, 1);\n      --md-primary-bg-color--light:    hsla(0, 0%, 100%, 0.7);\n    }\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Rules: white\n// ----------------------------------------------------------------------------\n\n// Color palette\n[data-md-color-primary=\"white\"] {\n  --md-primary-fg-color:               hsla(0, 0%, 100%, 1);\n  --md-primary-fg-color--light:        hsla(0, 0%, 100%, 0.7);\n  --md-primary-fg-color--dark:         hsla(0, 0%, 0%, 0.07);\n  --md-primary-bg-color:               hsla(0, 0%, 0%, 0.87);\n  --md-primary-bg-color--light:        hsla(0, 0%, 0%, 0.54);\n\n  // Text color shades\n  --md-text-link-color:                hsla(#{hex2hsl($clr-indigo-500)}, 1);\n\n  // Add a border if there are no tabs\n  .md-hero--expand {\n    border-bottom: px2rem(1px) solid hsla(0, 0%, 0%, 0.07);\n  }\n\n  // [tablet -]: Set bottom border for hero\n  @include break-to-device(tablet) {\n\n    // Hero teaser\n    .md-hero {\n      border-bottom: px2rem(1px) solid hsla(0, 0%, 0%, 0.07);\n    }\n  }\n\n  // [tablet portrait +]: Change color of search input\n  @include break-from-device(tablet landscape) {\n\n    // Search input\n    .md-search__input {\n      background-color: hsla(0, 0%, 0%, 0.07);\n\n      // Icon color\n      + .md-search__icon {\n        color: hsla(0, 0%, 0%, 0.87);\n      }\n\n      // Placeholder color\n      &::placeholder {\n        color: hsla(0, 0%, 0%, 0.54);\n      }\n\n      // Hovered search field\n      &:hover {\n        background-color: hsla(0, 0%, 0%, 0.32);\n      }\n    }\n  }\n\n  // [screen +]: Set bottom border for tabs\n  @include break-from-device(screen) {\n\n    // Tabs with outline\n    .md-tabs {\n      border-bottom: px2rem(1px) solid hsla(0, 0%, 0%, 0.07);\n    }\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Rules: black\n// ----------------------------------------------------------------------------\n\n// Color palette\n[data-md-color-primary=\"black\"] {\n  --md-primary-fg-color:               hsla(0, 0%, 0%, 1);\n  --md-primary-fg-color--light:        hsla(0, 0%, 0%, 0.54);\n  --md-primary-fg-color--dark:         hsla(0, 0%, 0%, 1);\n  --md-primary-bg-color:               hsla(0, 0%, 100%, 1);\n  --md-primary-bg-color--light:        hsla(0, 0%, 100%, 0.7);\n\n  // Text color shades\n  --md-text-link-color:                hsla(#{hex2hsl($clr-indigo-500)}, 1);\n\n  // Application header (stays always on top)\n  .md-header {\n    background-color: hsla(0, 0%, 0%, 1);\n  }\n\n  // Hero teaser\n  .md-hero {\n    background-color: hsla(0, 0%, 0%, 1);\n  }\n\n  // [tablet portrait -]: Layered navigation\n  @include break-to-device(tablet portrait) {\n\n    // Repository containing source\n    .md-nav__source {\n      background-color: hsla(0, 0%, 0%, 0.87);\n    }\n  }\n\n  // [tablet landscape +]: Header-embedded search\n  @include break-from-device(tablet landscape) {\n\n    // Search input\n    .md-search__input {\n      background-color: hsla(0, 0%, 100%, 0.12);\n\n      // Hovered search field\n      &:hover {\n        background-color: hsla(0, 0%, 100%, 0.3);\n      }\n    }\n  }\n\n  // [tablet -]: Layered navigation\n  @include break-to-device(tablet) {\n\n    // Site title in main navigation\n    html & .md-nav--primary .md-nav__title[for=\"__drawer\"] {\n      background-color: hsla(0, 0%, 0%, 1);\n    }\n  }\n\n  // [screen +]: Set background color for tabs\n  @include break-from-device(screen) {\n\n    // Tabs with outline\n    .md-tabs {\n      background-color: hsla(0, 0%, 0%, 1);\n    }\n  }\n}\n","////\r\n/// Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n///\r\n/// Permission is hereby granted, free of charge, to any person obtaining a\r\n/// copy of this software and associated documentation files (the \"Software\"),\r\n/// to deal in the Software without restriction, including without limitation\r\n/// the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n/// and/or sell copies of the Software, and to permit persons to whom the\r\n/// Software is furnished to do so, subject to the following conditions:\r\n///\r\n/// The above copyright notice and this permission notice shall be included in\r\n/// all copies or substantial portions of the Software.\r\n///\r\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n/// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL\r\n/// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n/// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n/// DEALINGS\r\n////\r\n\r\n// ----------------------------------------------------------------------------\r\n// Variables\r\n// ----------------------------------------------------------------------------\r\n\r\n///\r\n/// Device-specific breakpoints\r\n///\r\n/// @example\r\n///   $break-devices: (\r\n///     mobile: (\r\n///       portrait:  220px  479px,\r\n///       landscape: 480px  719px\r\n///     ),\r\n///     tablet: (\r\n///       portrait:  720px  959px,\r\n///       landscape: 960px  1219px\r\n///     ),\r\n///     screen: (\r\n///       small:     1220px 1599px,\r\n///       medium:    1600px 1999px,\r\n///       large:     2000px\r\n///     )\r\n///   );\r\n///\r\n$break-devices: () !default;\r\n\r\n// ----------------------------------------------------------------------------\r\n// Helpers\r\n// ----------------------------------------------------------------------------\r\n\r\n///\r\n/// Choose minimum and maximum device widths\r\n///\r\n@function break-select-min-max($devices) {\r\n  $min: 1000000;\r\n  $max: 0;\r\n  @each $key, $value in $devices {\r\n    @while type-of($value) == map {\r\n      $value: break-select-min-max($value);\r\n    }\r\n    @if type-of($value) == list {\r\n      @each $number in $value {\r\n        @if type-of($number) == number {\r\n          $min: min($number, $min);\r\n          @if $max != null {\r\n            $max: max($number, $max);\r\n          }\r\n        } @else {\r\n          @error \"Invalid number: #{$number}\";\r\n        }\r\n      }\r\n    } @else if type-of($value) == number {\r\n      $min: min($value, $min);\r\n      $max: null;\r\n    } @else {\r\n      @error \"Invalid value: #{$value}\";\r\n    }\r\n  }\r\n  @return $min, $max;\r\n}\r\n\r\n///\r\n/// Select minimum and maximum widths for a device breakpoint\r\n///\r\n@function break-select-device($device) {\r\n  $current: $break-devices;\r\n  @for $n from 1 through length($device) {\r\n    @if type-of($current) == map {\r\n      $current: map-get($current, nth($device, $n));\r\n    } @else {\r\n      @error \"Invalid device map: #{$devices}\";\r\n    }\r\n  }\r\n  @if type-of($current) == list or type-of($current) == number {\r\n    $current: (default: $current);\r\n  }\r\n  @return break-select-min-max($current);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Mixins\r\n// ----------------------------------------------------------------------------\r\n\r\n///\r\n/// A minimum-maximum media query breakpoint\r\n///\r\n@mixin break-at($breakpoint) {\r\n  @if type-of($breakpoint) == number {\r\n    @media screen and (min-width: $breakpoint) {\r\n      @content;\r\n    }\r\n  } @else if type-of($breakpoint) == list {\r\n    $min: nth($breakpoint, 1);\r\n    $max: nth($breakpoint, 2);\r\n    @if type-of($min) == number and type-of($max) == number {\r\n      @media screen and (min-width: $min) and (max-width: $max) {\r\n        @content;\r\n      }\r\n    } @else {\r\n      @error \"Invalid breakpoint: #{$breakpoint}\";\r\n    }\r\n  } @else {\r\n    @error \"Invalid breakpoint: #{$breakpoint}\";\r\n  }\r\n}\r\n\r\n///\r\n/// An orientation media query breakpoint\r\n///\r\n@mixin break-at-orientation($breakpoint) {\r\n  @if type-of($breakpoint) == string {\r\n    @media screen and (orientation: $breakpoint) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @error \"Invalid breakpoint: #{$breakpoint}\";\r\n  }\r\n}\r\n\r\n///\r\n/// A maximum-aspect-ratio media query breakpoint\r\n///\r\n@mixin break-at-ratio($breakpoint) {\r\n  @if type-of($breakpoint) == number {\r\n    @media screen and (max-aspect-ratio: $breakpoint) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @error \"Invalid breakpoint: #{$breakpoint}\";\r\n  }\r\n}\r\n\r\n///\r\n/// A minimum-maximum media query device breakpoint\r\n///\r\n@mixin break-at-device($device) {\r\n  @if type-of($device) == string {\r\n    $device: $device,;\r\n  }\r\n  @if type-of($device) == list {\r\n    $breakpoint: break-select-device($device);\r\n    @if nth($breakpoint, 2) != null {\r\n      $min: nth($breakpoint, 1);\r\n      $max: nth($breakpoint, 2);\r\n      @media screen and (min-width: $min) and (max-width: $max) {\r\n        @content;\r\n      }\r\n    } @else {\r\n      @error \"Invalid device: #{$device}\";\r\n    }\r\n  } @else {\r\n    @error \"Invalid device: #{$device}\";\r\n  }\r\n}\r\n\r\n///\r\n/// A minimum media query device breakpoint\r\n///\r\n@mixin break-from-device($device) {\r\n  @if type-of($device) == string {\r\n    $device: $device,;\r\n  }\r\n  @if type-of($device) == list {\r\n    $breakpoint: break-select-device($device);\r\n    $min: nth($breakpoint, 1);\r\n    @media screen and (min-width: $min) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @error \"Invalid device: #{$device}\";\r\n  }\r\n}\r\n\r\n///\r\n/// A maximum media query device breakpoint\r\n///\r\n@mixin break-to-device($device) {\r\n  @if type-of($device) == string {\r\n    $device: $device,;\r\n  }\r\n  @if type-of($device) == list {\r\n    $breakpoint: break-select-device($device);\r\n    $max: nth($breakpoint, 2);\r\n    @media screen and (max-width: $max) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @error \"Invalid device: #{$device}\";\r\n  }\r\n}\r\n","////\n/// Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\n///\n/// Permission is hereby granted, free of charge, to any person obtaining a\n/// copy of this software and associated documentation files (the \"Software\"),\n/// to deal in the Software without restriction, including without limitation\n/// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n/// and/or sell copies of the Software, and to permit persons to whom the\n/// Software is furnished to do so, subject to the following conditions:\n///\n/// The above copyright notice and this permission notice shall be included in\n/// all copies or substantial portions of the Software.\n///\n/// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n/// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL\n/// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n/// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n/// DEALINGS\n////\n\n// ----------------------------------------------------------------------------\n// Rules\n// ----------------------------------------------------------------------------\n\n// Slate theme, i.e. dark mode\n[data-md-color-scheme=\"slate\"] {\n\n  // Default color shades\n  --md-default-fg-color:               hsla(0, 0%, 100%, 1);\n  --md-default-fg-color--light:        hsla(0, 0%, 100%, 0.87);\n  --md-default-fg-color--lighter:      hsla(0, 0%, 100%, 0.32);\n  --md-default-fg-color--lightest:     hsla(0, 0%, 100%, 0.12);\n  --md-default-bg-color:               hsla(232, 15%, 21%, 1);\n  --md-default-bg-color--light:        hsla(232, 15%, 21%, 0.54);\n  --md-default-bg-color--lighter:      hsla(232, 15%, 21%, 0.26);\n  --md-default-bg-color--lightest:     hsla(232, 15%, 21%, 0.07);\n\n  // Code color shades\n  --md-code-bg-color:                  hsla(232, 15%, 18%, 1);\n  --md-code-fg-color:                  hsla(60, 30%, 96%, 1);\n\n  // Text color shades\n  --md-text-color:                     var(--md-default-fg-color--light);\n  --md-text-link-color:                var(--md-primary-fg-color);\n\n  // Admonition color shades\n  --md-admonition-bg-color:            hsla(0, 0%, 100%, 0.025);\n  --md-admonition-fg-color:            var(--md-default-fg-color);\n\n  // Footer color shades\n  --md-footer-bg-color:                hsla(232, 15%, 12%, 0.87);\n  --md-footer-bg-color--dark:          hsla(232, 15%, 10%, 1);\n}\n"],"sourceRoot":""}