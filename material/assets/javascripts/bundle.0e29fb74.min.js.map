{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/javascripts/browser/document/index.ts","webpack:///./src/assets/javascripts/browser/element/_/index.ts","webpack:///./src/assets/javascripts/browser/element/focus/index.ts","webpack:///./src/assets/javascripts/browser/element/offset/index.ts","webpack:///./src/assets/javascripts/browser/element/select/index.ts","webpack:///./src/assets/javascripts/browser/element/size/index.ts","webpack:///./src/assets/javascripts/browser/keyboard/index.ts","webpack:///./src/assets/javascripts/browser/location/_/index.ts","webpack:///./src/assets/javascripts/browser/location/base/index.ts","webpack:///./src/assets/javascripts/browser/location/hash/index.ts","webpack:///./src/assets/javascripts/browser/media/index.ts","webpack:///./src/assets/javascripts/browser/toggle/index.ts","webpack:///./src/assets/javascripts/browser/viewport/offset/index.ts","webpack:///./src/assets/javascripts/browser/viewport/size/index.ts","webpack:///./src/assets/javascripts/browser/viewport/_/index.ts","webpack:///./src/assets/javascripts/browser/worker/index.ts","webpack:///./src/assets/javascripts/utilities/config/index.ts","webpack:///./src/assets/javascripts/utilities/jsx/index.ts","webpack:///./src/assets/javascripts/utilities/rxjs/index.ts","webpack:///./src/assets/javascripts/utilities/string/index.ts","webpack:///./src/assets/javascripts/components/index.ts","webpack:///./src/assets/javascripts/integrations/clipboard/index.ts","webpack:///./src/assets/javascripts/integrations/dialog/index.ts","webpack:///./src/assets/javascripts/integrations/instant/index.ts","webpack:///./src/assets/javascripts/integrations/keyboard/index.ts","webpack:///./src/assets/javascripts/integrations/search/_/index.ts","webpack:///./src/assets/javascripts/integrations/search/document/index.ts","webpack:///./src/assets/javascripts/integrations/search/highlighter/index.ts","webpack:///./src/assets/javascripts/integrations/search/transform/index.ts","webpack:///./src/assets/javascripts/integrations/search/worker/message/index.ts","webpack:///./src/assets/javascripts/integrations/search/worker/_/index.ts","webpack:///./src/assets/javascripts/components/shared/sidebar/set/index.ts","webpack:///./src/assets/javascripts/components/_/index.ts","webpack:///./src/assets/javascripts/components/toc/anchor/set/index.ts","webpack:///./src/assets/javascripts/components/shared/index.ts","webpack:///./src/assets/javascripts/templates/clipboard/index.tsx","webpack:///./src/assets/javascripts/templates/search/index.tsx","webpack:///./src/assets/javascripts/templates/source/index.tsx","webpack:///./src/assets/javascripts/templates/table/index.tsx","webpack:///./src/assets/javascripts/components/navigation/layer/set/index.ts","webpack:///./src/assets/javascripts/components/navigation/layer/index.ts","webpack:///./src/assets/javascripts/components/toc/anchor/index.ts","webpack:///./src/assets/javascripts/components/navigation/index.ts","webpack:///./src/assets/javascripts/components/navigation/_/index.ts","webpack:///./src/assets/javascripts/components/shared/sidebar/index.ts","webpack:///./src/assets/javascripts/components/shared/sidebar/react/index.ts","webpack:///./src/assets/javascripts/components/navigation/layer/react/index.ts","webpack:///./src/assets/javascripts/components/toc/index.ts","webpack:///./src/assets/javascripts/components/toc/_/index.ts","webpack:///./src/assets/javascripts/components/toc/anchor/react/index.ts","webpack:///./src/assets/javascripts/components/search/_/index.ts","webpack:///./src/assets/javascripts/components/search/query/_/index.ts","webpack:///./src/assets/javascripts/components/search/query/react/index.ts","webpack:///./src/assets/javascripts/components/search/reset/_/index.ts","webpack:///./src/assets/javascripts/components/search/reset/react/index.ts","webpack:///./src/assets/javascripts/components/search/result/set/index.ts","webpack:///./src/assets/javascripts/components/search/result/react/index.ts","webpack:///./src/assets/javascripts/components/search/result/_/index.ts","webpack:///./src/assets/javascripts/components/hero/_/index.ts","webpack:///./src/assets/javascripts/components/hero/react/index.ts","webpack:///./src/assets/javascripts/components/hero/set/index.ts","webpack:///./src/assets/javascripts/components/tabs/_/index.ts","webpack:///./src/assets/javascripts/components/tabs/react/index.ts","webpack:///./src/assets/javascripts/components/tabs/set/index.ts","webpack:///./src/assets/javascripts/components/header/_/index.ts","webpack:///./src/assets/javascripts/components/header/react/index.ts","webpack:///./src/assets/javascripts/components/header/set/index.ts","webpack:///./src/assets/javascripts/components/main/_/index.ts","webpack:///./src/assets/javascripts/components/main/react/index.ts","webpack:///./src/assets/javascripts/components/main/set/index.ts","webpack:///./src/assets/javascripts/patches/scrollfix/index.ts","webpack:///./src/assets/javascripts/patches/source/index.ts","webpack:///./src/assets/javascripts/patches/source/github/index.ts","webpack:///./src/assets/javascripts/patches/source/gitlab/index.ts","webpack:///./src/assets/javascripts/index.ts","webpack:///./src/assets/javascripts/patches/details/index.ts","webpack:///./src/assets/javascripts/patches/script/index.ts","webpack:///./src/assets/javascripts/patches/table/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","watchDocument","document$","ReplaySubject","fromEvent","document","pipe","mapTo","subscribe","getElement","selector","node","querySelector","undefined","getElementOrThrow","el","ReferenceError","getActiveElement","activeElement","HTMLElement","getElements","Array","from","querySelectorAll","createElement","tagName","replaceElement","source","target","replaceWith","setElementFocus","focus","blur","watchElementFocus","merge","map","type","startWith","shareReplay","getElementOffset","x","scrollLeft","y","scrollTop","watchElementOffset","setElementSelection","HTMLInputElement","Error","select","watchElementSize","fromEventPattern","next","contentRect","width","Math","round","height","observe","offsetWidth","offsetHeight","getElementSize","isSusceptibleToKeyboard","isContentEditable","watchKeyboard","filter","ev","metaKey","ctrlKey","claim","preventDefault","stopPropagation","share","setLocation","url","location","href","isLocalLocation","ref","host","test","pathname","isAnchorLocation","hash","watchLocation","BehaviorSubject","URL","watchLocationBase","base","location$","take","toString","replace","getLocationHash","substring","setLocationHash","addEventListener","click","watchLocationHash","watchMedia","query","media","matchMedia","addListener","matches","toggles","drawer","search","getToggle","checked","setToggle","watchToggle","getViewportOffset","max","pageXOffset","pageYOffset","setViewportOffset","scrollTo","getViewportSize","innerWidth","innerHeight","watchViewport","combineLatest","passive","offset","size","watchViewportAt","header$","viewport$","size$","distinctUntilKeyChanged","offset$","offsetLeft","offsetTop","watchWorker","worker","tx$","rx$","pluck","throttle","leading","trailing","tap","message","postMessage","switchMapTo","isConfig","config","features","createElementNS","setAttribute","setAttributeNS","appendChild","child","innerHTML","Node","isArray","h","attributes","keys","attr","children","cache","factory","defer","sessionStorage","getItem","of","JSON","parse","value$","setItem","stringify","err","lang","translate","textContent","truncate","toFixed","len","charCodeAt","setupClipboard","dialog$","forEach","block","index","parent","parentElement","id","insertBefore","clipboard$","on","clearSelection","setupDialog","duration","Subject","dialog","classList","add","switchMap","text","body","container","observeOn","animationFrame","delay","removeAttribute","remove","setupInstantLoading","history","scrollRestoration","favicon","state$","closest","push$","pop$","state","distinctUntilChanged","prev","ajax$","skip","ajax","responseType","withCredentials","catchError","sample","pushState","dom","DOMParser","response","parseFromString","instant$","withLatestFrom","title","head","dispatchEvent","CustomEvent","debounceTime","replaceState","bufferCount","setupKeyboard","keyboard$","active","els","indexOf","docs","pipeline","this","documents","Map","doc","path","linked","set","setupSearchDocumentMap","highlight","separator","RegExp","_","term","trim","match","setupSearchHighlighter","lunr","reset","fn","use","multiLanguage","field","boost","Index","load","groups","reduce","results","sections","article","section","console","warn","defaultTransform","SearchMessageType","isSearchResultMessage","RESULT","setupSearchIndex","split","identity","setupSearchWorker","index$","base$","Worker","SETUP","setSidebarOffset","style","top","resetSidebarOffset","setSidebarHeight","resetSidebarHeight","setSidebarLock","resetSidebarLock","components$","setupComponents","names","components","useComponent","setAnchorBlur","resetAnchorBlur","setAnchorActive","toggle","resetAnchorActive","css","renderClipboardButton","class","xmlns","viewBox","renderSearchResult","icon","tabIndex","renderSource","facts","fact","renderTable","table","setOverflowScrolling","webkitOverflowScrolling","resetOverflowScrolling","mountNavigation","main$","screen$","screen","sidebar","layer","watchSidebar","adjust","min","lock","a","b","applySidebar","watchNavigationLayer","label","input","htmlFor","applyNavigationLayer","mountTableOfContents","tablet$","tablet","sidebar$","anchors$","anchors","watchAnchorList","decodeURIComponent","adjust$","header","anchor","pop","applyAnchorList","mountSearch","query$","reset$","result$","mountSearchQuery","options","transform","focus$","watchSearchQuery","QUERY","mountSearchReset","watchSearchReset","addToSearchResultList","applySearchResult","fetch$","list","meta","setSearchResultMeta","resetSearchResultMeta","scan","scrollHeight","finalize","resetSearchResultList","mountSearchResult","mountHero","hidden","setHeroHidden","resetHeroHidden","applyHero","mountTabs","setTabsHidden","resetTabsHidden","applyTabs","mountHeader","styles","getComputedStyle","includes","position","sticky","watchHeader","type$","main","hx","setHeaderTitleActive","resetHeaderTitleActive","applyHeaderType","mountMain","setHeaderShadow","resetHeaderShadow","border$","bottom","watchMain","isAppleDevice","navigator","userAgent","fetchSourceFacts","toLowerCase","user","repo","status","stargazers_count","forks_count","public_repos","fetchSourceFactsFromGitHub","project","encodeURIComponent","star_count","fetchSourceFactsFromGitLab","setScrollLock","resetScrollLock","parseInt","initialize","SyntaxError","hash$","els$","details","open","scrollIntoView","patchDetails","src","script","hasAttribute","patchSource","sentinel","patchTables","iif","patchScrollfix","navigation$","toc$","tabs$","hero$","search$","protocol","visibility","values","documentElement"],"mappings":"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","file":"assets/javascripts/bundle.0e29fb74.min.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([87,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { ReplaySubject, Subject, fromEvent } from \"rxjs\"\r\nimport { mapTo } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch document\r\n *\r\n * Documents must be implemented as subjects, so all downstream observables are\r\n * automatically updated when a new document is emitted. This enabled features\r\n * like instant loading.\r\n *\r\n * @return Document subject\r\n */\r\nexport function watchDocument(): Subject<Document> {\r\n  const document$ = new ReplaySubject<Document>()\r\n  fromEvent(document, \"DOMContentLoaded\")\r\n    .pipe(\r\n      mapTo(document)\r\n    )\r\n      .subscribe(document$)\r\n\r\n  /* Return document */\r\n  return document$\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve an element matching the query selector\r\n *\r\n * @template T - Element type\r\n *\r\n * @param selector - Query selector\r\n * @param node - Node of reference\r\n *\r\n * @return Element or nothing\r\n */\r\nexport function getElement<T extends HTMLElement>(\r\n  selector: string, node: ParentNode = document\r\n): T | undefined {\r\n  return node.querySelector<T>(selector) || undefined\r\n}\r\n\r\n/**\r\n * Retrieve an element matching a query selector or throw a reference error\r\n *\r\n * @template T - Element type\r\n *\r\n * @param selector - Query selector\r\n * @param node - Node of reference\r\n *\r\n * @return Element\r\n */\r\nexport function getElementOrThrow<T extends HTMLElement>(\r\n  selector: string, node: ParentNode = document\r\n): T {\r\n  const el = getElement<T>(selector, node)\r\n  if (typeof el === \"undefined\")\r\n    throw new ReferenceError(\r\n      `Missing element: expected \"${selector}\" to be present`\r\n    )\r\n  return el\r\n}\r\n\r\n/**\r\n * Retrieve the currently active element\r\n *\r\n * @return Element or nothing\r\n */\r\nexport function getActiveElement(): HTMLElement | undefined {\r\n  return document.activeElement instanceof HTMLElement\r\n    ? document.activeElement\r\n    : undefined\r\n}\r\n\r\n/**\r\n * Retrieve all elements matching the query selector\r\n *\r\n * @template T - Element type\r\n *\r\n * @param selector - Query selector\r\n * @param node - Node of reference\r\n *\r\n * @return Elements\r\n */\r\nexport function getElements<T extends HTMLElement>(\r\n  selector: string, node: ParentNode = document\r\n): T[] {\r\n  return Array.from(node.querySelectorAll<T>(selector))\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Create an element\r\n *\r\n * @template T - Tag name type\r\n *\r\n * @param tagName - Tag name\r\n *\r\n * @return Element\r\n */\r\nexport function createElement<\r\n  T extends keyof HTMLElementTagNameMap\r\n>(tagName: T): HTMLElementTagNameMap[T] {\r\n  return document.createElement(tagName)\r\n}\r\n\r\n/**\r\n * Replace an element with another element\r\n *\r\n * @param source - Source element\r\n * @param target - Target element\r\n */\r\nexport function replaceElement(\r\n  source: HTMLElement, target: Node\r\n): void {\r\n  source.replaceWith(target)\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent, merge } from \"rxjs\"\r\nimport { map, shareReplay, startWith } from \"rxjs/operators\"\r\n\r\nimport { getActiveElement } from \"../_\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set element focus\r\n *\r\n * @param el - Element\r\n * @param value - Whether the element should be focused\r\n */\r\nexport function setElementFocus(\r\nel: HTMLElement, value: boolean = true\r\n): void {\r\n  if (value)\r\n    el.focus()\r\n  else\r\n    el.blur()\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch element focus\r\n *\r\n * @param el - Element\r\n *\r\n * @return Element focus observable\r\n */\r\nexport function watchElementFocus(\r\n  el: HTMLElement\r\n): Observable<boolean> {\r\n  return merge(\r\n    fromEvent<FocusEvent>(el, \"focus\"),\r\n    fromEvent<FocusEvent>(el, \"blur\")\r\n  )\r\n    .pipe(\r\n      map(({ type }) => type === \"focus\"),\r\n      startWith(el === getActiveElement()),\r\n      shareReplay(1)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent, merge } from \"rxjs\"\r\nimport { map, shareReplay, startWith } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Element offset\r\n */\r\nexport interface ElementOffset {\r\n  x: number                            /* Horizontal offset */\r\n  y: number                            /* Vertical offset */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve element offset\r\n *\r\n * @param el - Element\r\n *\r\n * @return Element offset\r\n */\r\nexport function getElementOffset(el: HTMLElement): ElementOffset {\r\n  return {\r\n    x: el.scrollLeft,\r\n    y: el.scrollTop\r\n  }\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch element offset\r\n *\r\n * @param el - Element\r\n *\r\n * @return Element offset observable\r\n */\r\nexport function watchElementOffset(\r\n  el: HTMLElement\r\n): Observable<ElementOffset> {\r\n  return merge(\r\n    fromEvent(el, \"scroll\"),\r\n    fromEvent(window, \"resize\")\r\n  )\r\n    .pipe(\r\n      map(() => getElementOffset(el)),\r\n      startWith(getElementOffset(el)),\r\n      shareReplay(1)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set element text selection\r\n *\r\n * @param el - Element\r\n */\r\nexport function setElementSelection(\r\n  el: HTMLElement\r\n): void {\r\n  if (el instanceof HTMLInputElement)\r\n    el.select()\r\n  else\r\n    throw new Error(\"Not implemented\")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport ResizeObserver from \"resize-observer-polyfill\"\r\nimport { Observable, fromEventPattern } from \"rxjs\"\r\nimport { shareReplay, startWith } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Element offset\r\n */\r\nexport interface ElementSize {\r\n  width: number                        /* Element width */\r\n  height: number                       /* Element height */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve element size\r\n *\r\n * @param el - Element\r\n *\r\n * @return Element size\r\n */\r\nexport function getElementSize(el: HTMLElement): ElementSize {\r\n  return {\r\n    width:  el.offsetWidth,\r\n    height: el.offsetHeight\r\n  }\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch element size\r\n *\r\n * @param el - Element\r\n *\r\n * @return Element size observable\r\n */\r\nexport function watchElementSize(\r\n  el: HTMLElement\r\n): Observable<ElementSize> {\r\n  return fromEventPattern<ElementSize>(next => {\r\n    new ResizeObserver(([{ contentRect }]) => next({\r\n      width:  Math.round(contentRect.width),\r\n      height: Math.round(contentRect.height)\r\n    }))\r\n      .observe(el)\r\n  })\r\n    .pipe(\r\n      startWith(getElementSize(el)),\r\n      shareReplay(1)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent } from \"rxjs\"\r\nimport { filter, map, share } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Key\r\n */\r\nexport interface Key {\r\n  type: string                         /* Key type */\r\n  claim(): void                        /* Key claim */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Check whether an element may receive keyboard input\r\n *\r\n * @param el - Element\r\n *\r\n * @return Test result\r\n */\r\nexport function isSusceptibleToKeyboard(el: HTMLElement): boolean {\r\n  switch (el.tagName) {\r\n\r\n    /* Form elements */\r\n    case \"INPUT\":\r\n    case \"SELECT\":\r\n    case \"TEXTAREA\":\r\n      return true\r\n\r\n    /* Everything else */\r\n    default:\r\n      return el.isContentEditable\r\n  }\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch keyboard\r\n *\r\n * @return Keyboard observable\r\n */\r\nexport function watchKeyboard(): Observable<Key> {\r\n  return fromEvent<KeyboardEvent>(window, \"keydown\")\r\n    .pipe(\r\n      filter(ev => !(ev.metaKey || ev.ctrlKey)),\r\n      map(ev => ({\r\n        type: ev.key,\r\n        claim() {\r\n          ev.preventDefault()\r\n          ev.stopPropagation()\r\n        }\r\n      })),\r\n      share()\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { BehaviorSubject, Subject } from \"rxjs\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve location\r\n *\r\n * This function will return a `URL` object (and not `Location`) in order to\r\n * normalize typings across the application. Furthermore, locations need to be\r\n * tracked without setting them and `Location` is a singleton which represents\r\n * the current location.\r\n *\r\n * @return URL\r\n */\r\nexport function getLocation(): URL {\r\n  return new URL(location.href)\r\n}\r\n\r\n/**\r\n * Set location\r\n *\r\n * @param url - URL to change to\r\n */\r\nexport function setLocation(url: URL): void {\r\n  location.href = url.href\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Check whether a URL is a local link or a file (except `.html`)\r\n *\r\n * @param url - URL or HTML anchor element\r\n * @param ref - Reference URL\r\n *\r\n * @return Test result\r\n */\r\nexport function isLocalLocation(\r\n  url: URL | HTMLAnchorElement,\r\n  ref: URL | Location = location\r\n): boolean {\r\n  return url.host === ref.host\r\n      && /^(?:\\/[\\w-]+)*(?:\\/?|\\.html)$/i.test(url.pathname)\r\n}\r\n\r\n/**\r\n * Check whether a URL is an anchor link on the current page\r\n *\r\n * @param url - URL or HTML anchor element\r\n * @param ref - Reference URL\r\n *\r\n * @return Test result\r\n */\r\nexport function isAnchorLocation(\r\n  url: URL | HTMLAnchorElement,\r\n  ref: URL | Location = location\r\n): boolean {\r\n  return url.pathname === ref.pathname\r\n      && url.hash.length > 0\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch location\r\n *\r\n * @return Location subject\r\n */\r\nexport function watchLocation(): Subject<URL> {\r\n  return new BehaviorSubject<URL>(getLocation())\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable } from \"rxjs\"\r\nimport { map, shareReplay, take } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n */\r\ninterface WatchOptions {\r\n  location$: Observable<URL>           /* Location observable */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch location base\r\n *\r\n * @return Location base observable\r\n */\r\nexport function watchLocationBase(\r\n  base: string, { location$ }: WatchOptions\r\n): Observable<string> {\r\n  return location$\r\n    .pipe(\r\n      take(1),\r\n      map(({ href }) => new URL(base, href)\r\n        .toString()\r\n        .replace(/\\/$/, \"\")\r\n      ),\r\n      shareReplay(1)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent } from \"rxjs\"\r\nimport { filter, map, share, startWith } from \"rxjs/operators\"\r\n\r\nimport { createElement } from \"browser\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve location hash\r\n *\r\n * @return Location hash\r\n */\r\nexport function getLocationHash(): string {\r\n  return location.hash.substring(1)\r\n}\r\n\r\n/**\r\n * Set location hash\r\n *\r\n * Setting a new fragment identifier via `location.hash` will have no effect\r\n * if the value doesn't change. When a new fragment identifier is set, we want\r\n * the browser to target the respective element at all times, which is why we\r\n * use this dirty little trick.\r\n *\r\n * @param hash - Location hash\r\n */\r\nexport function setLocationHash(hash: string): void {\r\n  const el = createElement(\"a\")\r\n  el.href = hash\r\n  el.addEventListener(\"click\", ev => ev.stopPropagation())\r\n  el.click()\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch location hash\r\n *\r\n * @return Location hash observable\r\n */\r\nexport function watchLocationHash(): Observable<string> {\r\n  return fromEvent<HashChangeEvent>(window, \"hashchange\")\r\n    .pipe(\r\n      map(getLocationHash),\r\n      startWith(getLocationHash()),\r\n      filter(hash => hash.length > 0),\r\n      share()\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEventPattern } from \"rxjs\"\r\nimport { shareReplay, startWith } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch media query\r\n *\r\n * @param query - Media query\r\n *\r\n * @return Media observable\r\n */\r\nexport function watchMedia(query: string): Observable<boolean> {\r\n  const media = matchMedia(query)\r\n  return fromEventPattern<boolean>(next =>\r\n    media.addListener(() => next(media.matches))\r\n  )\r\n    .pipe(\r\n      startWith(media.matches),\r\n      shareReplay(1)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent } from \"rxjs\"\r\nimport { map, startWith } from \"rxjs/operators\"\r\n\r\nimport { getElementOrThrow } from \"../element\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Toggle\r\n */\r\nexport type Toggle =\r\n  | \"drawer\"                           /* Toggle for drawer */\r\n  | \"search\"                           /* Toggle for search */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Data\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Toggle map\r\n */\r\nconst toggles: Record<Toggle, HTMLInputElement> = {\r\n  drawer: getElementOrThrow(`[data-md-toggle=drawer]`),\r\n  search: getElementOrThrow(`[data-md-toggle=search]`)\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve the value of a toggle\r\n *\r\n * @param name - Toggle\r\n *\r\n * @return Toggle value\r\n */\r\nexport function getToggle(name: Toggle): boolean {\r\n  return toggles[name].checked\r\n}\r\n\r\n/**\r\n * Set toggle\r\n *\r\n * Simulating a click event seems to be the most cross-browser compatible way\r\n * of changing the value while also emitting a `change` event. Before, Material\r\n * used `CustomEvent` to programmatically change the value of a toggle, but this\r\n * is a much simpler and cleaner solution which doesn't require a polyfill.\r\n *\r\n * @param name - Toggle\r\n * @param value - Toggle value\r\n */\r\nexport function setToggle(name: Toggle, value: boolean): void {\r\n  if (toggles[name].checked !== value)\r\n    toggles[name].click()\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch toggle\r\n *\r\n * @param name - Toggle\r\n *\r\n * @return Toggle value observable\r\n */\r\nexport function watchToggle(name: Toggle): Observable<boolean> {\r\n  const el = toggles[name]\r\n  return fromEvent(el, \"change\")\r\n    .pipe(\r\n      map(() => el.checked),\r\n      startWith(el.checked)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent, merge } from \"rxjs\"\r\nimport { map, startWith } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Viewport offset\r\n */\r\nexport interface ViewportOffset {\r\n  x: number                            /* Horizontal offset */\r\n  y: number                            /* Vertical offset */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve viewport offset\r\n *\r\n * On iOS Safari, viewport offset can be negative due to overflow scrolling.\r\n * As this may induce strange behaviors downstream, we'll just limit it to 0.\r\n *\r\n * @return Viewport offset\r\n */\r\nexport function getViewportOffset(): ViewportOffset {\r\n  return {\r\n    x: Math.max(0, pageXOffset),\r\n    y: Math.max(0, pageYOffset)\r\n  }\r\n}\r\n\r\n/**\r\n * Set viewport offset\r\n *\r\n * @param offset - Viewport offset\r\n */\r\nexport function setViewportOffset(\r\n  { x, y }: Partial<ViewportOffset>\r\n): void {\r\n  window.scrollTo(x || 0, y || 0)\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch viewport offset\r\n *\r\n * @return Viewport offset observable\r\n */\r\nexport function watchViewportOffset(): Observable<ViewportOffset> {\r\n  return merge(\r\n    fromEvent(window, \"scroll\", { passive: true }),\r\n    fromEvent(window, \"resize\", { passive: true })\r\n  )\r\n    .pipe(\r\n      map(getViewportOffset),\r\n      startWith(getViewportOffset())\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent } from \"rxjs\"\r\nimport { map, startWith } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Viewport size\r\n */\r\nexport interface ViewportSize {\r\n  width: number                        /* Viewport width */\r\n  height: number                       /* Viewport height */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Retrieve viewport size\r\n *\r\n * @return Viewport size\r\n */\r\nexport function getViewportSize(): ViewportSize {\r\n  return {\r\n    width:  innerWidth,\r\n    height: innerHeight\r\n  }\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch viewport size\r\n *\r\n * @return Viewport size observable\r\n */\r\nexport function watchViewportSize(): Observable<ViewportSize> {\r\n  return fromEvent(window, \"resize\", { passive: true })\r\n    .pipe(\r\n      map(getViewportSize),\r\n      startWith(getViewportSize())\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, combineLatest } from \"rxjs\"\r\nimport {\r\n  distinctUntilKeyChanged,\r\n  map,\r\n  shareReplay\r\n} from \"rxjs/operators\"\r\n\r\nimport { Header } from \"components\"\r\n\r\nimport {\r\n  ViewportOffset,\r\n  watchViewportOffset\r\n} from \"../offset\"\r\nimport {\r\n  ViewportSize,\r\n  watchViewportSize\r\n} from \"../size\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Viewport\r\n */\r\nexport interface Viewport {\r\n  offset: ViewportOffset               /* Viewport offset */\r\n  size: ViewportSize                   /* Viewport size */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch at options\r\n */\r\ninterface WatchAtOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch viewport\r\n *\r\n * @return Viewport observable\r\n */\r\nexport function watchViewport(): Observable<Viewport> {\r\n  return combineLatest([\r\n    watchViewportOffset(),\r\n    watchViewportSize()\r\n  ])\r\n    .pipe(\r\n      map(([offset, size]) => ({ offset, size })),\r\n      shareReplay(1)\r\n    )\r\n}\r\n\r\n/**\r\n * Watch viewport relative to element\r\n *\r\n * @param el - Element\r\n * @param options - Options\r\n *\r\n * @return Viewport observable\r\n */\r\nexport function watchViewportAt(\r\n  el: HTMLElement, { header$, viewport$ }: WatchAtOptions\r\n): Observable<Viewport> {\r\n  const size$ = viewport$\r\n    .pipe(\r\n      distinctUntilKeyChanged(\"size\")\r\n    )\r\n\r\n  /* Compute element offset */\r\n  const offset$ = combineLatest([size$, header$])\r\n    .pipe(\r\n      map((): ViewportOffset => ({\r\n        x: el.offsetLeft,\r\n        y: el.offsetTop\r\n      }))\r\n    )\r\n\r\n  /* Compute relative viewport, return hot observable */\r\n  return combineLatest([header$, viewport$, offset$])\r\n    .pipe(\r\n      map(([{ height }, { offset, size }, { x, y }]) => ({\r\n        offset: {\r\n          x: offset.x - x,\r\n          y: offset.y - y + height\r\n        },\r\n        size\r\n      })),\r\n      shareReplay(1)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, Subject, fromEventPattern } from \"rxjs\"\r\nimport {\r\n  pluck,\r\n  share,\r\n  switchMapTo,\r\n  tap,\r\n  throttle\r\n} from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Worker message\r\n */\r\nexport interface WorkerMessage {\r\n  type: unknown                        /* Message type */\r\n  data?: unknown                       /* Message data */\r\n}\r\n\r\n/**\r\n * Worker handler\r\n *\r\n * @template T - Message type\r\n */\r\nexport interface WorkerHandler<\r\n  T extends WorkerMessage\r\n> {\r\n  tx$: Subject<T>                      /* Message transmission subject */\r\n  rx$: Observable<T>                   /* Message receive observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n *\r\n * @template T - Worker message type\r\n */\r\ninterface WatchOptions<T extends WorkerMessage> {\r\n  tx$: Observable<T>                   /* Message transmission observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch a web worker\r\n *\r\n * This function returns an observable that will send all values emitted by the\r\n * message observable to the web worker. Web worker communication is expected\r\n * to be bidirectional (request-response) and synchronous. Messages that are\r\n * emitted during a pending request are throttled, the last one is emitted.\r\n *\r\n * @param worker - Web worker\r\n * @param options - Options\r\n *\r\n * @return Worker message observable\r\n */\r\nexport function watchWorker<T extends WorkerMessage>(\r\n  worker: Worker, { tx$ }: WatchOptions<T>\r\n): Observable<T> {\r\n\r\n  /* Intercept messages from worker-like objects */\r\n  const rx$ = fromEventPattern<MessageEvent>(next =>\r\n    worker.addEventListener(\"message\", next)\r\n  )\r\n    .pipe(\r\n      pluck<MessageEvent, T>(\"data\")\r\n    )\r\n\r\n  /* Send and receive messages, return hot observable */\r\n  return tx$\r\n    .pipe(\r\n      throttle(() => rx$, { leading: true, trailing: true }),\r\n      tap(message => worker.postMessage(message)),\r\n      switchMapTo(rx$),\r\n      share()\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { SearchIndex, SearchTransformFn } from \"integrations\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Feature flags\r\n */\r\nexport type Feature =\r\n  | \"tabs\"                             /* Tabs navigation */\r\n  | \"instant\"                          /* Instant loading\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Configuration\r\n */\r\nexport interface Config {\r\n  base: string                         /* Base URL */\r\n  features: Feature[]                  /* Feature flags */\r\n  search: {\r\n    worker: string                     /* Worker URL */\r\n    index?: Promise<SearchIndex>       /* Promise resolving with index */\r\n    transform?: SearchTransformFn      /* Transformation function */\r\n  }\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Ensure that the given value is a valid configuration\r\n *\r\n * We could use `jsonschema` or any other schema validation framework, but that\r\n * would just add more bloat to the bundle, so we'll keep it plain and simple.\r\n *\r\n * @param config - Configuration\r\n *\r\n * @return Test result\r\n */\r\nexport function isConfig(config: any): config is Config {\r\n  return typeof config === \"object\"\r\n      && typeof config.base === \"string\"\r\n      && typeof config.features === \"object\"\r\n      && typeof config.search === \"object\"\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n// tslint:disable no-null-keyword\r\n\r\nimport { JSX as JSXInternal } from \"preact\"\r\nimport { keys } from \"ramda\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * HTML and SVG attributes\r\n */\r\ntype Attributes =\r\n  & JSXInternal.HTMLAttributes\r\n  & JSXInternal.SVGAttributes\r\n  & Record<string, any>\r\n\r\n/**\r\n * Child element\r\n */\r\ntype Child =\r\n  | HTMLElement\r\n  | SVGElement\r\n  | Text\r\n  | string\r\n  | number\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Create an element\r\n *\r\n * @param tagName - HTML or SVG tag\r\n *\r\n * @return Element\r\n */\r\nfunction createElement(tagName: string): HTMLElement | SVGElement {\r\n  switch (tagName) {\r\n\r\n    /* SVG elements */\r\n    case \"svg\":\r\n    case \"path\":\r\n      return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName)\r\n\r\n    /* HTML elements */\r\n    default:\r\n      return document.createElement(tagName)\r\n  }\r\n}\r\n\r\n/**\r\n * Set an attribute\r\n *\r\n * @param el - Element\r\n * @param name - Attribute name\r\n * @param value - Attribute value\r\n */\r\nfunction setAttribute(\r\n  el: HTMLElement | SVGElement, name: string, value: string) {\r\n  switch (name) {\r\n\r\n    /* Attributes to be ignored */\r\n    case \"xmlns\":\r\n      break\r\n\r\n    /* Attributes of SVG elements */\r\n    case \"viewBox\":\r\n    case \"d\":\r\n      if (typeof value !== \"boolean\")\r\n        el.setAttributeNS(null, name, value)\r\n      else if (value)\r\n        el.setAttributeNS(null, name, \"\")\r\n      break\r\n\r\n    /* Attributes of HTML elements */\r\n    default:\r\n      if (typeof value !== \"boolean\")\r\n        el.setAttribute(name, value)\r\n      else if (value)\r\n        el.setAttribute(name, \"\")\r\n  }\r\n}\r\n\r\n/**\r\n * Append a child node to an element\r\n *\r\n * @param el - Element\r\n * @param child - Child node(s)\r\n */\r\nfunction appendChild(\r\n  el: HTMLElement | SVGElement, child: Child | Child[]\r\n): void {\r\n\r\n  /* Handle primitive types (including raw HTML) */\r\n  if (typeof child === \"string\" || typeof child === \"number\") {\r\n    el.innerHTML += child.toString()\r\n\r\n  /* Handle nodes */\r\n  } else if (child instanceof Node) {\r\n    el.appendChild(child)\r\n\r\n  /* Handle nested children */\r\n  } else if (Array.isArray(child)) {\r\n    for (const node of child)\r\n      appendChild(el, node)\r\n  }\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * JSX factory\r\n *\r\n * @param tagName - HTML or SVG tag\r\n * @param attributes - HTML attributes\r\n * @param children - Child elements\r\n *\r\n * @return Element\r\n */\r\nexport function h(\r\n  tagName: string, attributes: Attributes | null, ...children: Child[]\r\n): HTMLElement | SVGElement {\r\n  const el = createElement(tagName)\r\n\r\n  /* Set attributes, if any */\r\n  if (attributes)\r\n    for (const attr of keys(attributes))\r\n      setAttribute(el, attr, attributes[attr])\r\n\r\n  /* Append child nodes */\r\n  for (const child of children)\r\n    appendChild(el, child)\r\n\r\n  /* Return element */\r\n  return el\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Namespace\r\n * ------------------------------------------------------------------------- */\r\n\r\nexport declare namespace h {\r\n  namespace JSX {\r\n    type Element = HTMLElement | SVGElement\r\n    type IntrinsicElements = JSXInternal.IntrinsicElements\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, defer, of } from \"rxjs\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Cache the last value emitted by an observable in session storage\r\n *\r\n * If the key is not found in session storage, the factory is executed and the\r\n * latest value emitted will automatically be persisted to sessions storage.\r\n * Note that the values emitted by the returned observable must be serializable\r\n * as `JSON`, or data will be lost.\r\n *\r\n * @template T - Value type\r\n *\r\n * @param key - Cache key\r\n * @param factory - Observable factory\r\n *\r\n * @return Value observable\r\n */\r\nexport function cache<T>(\r\n  key: string, factory: () => Observable<T>\r\n): Observable<T> {\r\n  return defer(() => {\r\n    const data = sessionStorage.getItem(key)\r\n    if (data) {\r\n      return of(JSON.parse(data) as T)\r\n\r\n    /* Retrieve value from observable factory and write to storage */\r\n    } else {\r\n      const value$ = factory()\r\n      value$.subscribe(value => {\r\n        try {\r\n          sessionStorage.setItem(key, JSON.stringify(value))\r\n        } catch (err) {\r\n          /* Uncritical, just swallow */\r\n        }\r\n      })\r\n\r\n      /* Return value */\r\n      return value$\r\n    }\r\n  })\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { getElementOrThrow } from \"browser\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Translation keys\r\n */\r\ntype TranslateKey =\r\n  | \"clipboard.copy\"                   /* Copy to clipboard */\r\n  | \"clipboard.copied\"                 /* Copied to clipboard */\r\n  | \"search.config.lang\"               /* Search language */\r\n  | \"search.config.pipeline\"           /* Search pipeline */\r\n  | \"search.config.separator\"          /* Search separator */\r\n  | \"search.result.placeholder\"        /* Type to start searching */\r\n  | \"search.result.none\"               /* No matching documents */\r\n  | \"search.result.one\"                /* 1 matching document */\r\n  | \"search.result.other\"              /* # matching documents */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Data\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Translations\r\n */\r\nlet lang: Record<string, string>\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Translate the given key\r\n *\r\n * @param key - Key to be translated\r\n * @param value - Value to be replaced\r\n *\r\n * @return Translation\r\n */\r\nexport function translate(key: TranslateKey, value?: string): string {\r\n  if (typeof lang === \"undefined\") {\r\n    const el = getElementOrThrow(\"#__lang\")\r\n    lang = JSON.parse(el.textContent!)\r\n  }\r\n  if (typeof lang[key] === \"undefined\") {\r\n    throw new ReferenceError(`Invalid translation: ${key}`)\r\n  }\r\n  return typeof value !== \"undefined\"\r\n    ? lang[key].replace(\"#\", value)\r\n    : lang[key]\r\n}\r\n\r\n/**\r\n * Truncate a string after the given number of characters\r\n *\r\n * This is not a very reasonable approach, since the summaries kind of suck.\r\n * It would be better to create something more intelligent, highlighting the\r\n * search occurrences and making a better summary out of it, but this note was\r\n * written three years ago, so who knows if we'll ever fix it.\r\n *\r\n * @param value - Value to be truncated\r\n * @param n - Number of characters\r\n *\r\n * @return Truncated value\r\n */\r\nexport function truncate(value: string, n: number): string {\r\n  let i = n\r\n  if (value.length > i) {\r\n    while (value[i] !== \" \" && --i > 0); // tslint:disable-line\r\n    return `${value.substring(0, i)}...`\r\n  }\r\n  return value\r\n}\r\n\r\n/**\r\n * Round a number for display with source facts\r\n *\r\n * This is a reverse engineered version of GitHub's weird rounding algorithm\r\n * for stars, forks and all other numbers. While all numbers below `1,000` are\r\n * returned as-is, bigger numbers are converted to fixed numbers:\r\n *\r\n * - `1,049` => `1k`\r\n * - `1,050` => `1.1k`\r\n * - `1,949` => `1.9k`\r\n * - `1,950` => `2k`\r\n *\r\n * @param value - Original value\r\n *\r\n * @return Rounded value\r\n */\r\nexport function round(value: number): string {\r\n  if (value > 999) {\r\n    const digits = +((value - 950) % 1000 > 99)\r\n    return `${((value + 1) / 1000).toFixed(digits)}k`\r\n  } else {\r\n    return value.toString()\r\n  }\r\n}\r\n\r\n/**\r\n * Simple hash function\r\n *\r\n * @see https://bit.ly/2wsVjJ4 - Original source\r\n *\r\n * @param value - Value to be hashed\r\n *\r\n * @return Hash as 32bit integer\r\n */\r\nexport function hash(value: string): number {\r\n    let h = 0\r\n    for (let i = 0, len = value.length; i < len; i++) {\r\n      h  = ((h << 5) - h) + value.charCodeAt(i)\r\n      h |= 0 // Convert to 32bit integer\r\n    }\r\n    return h\r\n  }\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nexport * from \"./_\"\r\nexport * from \"./header\"\r\nexport * from \"./hero\"\r\nexport * from \"./main\"\r\nexport * from \"./navigation\"\r\nexport * from \"./search\"\r\nexport * from \"./shared\"\r\nexport * from \"./tabs\"\r\nexport * from \"./toc\"\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport * as ClipboardJS from \"clipboard\"\r\nimport { NEVER, Observable, Subject, fromEventPattern } from \"rxjs\"\r\nimport { mapTo, share, tap } from \"rxjs/operators\"\r\n\r\nimport { getElements } from \"browser\"\r\nimport { renderClipboardButton } from \"templates\"\r\nimport { translate } from \"utilities\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Setup options\r\n */\r\ninterface SetupOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n  dialog$: Subject<string>             /* Dialog subject */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set up clipboard\r\n *\r\n * This function implements the Clipboard.js integration and injects a button\r\n * into all code blocks when the document changes.\r\n *\r\n * @param options - Options\r\n *\r\n * @return Clipboard observable\r\n */\r\nexport function setupClipboard(\r\n  { document$, dialog$ }: SetupOptions\r\n): Observable<ClipboardJS.Event> {\r\n  if (!ClipboardJS.isSupported())\r\n    return NEVER\r\n\r\n  /* Inject 'copy-to-clipboard' buttons */\r\n  document$.subscribe(() => {\r\n    const blocks = getElements(\"pre > code\")\r\n    blocks.forEach((block, index) => {\r\n      const parent = block.parentElement!\r\n      parent.id = `__code_${index}`\r\n      parent.insertBefore(renderClipboardButton(parent.id), block)\r\n    })\r\n  })\r\n\r\n  /* Initialize clipboard */\r\n  const clipboard$ = fromEventPattern<ClipboardJS.Event>(next => {\r\n    new ClipboardJS(\".md-clipboard\").on(\"success\", next)\r\n  })\r\n    .pipe(\r\n      share()\r\n    )\r\n\r\n  /* Display notification for clipboard event */\r\n  clipboard$\r\n    .pipe(\r\n      tap(ev => ev.clearSelection()),\r\n      mapTo(translate(\"clipboard.copied\"))\r\n    )\r\n      .subscribe(dialog$)\r\n\r\n  /* Return clipboard */\r\n  return clipboard$\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Subject, animationFrameScheduler, of } from \"rxjs\"\r\nimport {\r\n  delay,\r\n  map,\r\n  observeOn,\r\n  switchMap,\r\n  tap\r\n} from \"rxjs/operators\"\r\n\r\nimport { createElement } from \"browser\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Setup options\r\n */\r\ninterface SetupOptions {\r\n  duration?: number                    /* Display duration (default: 2s) */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set up dialog\r\n *\r\n * @param options - Options\r\n *\r\n * @return Dialog observable\r\n */\r\nexport function setupDialog(\r\n  { duration }: SetupOptions = {}\r\n): Subject<string> {\r\n  const dialog$ = new Subject<string>()\r\n\r\n  /* Create dialog */\r\n  const dialog = createElement(\"div\")                                           // TODO: improve scoping\r\n  dialog.classList.add(\"md-dialog\", \"md-typeset\")\r\n\r\n  /* Display dialog */\r\n  dialog$\r\n    .pipe(\r\n      switchMap(text => of(document.body) // useComponent(\"container\")\r\n        .pipe(\r\n          map(container => container.appendChild(dialog)),\r\n          observeOn(animationFrameScheduler),\r\n          delay(1), // Strangley it doesnt work when we push things to the new animation frame...\r\n          tap(el => {\r\n            el.innerHTML = text\r\n            el.setAttribute(\"data-md-state\", \"open\")\r\n          }),\r\n          delay(duration || 2000),\r\n          tap(el => el.removeAttribute(\"data-md-state\")),\r\n          delay(400),\r\n          tap(el => {\r\n            el.innerHTML = \"\"\r\n            el.remove()\r\n          })\r\n        )\r\n      )\r\n    )\r\n      .subscribe()\r\n\r\n  /* Return dialog */\r\n  return dialog$\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { NEVER, Observable, Subject, fromEvent, merge, of } from \"rxjs\"\r\nimport { ajax } from \"rxjs//ajax\"\r\nimport {\r\n  bufferCount,\r\n  catchError,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  distinctUntilKeyChanged,\r\n  filter,\r\n  map,\r\n  pluck,\r\n  sample,\r\n  share,\r\n  skip,\r\n  switchMap,\r\n  withLatestFrom\r\n} from \"rxjs/operators\"\r\n\r\nimport {\r\n  Viewport,\r\n  ViewportOffset,\r\n  getElement,\r\n  isAnchorLocation,\r\n  isLocalLocation,\r\n  replaceElement,\r\n  setLocation,\r\n  setLocationHash,\r\n  setToggle,\r\n  setViewportOffset\r\n} from \"browser\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * History state\r\n */\r\ninterface State {\r\n  url: URL                             /* State URL */\r\n  offset?: ViewportOffset              /* State viewport offset */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Setup options\r\n */\r\ninterface SetupOptions {\r\n  document$: Subject<Document>         /* Document subject */\r\n  location$: Subject<URL>              /* Location subject */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set up instant loading\r\n *\r\n * When fetching, theoretically, we could use `responseType: \"document\"`, but\r\n * since all MkDocs links are relative, we need to make sure that the current\r\n * location matches the document we just loaded. Otherwise any relative links\r\n * in the document could use the old location.\r\n *\r\n * This is the reason why we need to synchronize history events and the process\r\n * of fetching the document for navigation changes (except `popstate` events):\r\n *\r\n * 1. Fetch document via `XMLHTTPRequest`\r\n * 2. Set new location via `history.pushState`\r\n * 3. Parse and emit fetched document\r\n *\r\n * For `popstate` events, we must not use `history.pushState`, or the forward\r\n * history will be irreversibly overwritten. In case the request fails, the\r\n * location change is dispatched regularly.\r\n *\r\n * @param options - Options\r\n */\r\nexport function setupInstantLoading(\r\n  { document$, viewport$, location$ }: SetupOptions\r\n): void {\r\n\r\n  /* Disable automatic scroll restoration */\r\n  if (\"scrollRestoration\" in history)\r\n    history.scrollRestoration = \"manual\"\r\n\r\n  /* Hack: ensure that reloads restore viewport offset */\r\n  fromEvent(window, \"beforeunload\")\r\n    .subscribe(() => {\r\n      history.scrollRestoration = \"auto\"\r\n    })\r\n\r\n  /* Hack: ensure absolute favicon link to omit 404s on document switch */\r\n  const favicon = getElement<HTMLLinkElement>(`link[rel=\"shortcut icon\"]`)\r\n  if (typeof favicon !== \"undefined\")\r\n    favicon.href = favicon.href // tslint:disable-line no-self-assignment\r\n\r\n  /* Intercept link clicks and convert to state change */\r\n  const state$ = fromEvent<MouseEvent>(document.body, \"click\")\r\n    .pipe(\r\n      filter(ev => !(ev.metaKey || ev.ctrlKey)),\r\n      switchMap(ev => {\r\n        if (ev.target instanceof HTMLElement) {\r\n          const el = ev.target.closest(\"a\")\r\n          if (el && isLocalLocation(el)) {\r\n            if (!isAnchorLocation(el))\r\n              ev.preventDefault()\r\n            return of(el)\r\n          }\r\n        }\r\n        return NEVER\r\n      }),\r\n      map(el => ({ url: new URL(el.href) })),\r\n      share<State>()\r\n    )\r\n\r\n  /* Always close search on link click */\r\n  state$.subscribe(() => {\r\n    setToggle(\"search\", false)\r\n  })\r\n\r\n  /* Filter state changes to dispatch */\r\n  const push$ = state$\r\n    .pipe(\r\n      filter(({ url }) => !isAnchorLocation(url)),\r\n      share()\r\n    )\r\n\r\n  /* Intercept popstate events (history back and forward) */\r\n  const pop$ = fromEvent<PopStateEvent>(window, \"popstate\")\r\n    .pipe(\r\n      filter(ev => ev.state !== null),\r\n      map(ev => ({\r\n        url: new URL(location.href),\r\n        offset: ev.state\r\n      })),\r\n      share<State>()\r\n    )\r\n\r\n  /* Emit location change */\r\n  merge(push$, pop$)\r\n    .pipe(\r\n      distinctUntilChanged((prev, next) => prev.url.href === next.url.href),\r\n      pluck(\"url\")\r\n    )\r\n      .subscribe(location$)\r\n\r\n  /* Fetch document on location change */\r\n  const ajax$ = location$\r\n    .pipe(\r\n      distinctUntilKeyChanged(\"pathname\"),\r\n      skip(1),\r\n      switchMap(url => ajax({\r\n        url: url.href,\r\n        responseType: \"text\",\r\n        withCredentials: true\r\n      })\r\n        .pipe(\r\n          catchError(() => {\r\n            setLocation(url)\r\n            return NEVER\r\n          })\r\n        )\r\n      )\r\n    )\r\n\r\n  /* Set new location as soon as the document was fetched */\r\n  push$\r\n    .pipe(\r\n      sample(ajax$)\r\n    )\r\n      .subscribe(({ url }) => {\r\n        history.pushState({}, \"\", url.toString())\r\n      })\r\n\r\n  /* Parse and emit document */\r\n  const dom = new DOMParser()\r\n  ajax$\r\n    .pipe(\r\n      map(({ response }) => dom.parseFromString(response, \"text/html\"))\r\n    )\r\n      .subscribe(document$)\r\n\r\n  /* Intercept instant loading */\r\n  const instant$ = merge(push$, pop$)\r\n    .pipe(\r\n      sample(document$)\r\n    )\r\n\r\n  // TODO: this must be combined with search scroll restoration on mobile\r\n  instant$.subscribe(({ url, offset }) => {\r\n    if (url.hash && !offset) {\r\n      setLocationHash(url.hash)\r\n    } else {\r\n      setViewportOffset(offset || { y: 0 })\r\n    }\r\n  })\r\n\r\n  /* Replace document metadata */\r\n  instant$\r\n    .pipe(\r\n      withLatestFrom(document$)\r\n    )\r\n      .subscribe(([, { title, head }]) => {\r\n        document.dispatchEvent(new CustomEvent(\"DOMContentSwitch\"))\r\n        document.title = title\r\n\r\n        /* Replace meta tags */\r\n        for (const selector of [\r\n          `link[rel=\"canonical\"]`,\r\n          `meta[name=\"author\"]`,\r\n          `meta[name=\"description\"]`\r\n        ]) {\r\n          const next = getElement(selector, head)\r\n          const prev = getElement(selector, document.head)\r\n          if (\r\n            typeof next !== \"undefined\" &&\r\n            typeof prev !== \"undefined\"\r\n          ) {\r\n            replaceElement(prev, next)\r\n          }\r\n        }\r\n      })\r\n\r\n  /* Debounce update of viewport offset */\r\n  viewport$\r\n    .pipe(\r\n      debounceTime(250),\r\n      distinctUntilKeyChanged(\"offset\")\r\n    )\r\n      .subscribe(({ offset }) => {\r\n        history.replaceState(offset, \"\")\r\n      })\r\n\r\n  /* Set viewport offset from history */\r\n  merge(state$, pop$)\r\n    .pipe(\r\n      bufferCount(2, 1),\r\n      filter(([prev, next]) => {\r\n        return prev.url.pathname === next.url.pathname\r\n            && !isAnchorLocation(next.url)\r\n      }),\r\n      map(([, state]) => state)\r\n    )\r\n      .subscribe(({ offset }) => {\r\n        setViewportOffset(offset || { y: 0 })\r\n      })\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable } from \"rxjs\"\r\nimport {\r\n  filter,\r\n  map,\r\n  share,\r\n  withLatestFrom\r\n} from \"rxjs/operators\"\r\n\r\nimport {\r\n  Key,\r\n  getActiveElement,\r\n  getElement,\r\n  getElements,\r\n  getToggle,\r\n  isSusceptibleToKeyboard,\r\n  setElementFocus,\r\n  setElementSelection,\r\n  setToggle,\r\n  watchKeyboard\r\n} from \"browser\"\r\nimport { useComponent } from \"components\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Keyboard mode\r\n */\r\nexport type KeyboardMode =\r\n  | \"global\"                           /* Global */\r\n  | \"search\"                           /* Search is open */\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Keyboard\r\n */\r\nexport interface Keyboard extends Key {\r\n  mode: KeyboardMode                   /* Keyboard mode */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set up keyboard\r\n *\r\n * This function will set up the keyboard handlers and ensure that keys are\r\n * correctly propagated. Currently there are two modes:\r\n *\r\n * - `global`: This mode is active when the search is closed. It is intended\r\n *   to assign hotkeys to specific functions of the site. Currently the search,\r\n *   previous and next page can be triggered.\r\n *\r\n * - `search`: This mode is active when the search is open. It maps certain\r\n *   navigational keys to offer search results that can be entirely navigated\r\n *   through keyboard input.\r\n *\r\n * The keyboard observable is returned and can be used to monitor the keyboard\r\n * in order toassign further hotkeys to custom functions.\r\n *\r\n * @return Keyboard observable\r\n */\r\nexport function setupKeyboard(): Observable<Keyboard> {\r\n  const keyboard$ = watchKeyboard()\r\n    .pipe(\r\n      map<Key, Keyboard>(key => ({\r\n        mode: getToggle(\"search\") ? \"search\" : \"global\",\r\n        ...key\r\n      })),\r\n      filter(({ mode }) => {\r\n        if (mode === \"global\") {\r\n          const active = getActiveElement()\r\n          if (typeof active !== \"undefined\")\r\n            return !isSusceptibleToKeyboard(active)\r\n        }\r\n        return true\r\n      }),\r\n      share()\r\n    )\r\n\r\n  /* Set up search keyboard handlers */\r\n  keyboard$\r\n    .pipe(\r\n      filter(({ mode }) => mode === \"search\"),\r\n      withLatestFrom(\r\n        useComponent(\"search-query\"),\r\n        useComponent(\"search-result\")\r\n      )\r\n    )\r\n      .subscribe(([key, query, result]) => {\r\n        const active = getActiveElement()\r\n        switch (key.type) {\r\n\r\n          /* Enter: prevent form submission */\r\n          case \"Enter\":\r\n            if (active === query)\r\n              key.claim()\r\n            break\r\n\r\n          /* Escape or Tab: close search */\r\n          case \"Escape\":\r\n          case \"Tab\":\r\n            setToggle(\"search\", false)\r\n            setElementFocus(query, false)\r\n            break\r\n\r\n          /* Vertical arrows: select previous or next search result */\r\n          case \"ArrowUp\":\r\n          case \"ArrowDown\":\r\n            if (typeof active === \"undefined\") {\r\n              setElementFocus(query)\r\n            } else {\r\n              const els = [query, ...getElements(\"[href]\", result)]\r\n              const i = Math.max(0, (\r\n                Math.max(0, els.indexOf(active)) + els.length + (\r\n                  key.type === \"ArrowUp\" ? -1 : +1\r\n                )\r\n              ) % els.length)\r\n              setElementFocus(els[i])\r\n            }\r\n\r\n            /* Prevent scrolling of page */\r\n            key.claim()\r\n            break\r\n\r\n          /* All other keys: hand to search query */\r\n          default:\r\n            if (query !== getActiveElement())\r\n              setElementFocus(query)\r\n        }\r\n      })\r\n\r\n  /* Set up global keyboard handlers */\r\n  keyboard$\r\n    .pipe(\r\n      filter(({ mode }) => mode === \"global\"),\r\n      withLatestFrom(useComponent(\"search-query\"))\r\n    )\r\n      .subscribe(([key, query]) => {\r\n        switch (key.type) {\r\n\r\n          /* Open search and select query */\r\n          case \"f\":\r\n          case \"s\":\r\n          case \"/\":\r\n            setElementFocus(query)\r\n            setElementSelection(query)\r\n            key.claim()\r\n            break\r\n\r\n          /* Go to previous page */\r\n          case \"p\":\r\n          case \",\":\r\n            const prev = getElement(\"[href][rel=prev]\")\r\n            if (typeof prev !== \"undefined\")\r\n              prev.click()\r\n            break\r\n\r\n          /* Go to next page */\r\n          case \"n\":\r\n          case \".\":\r\n            const next = getElement(\"[href][rel=next]\")\r\n            if (typeof next !== \"undefined\")\r\n              next.click()\r\n            break\r\n        }\r\n      })\r\n\r\n  /* Return keyboard */\r\n  return keyboard$\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  ArticleDocument,\r\n  SearchDocumentMap,\r\n  SectionDocument,\r\n  setupSearchDocumentMap\r\n} from \"../document\"\r\nimport {\r\n  SearchHighlightFactoryFn,\r\n  setupSearchHighlighter\r\n} from \"../highlighter\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search index configuration\r\n */\r\nexport interface SearchIndexConfig {\r\n  lang: string[]                       /* Search languages */\r\n  separator: string                    /* Search separator */\r\n}\r\n\r\n/**\r\n * Search index document\r\n */\r\nexport interface SearchIndexDocument {\r\n  location: string                     /* Document location */\r\n  title: string                        /* Document title */\r\n  text: string                         /* Document text */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search index pipeline function\r\n */\r\nexport type SearchIndexPipelineFn =\r\n  | \"stemmer\"                          /* Stemmer */\r\n  | \"stopWordFilter\"                   /* Stop word filter */\r\n  | \"trimmer\"                          /* Trimmer */\r\n\r\n/**\r\n * Search index pipeline\r\n */\r\nexport type SearchIndexPipeline = SearchIndexPipelineFn[]\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search index\r\n *\r\n * This interfaces describes the format of the `search_index.json` file which\r\n * is automatically built by the MkDocs search plugin.\r\n */\r\nexport interface SearchIndex {\r\n  config: SearchIndexConfig            /* Search index configuration */\r\n  docs: SearchIndexDocument[]          /* Search index documents */\r\n  index?: object | string              /* Prebuilt or serialized index */\r\n  pipeline?: SearchIndexPipeline       /* Search index pipeline */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search result\r\n */\r\nexport interface SearchResult {\r\n  article: ArticleDocument             /* Article document */\r\n  sections: SectionDocument[]          /* Section documents */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Class\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search\r\n *\r\n * Note that `lunr` is injected via Webpack, as it will otherwise also be\r\n * bundled in the application bundle.\r\n */\r\nexport class Search {\r\n\r\n  /**\r\n   * Search document mapping\r\n   *\r\n   * A mapping of URLs (including hash fragments) to the actual articles and\r\n   * sections of the documentation. The search document mapping must be created\r\n   * regardless of whether the index was prebuilt or not, as `lunr` itself will\r\n   * only store the actual index.\r\n   */\r\n  protected documents: SearchDocumentMap\r\n\r\n  /**\r\n   * Search highlight factory function\r\n   */\r\n  protected highlight: SearchHighlightFactoryFn\r\n\r\n  /**\r\n   * The `lunr` search index\r\n   */\r\n  protected index: lunr.Index\r\n\r\n  /**\r\n   * Create the search integration\r\n   *\r\n   * @param data - Search index\r\n   */\r\n  public constructor({ config, docs, pipeline, index }: SearchIndex) {\r\n    this.documents = setupSearchDocumentMap(docs)\r\n    this.highlight = setupSearchHighlighter(config)\r\n\r\n    /* If no index was given, create it */\r\n    if (typeof index === \"undefined\") {\r\n      this.index = lunr(function() {\r\n        pipeline = pipeline || [\"trimmer\", \"stopWordFilter\"]\r\n\r\n        /* Set up pipeline according to configuration */\r\n        this.pipeline.reset()\r\n        for (const fn of pipeline)\r\n          this.pipeline.add(lunr[fn])\r\n\r\n        /* Set up alternate search languages */\r\n        if (config.lang.length === 1 && config.lang[0] !== \"en\") {\r\n          this.use((lunr as any)[config.lang[0]])\r\n        } else if (config.lang.length > 1) {\r\n          this.use((lunr as any).multiLanguage(...config.lang))\r\n        }\r\n\r\n        /* Set up fields and reference */\r\n        this.field(\"title\", { boost: 1000 })\r\n        this.field(\"text\")\r\n        this.ref(\"location\")\r\n\r\n        /* Index documents */\r\n        for (const doc of docs)\r\n          this.add(doc)\r\n      })\r\n\r\n    /* Prebuilt or serialized index */\r\n    } else {\r\n      this.index = lunr.Index.load(\r\n        typeof index === \"string\"\r\n          ? JSON.parse(index)\r\n          : index\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Search for matching documents\r\n   *\r\n   * The search index which MkDocs provides is divided up into articles, which\r\n   * contain the whole content of the individual pages, and sections, which only\r\n   * contain the contents of the subsections obtained by breaking the individual\r\n   * pages up at `h1` ... `h6`. As there may be many sections on different pages\r\n   * with indentical titles (for example within this very project, e.g. \"Usage\"\r\n   * or \"Installation\"), they need to be put into the context of the containing\r\n   * page. For this reason, section results are grouped within their respective\r\n   * articles which are the top-level results that are returned.\r\n   *\r\n   * @param value - Query value\r\n   *\r\n   * @return Search results\r\n   */\r\n  public query(value: string): SearchResult[] {\r\n    if (value) {\r\n      try {\r\n\r\n        /* Group sections by containing article */\r\n        const groups = this.index.search(value)\r\n          .reduce((results, result) => {\r\n            const document = this.documents.get(result.ref)\r\n            if (typeof document !== \"undefined\") {\r\n              if (\"parent\" in document) {\r\n                const ref = document.parent.location\r\n                results.set(ref, [...results.get(ref) || [], result])\r\n              } else {\r\n                const ref = document.location\r\n                results.set(ref, results.get(ref) || [])\r\n              }\r\n            }\r\n            return results\r\n          }, new Map<string, lunr.Index.Result[]>())\r\n\r\n        /* Create highlighter for query */\r\n        const fn = this.highlight(value)\r\n\r\n        /* Map groups to search documents */\r\n        return [...groups].map(([ref, sections]) => ({\r\n          article: fn(this.documents.get(ref) as ArticleDocument),\r\n          sections: sections.map(section => {\r\n            return fn(this.documents.get(section.ref) as SectionDocument)\r\n          })\r\n        }))\r\n\r\n      /* Log errors to console (for now) */\r\n      } catch (err) {\r\n        // tslint:disable-next-line no-console\r\n        console.warn(`Invalid query: ${value} – see https://bit.ly/2s3ChXG`)\r\n      }\r\n    }\r\n\r\n    /* Return nothing in case of error or empty query */\r\n    return []\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport * as escapeHTML from \"escape-html\"\r\n\r\nimport { SearchIndexDocument } from \"../_\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * A top-level article\r\n */\r\nexport interface ArticleDocument extends SearchIndexDocument {\r\n  linked: boolean                      /* Whether the section was linked */\r\n}\r\n\r\n/**\r\n * A section of an article\r\n */\r\nexport interface SectionDocument extends SearchIndexDocument {\r\n  parent: ArticleDocument              /* Parent article */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search document\r\n */\r\nexport type SearchDocument =\r\n  | ArticleDocument\r\n  | SectionDocument\r\n\r\n/**\r\n * Search document mapping\r\n */\r\nexport type SearchDocumentMap = Map<string, SearchDocument>\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Create a search document mapping\r\n *\r\n * @param docs - Search index documents\r\n *\r\n * @return Search document map\r\n */\r\nexport function setupSearchDocumentMap(\r\n  docs: SearchIndexDocument[]\r\n): SearchDocumentMap {\r\n  const documents = new Map<string, SearchDocument>()\r\n  for (const doc of docs) {\r\n    const [path, hash] = doc.location.split(\"#\")\r\n\r\n    /* Extract location and title */\r\n    const location = doc.location\r\n    const title    = doc.title\r\n\r\n    /* Escape and cleanup text */\r\n    const text = escapeHTML(doc.text)\r\n      .replace(/\\s+(?=[,.:;!?])/g, \"\")\r\n      .replace(/\\s+/g, \" \")\r\n\r\n    /* Handle section */\r\n    if (hash) {\r\n      const parent = documents.get(path) as ArticleDocument\r\n\r\n      /* Ignore first section, override article */\r\n      if (!parent.linked) {\r\n        parent.title  = doc.title\r\n        parent.text   = text\r\n        parent.linked = true\r\n\r\n      /* Add subsequent section */\r\n      } else {\r\n        documents.set(location, {\r\n          location,\r\n          title,\r\n          text,\r\n          parent\r\n        })\r\n      }\r\n\r\n    /* Add article */\r\n    } else {\r\n      documents.set(location, {\r\n        location,\r\n        title,\r\n        text,\r\n        linked: false\r\n      })\r\n    }\r\n  }\r\n  return documents\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { SearchIndexConfig } from \"../_\"\r\nimport { SearchDocument } from \"../document\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search highlight function\r\n *\r\n * @template T - Search document type\r\n *\r\n * @param document - Search document\r\n *\r\n * @return Highlighted document\r\n */\r\nexport type SearchHighlightFn = <\r\n  T extends SearchDocument\r\n>(document: Readonly<T>) => T\r\n\r\n/**\r\n * Search highlight factory function\r\n *\r\n * @param value - Query value\r\n *\r\n * @return Search highlight function\r\n */\r\nexport type SearchHighlightFactoryFn = (value: string) => SearchHighlightFn\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Create a search highlighter\r\n *\r\n * @param config - Search index configuration\r\n *\r\n * @return Search highlight factory function\r\n */\r\nexport function setupSearchHighlighter(\r\n  config: SearchIndexConfig\r\n): SearchHighlightFactoryFn {\r\n  const separator = new RegExp(config.separator, \"img\")\r\n  const highlight = (_: unknown, data: string, term: string) => {\r\n    return `${data}<em>${term}</em>`\r\n  }\r\n\r\n  /* Return factory function */\r\n  return (value: string) => {\r\n    value = value\r\n      .replace(/[\\s*+-:~^]+/g, \" \")\r\n      .trim()\r\n\r\n    /* Create search term match expression */\r\n    const match = new RegExp(`(^|${config.separator})(${\r\n      value\r\n        .replace(/[|\\\\{}()[\\]^$+*?.-]/g, \"\\\\$&\")\r\n        .replace(separator, \"|\")\r\n    })`, \"img\")\r\n\r\n    /* Highlight document */\r\n    return document => ({\r\n      ...document,\r\n      title: document.title.replace(match, highlight),\r\n      text:  document.text.replace(match, highlight)\r\n    })\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search transformation function\r\n *\r\n * @param value - Query value\r\n *\r\n * @return Transformed query value\r\n */\r\nexport type SearchTransformFn = (value: string) => string\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Default transformation function\r\n *\r\n * Rogue control characters are filtered before handing the query to the\r\n * search index, as `lunr` will throw otherwise.\r\n *\r\n * @param value - Query value\r\n *\r\n * @return Transformed query value\r\n */\r\nexport function defaultTransform(value: string): string {\r\n  return value\r\n    .replace(/(?:^|\\s+)[*+-:^~]+(?=\\s+|$)/g, \"\")\r\n    .trim()\r\n    .replace(/\\s+|\\b$/g, \"* \")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A RTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { SearchIndex, SearchResult } from \"../../_\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search message type\r\n */\r\nexport const enum SearchMessageType {\r\n  SETUP,                               /* Search index setup */\r\n  READY,                               /* Search index ready */\r\n  QUERY,                               /* Search query */\r\n  RESULT                               /* Search results */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * A message containing the data necessary to setup the search index\r\n */\r\nexport interface SearchSetupMessage {\r\n  type: SearchMessageType.SETUP        /* Message type */\r\n  data: SearchIndex                    /* Message data */\r\n}\r\n\r\n/**\r\n * A message indicating the search index is ready\r\n */\r\nexport interface SearchReadyMessage {\r\n  type: SearchMessageType.READY       /* Message type */\r\n}\r\n\r\n/**\r\n * A message containing a search query\r\n */\r\nexport interface SearchQueryMessage {\r\n  type: SearchMessageType.QUERY        /* Message type */\r\n  data: string                         /* Message data */\r\n}\r\n\r\n/**\r\n * A message containing results for a search query\r\n */\r\nexport interface SearchResultMessage {\r\n  type: SearchMessageType.RESULT       /* Message type */\r\n  data: SearchResult[]                 /* Message data */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * A message exchanged with the search worker\r\n */\r\nexport type SearchMessage =\r\n  | SearchSetupMessage\r\n  | SearchReadyMessage\r\n  | SearchQueryMessage\r\n  | SearchResultMessage\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Type guard for search setup messages\r\n *\r\n * @param message - Search worker message\r\n *\r\n * @return Test result\r\n */\r\nexport function isSearchSetupMessage(\r\n  message: SearchMessage\r\n): message is SearchSetupMessage {\r\n  return message.type === SearchMessageType.SETUP\r\n}\r\n\r\n/**\r\n * Type guard for search ready messages\r\n *\r\n * @param message - Search worker message\r\n *\r\n * @return Test result\r\n */\r\nexport function isSearchReadyMessage(\r\n  message: SearchMessage\r\n): message is SearchReadyMessage {\r\n  return message.type === SearchMessageType.READY\r\n}\r\n\r\n/**\r\n * Type guard for search query messages\r\n *\r\n * @param message - Search worker message\r\n *\r\n * @return Test result\r\n */\r\nexport function isSearchQueryMessage(\r\n  message: SearchMessage\r\n): message is SearchQueryMessage {\r\n  return message.type === SearchMessageType.QUERY\r\n}\r\n\r\n/**\r\n * Type guard for search result messages\r\n *\r\n * @param message - Search worker message\r\n *\r\n * @return Test result\r\n */\r\nexport function isSearchResultMessage(\r\n  message: SearchMessage\r\n): message is SearchResultMessage {\r\n  return message.type === SearchMessageType.RESULT\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A RTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { identity } from \"ramda\"\r\nimport { Observable, Subject, asyncScheduler } from \"rxjs\"\r\nimport {\r\n  map,\r\n  observeOn,\r\n  shareReplay,\r\n  withLatestFrom\r\n} from \"rxjs/operators\"\r\n\r\nimport { WorkerHandler, watchWorker } from \"browser\"\r\nimport { translate } from \"utilities\"\r\n\r\nimport { SearchIndex, SearchIndexPipeline } from \"../../_\"\r\nimport {\r\n  SearchMessage,\r\n  SearchMessageType,\r\n  SearchSetupMessage,\r\n  isSearchResultMessage\r\n} from \"../message\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Setup options\r\n */\r\ninterface SetupOptions {\r\n  index$: Observable<SearchIndex>      /* Search index observable */\r\n  base$: Observable<string>            /* Location base observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set up search index\r\n *\r\n * @param data - Search index\r\n *\r\n * @return Search index\r\n */\r\nfunction setupSearchIndex(\r\n  { config, docs, index }: SearchIndex\r\n): SearchIndex {\r\n\r\n  /* Override default language with value from translation */\r\n  if (config.lang.length === 1 && config.lang[0] === \"en\")\r\n    config.lang = [translate(\"search.config.lang\")]\r\n\r\n  /* Override default separator with value from translation */\r\n  if (config.separator === \"[\\s\\-]+\")\r\n    config.separator = translate(\"search.config.separator\")\r\n\r\n  /* Set pipeline from translation */\r\n  const pipeline = translate(\"search.config.pipeline\")\r\n    .split(/\\s*,\\s*/)\r\n    .filter(identity) as SearchIndexPipeline\r\n\r\n  /* Return search index after defaulting */\r\n  return { config, docs, index, pipeline }\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set up search web worker\r\n *\r\n * This function will create a web worker to set up and query the search index\r\n * which is done using `lunr`. The index must be passed as an observable to\r\n * enable hacks like _localsearch_ via search index embedding as JSON.\r\n *\r\n * @param url - Worker URL\r\n * @param options - Options\r\n *\r\n * @return Worker handler\r\n */\r\nexport function setupSearchWorker(\r\n  url: string, { index$, base$ }: SetupOptions\r\n): WorkerHandler<SearchMessage> {\r\n  const worker = new Worker(url)\r\n\r\n  /* Create communication channels and resolve relative links */\r\n  const tx$ = new Subject<SearchMessage>()\r\n  const rx$ = watchWorker(worker, { tx$ })\r\n    .pipe(\r\n      withLatestFrom(base$),\r\n      map(([message, base]) => {\r\n        if (isSearchResultMessage(message)) {\r\n          for (const { article, sections } of message.data) {\r\n            article.location = `${base}/${article.location}`\r\n            for (const section of sections)\r\n              section.location = `${base}/${section.location}`\r\n          }\r\n        }\r\n        return message\r\n      }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* Set up search index */\r\n  index$\r\n    .pipe(\r\n      map<SearchIndex, SearchSetupMessage>(index => ({\r\n        type: SearchMessageType.SETUP,\r\n        data: setupSearchIndex(index)\r\n      })),\r\n      observeOn(asyncScheduler)\r\n    )\r\n      .subscribe(tx$.next.bind(tx$))\r\n\r\n  /* Return worker handler */\r\n  return { tx$, rx$ }\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set sidebar offset\r\n *\r\n * @param el - Sidebar element\r\n * @param value - Sidebar offset\r\n */\r\nexport function setSidebarOffset(\r\n  el: HTMLElement, value: number\r\n): void {\r\n  el.style.top = `${value}px`\r\n}\r\n\r\n/**\r\n * Reset sidebar offset\r\n *\r\n * @param el - Sidebar element\r\n */\r\nexport function resetSidebarOffset(\r\n  el: HTMLElement\r\n): void {\r\n  el.style.top = \"\"\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set sidebar height\r\n *\r\n * @param el - Sidebar element\r\n * @param value - Sidebar height\r\n */\r\nexport function setSidebarHeight(\r\n  el: HTMLElement, value: number\r\n): void {\r\n  el.style.height = `${value}px`\r\n}\r\n\r\n/**\r\n * Reset sidebar height\r\n *\r\n * @param el - Sidebar element\r\n */\r\nexport function resetSidebarHeight(\r\n  el: HTMLElement\r\n): void {\r\n  el.style.height = \"\"\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set sidebar lock\r\n *\r\n * @param el - Sidebar element\r\n * @param value - Whether the sidebar is locked\r\n */\r\nexport function setSidebarLock(\r\n  el: HTMLElement, value: boolean\r\n): void {\r\n  el.setAttribute(\"data-md-state\", value ? \"lock\" : \"\")\r\n}\r\n\r\n/**\r\n * Reset sidebar lock\r\n *\r\n * @param el - Sidebar element\r\n */\r\nexport function resetSidebarLock(\r\n  el: HTMLElement\r\n): void {\r\n  el.removeAttribute(\"data-md-state\")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { EMPTY, Observable, of } from \"rxjs\"\r\nimport {\r\n  distinctUntilChanged,\r\n  map,\r\n  scan,\r\n  shareReplay,\r\n  switchMap\r\n} from \"rxjs/operators\"\r\n\r\nimport { getElement, replaceElement } from \"browser\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Component\r\n */\r\nexport type Component =\r\n  | \"announce\"                         /* Announcement bar */\r\n  | \"container\"                        /* Container */\r\n  | \"header\"                           /* Header */\r\n  | \"header-title\"                     /* Header title */\r\n  | \"hero\"                             /* Hero */\r\n  | \"main\"                             /* Main area */\r\n  | \"navigation\"                       /* Navigation */\r\n  | \"search\"                           /* Search */\r\n  | \"search-query\"                     /* Search input */\r\n  | \"search-reset\"                     /* Search reset */\r\n  | \"search-result\"                    /* Search results */\r\n  | \"skip\"                             /* Skip link */\r\n  | \"tabs\"                             /* Tabs */\r\n  | \"toc\"                              /* Table of contents */\r\n\r\n/**\r\n * Component map\r\n */\r\nexport type ComponentMap = {\r\n  [P in Component]?: HTMLElement\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n */\r\ninterface WatchOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Data\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Component map observable\r\n */\r\nlet components$: Observable<ComponentMap>\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set up bindings to components with given names\r\n *\r\n * This function will maintain bindings to the elements identified by the given\r\n * names in-between document switches and update the elements in-place.\r\n *\r\n * @param names - Component names\r\n * @param options - Options\r\n */\r\nexport function setupComponents(\r\n  names: Component[], { document$ }: WatchOptions\r\n): void {\r\n  components$ = document$\r\n    .pipe(\r\n\r\n      /* Build component map */\r\n      map(document => names.reduce<ComponentMap>((components, name) => {\r\n        const el = getElement(`[data-md-component=${name}]`, document)\r\n        return {\r\n          ...components,\r\n          ...typeof el !== \"undefined\" ? { [name]: el } : {}\r\n        }\r\n      }, {})),\r\n\r\n      /* Re-compute component map on document switch */\r\n      scan((prev, next) => {\r\n        for (const name of names) {\r\n          switch (name) {\r\n\r\n            /* Top-level components: update */\r\n            case \"announce\":\r\n            case \"header-title\":\r\n            case \"container\":\r\n            case \"skip\":\r\n              if (name in prev && typeof prev[name] !== \"undefined\") {\r\n                replaceElement(prev[name]!, next[name]!)\r\n                prev[name] = next[name]\r\n              }\r\n              break\r\n\r\n            /* All other components: rebind */\r\n            default:\r\n              if (typeof next[name] !== \"undefined\")\r\n                prev[name] = getElement(`[data-md-component=${name}]`)\r\n              else\r\n                delete prev[name]\r\n          }\r\n        }\r\n        return prev\r\n      }),\r\n\r\n      /* Convert to hot observable */\r\n      shareReplay(1)\r\n    )\r\n}\r\n\r\n/**\r\n * Retrieve a component\r\n *\r\n * The returned observable will only re-emit if the element changed, i.e. if\r\n * it was replaced from a document which was switched to.\r\n *\r\n * @template T - Element type\r\n *\r\n * @param name - Component name\r\n *\r\n * @return Component observable\r\n */\r\nexport function useComponent<T extends HTMLInputElement>(\r\n  name: \"search-query\"\r\n): Observable<T>\r\nexport function useComponent<T extends HTMLElement>(\r\n  name: Component\r\n): Observable<T>\r\nexport function useComponent<T extends HTMLElement>(\r\n  name: Component\r\n): Observable<T> {\r\n  return components$\r\n    .pipe(\r\n      switchMap(components => (\r\n        typeof components[name] !== \"undefined\"\r\n          ? of(components[name] as T)\r\n          : EMPTY\r\n      )),\r\n      distinctUntilChanged()\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set anchor blur\r\n *\r\n * @param el - Anchor element\r\n * @param value - Whether the anchor is blurred\r\n */\r\nexport function setAnchorBlur(\r\n  el: HTMLElement, value: boolean\r\n): void {\r\n  el.setAttribute(\"data-md-state\", value ? \"blur\" : \"\")\r\n}\r\n\r\n/**\r\n * Reset anchor blur\r\n *\r\n * @param el - Anchor element\r\n */\r\nexport function resetAnchorBlur(\r\n  el: HTMLElement\r\n): void {\r\n  el.removeAttribute(\"data-md-state\")\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set anchor active\r\n *\r\n * @param el - Anchor element\r\n * @param value - Whether the anchor is active\r\n */\r\nexport function setAnchorActive(\r\n  el: HTMLElement, value: boolean\r\n): void {\r\n  el.classList.toggle(\"md-nav__link--active\", value)\r\n}\r\n\r\n/**\r\n * Reset anchor active\r\n *\r\n * @param el - Anchor element\r\n */\r\nexport function resetAnchorActive(\r\n  el: HTMLElement\r\n): void {\r\n  el.classList.remove(\"md-nav__link--active\")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nexport * from \"./sidebar\"\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { h, translate } from \"utilities\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Data\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * CSS classes\r\n */\r\nconst css = {\r\n  container: \"md-clipboard md-icon\"\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Path of `file-search-outline` icon\r\n */\r\nconst path =\r\n  \"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 \" +\r\n  \"21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Render a 'copy-to-clipboard' button\r\n *\r\n * @param id - Unique identifier\r\n *\r\n * @return Element\r\n */\r\nexport function renderClipboardButton(\r\n  id: string\r\n) {\r\n  return (\r\n    <button\r\n      class={css.container}\r\n      title={translate(\"clipboard.copy\")}\r\n      data-clipboard-target={`#${id} > code`}\r\n    >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n        <path d={path}></path>\r\n      </svg>\r\n    </button>\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { SearchResult } from \"integrations/search\"\r\nimport { h, truncate } from \"utilities\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Data\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * CSS classes\r\n */\r\nconst css = {\r\n  item:    \"md-search-result__item\",\r\n  link:    \"md-search-result__link\",\r\n  article: \"md-search-result__article md-search-result__article--document\",\r\n  section: \"md-search-result__article\",\r\n  title:   \"md-search-result__title\",\r\n  teaser:  \"md-search-result__teaser\"\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Path of `content-copy` icon\r\n */\r\nconst path =\r\n  \"M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H13C12.59,21.75 12.2,21.44 \" +\r\n  \"11.86,21.1C11.53,20.77 11.25,20.4 11,20H6V4H13V9H18V10.18C18.71,10.34 \" +\r\n  \"19.39,10.61 20,11V8L14,2M20.31,18.9C21.64,16.79 21,14 \" +\r\n  \"18.91,12.68C16.8,11.35 14,12 12.69,14.08C11.35,16.19 12,18.97 \" +\r\n  \"14.09,20.3C15.55,21.23 17.41,21.23 \" +\r\n  \"18.88,20.32L22,23.39L23.39,22L20.31,18.9M16.5,19A2.5,2.5 0 0,1 \" +\r\n  \"14,16.5A2.5,2.5 0 0,1 16.5,14A2.5,2.5 0 0,1 19,16.5A2.5,2.5 0 0,1 16.5,19Z\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Render a search result\r\n *\r\n * @param result - Search result\r\n *\r\n * @return Element\r\n */\r\nexport function renderSearchResult(\r\n  { article, sections }: SearchResult\r\n) {\r\n\r\n  /* Render icon */\r\n  const icon = (\r\n    <div class=\"md-search-result__icon md-icon\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n        <path d={path}></path>\r\n      </svg>\r\n    </div>\r\n  )\r\n\r\n  /* Render article and sections */\r\n  const children = [article, ...sections].map(document => {\r\n    const { location, title, text } = document\r\n    return (\r\n      <a href={location} class={css.link} tabIndex={-1}>\r\n        <article class={\"parent\" in document ? css.section : css.article}>\r\n          {!(\"parent\" in document) && icon}\r\n          <h1 class={css.title}>{title}</h1>\r\n          {text.length > 0 && <p class={css.teaser}>{truncate(text, 320)}</p>}\r\n        </article>\r\n      </a>\r\n    )\r\n  })\r\n\r\n  /* Render search result */\r\n  return (\r\n    <li class={css.item}>\r\n      {children}\r\n    </li>\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { SourceFacts } from \"patches/source\"\r\nimport { h } from \"utilities\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Data\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * CSS classes\r\n */\r\nconst css = {\r\n  facts: \"md-source__facts\",\r\n  fact:  \"md-source__fact\"\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Render source facts\r\n *\r\n * @param facts - Source facts\r\n *\r\n * @return Element\r\n */\r\nexport function renderSource(\r\n  facts: SourceFacts\r\n) {\r\n  const children = facts.map(fact => (\r\n    <li class={css.fact}>{fact}</li>\r\n  ))\r\n  return (\r\n    <ul class={css.facts}>\r\n      {children}\r\n    </ul>\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { h } from \"utilities\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Data\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * CSS classes\r\n */\r\nconst css = {\r\n  wrapper: \"md-typeset__scrollwrap\",\r\n  table:   \"md-typeset__table\"\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Render a table inside a wrapper to improve scrolling on mobile\r\n *\r\n * @param table - Table element\r\n *\r\n * @return Element\r\n */\r\nexport function renderTable(\r\n  table: HTMLTableElement\r\n) {\r\n  return (\r\n    <div class={css.wrapper}>\r\n      <div class={css.table}>\r\n        {table}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Global augmentations\r\n */\r\ndeclare global {\r\n  interface CSSStyleDeclaration {\r\n    webkitOverflowScrolling: \"touch\" | \"\"\r\n  }\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set overflow scrolling\r\n *\r\n * @param el - Scrollable element\r\n */\r\nexport function setOverflowScrolling(\r\n  el: HTMLElement\r\n): void {\r\n  el.style.webkitOverflowScrolling = \"touch\"\r\n}\r\n\r\n/**\r\n * Reset overflow scrolling\r\n *\r\n * @param el - Scrollable element\r\n */\r\nexport function resetOverflowScrolling(\r\n  el: HTMLElement\r\n): void {\r\n  el.style.webkitOverflowScrolling = \"\"\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nexport * from \"./_\"\r\nexport * from \"./react\"\r\nexport * from \"./set\"\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nexport * from \"./_\"\r\nexport * from \"./react\"\r\nexport * from \"./set\"\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nexport * from \"./_\"\r\nexport * from \"./layer\"\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, OperatorFunction, pipe } from \"rxjs\"\r\nimport { map, switchMap } from \"rxjs/operators\"\r\n\r\nimport { Viewport, getElements } from \"browser\"\r\n\r\nimport { Header } from \"../../header\"\r\nimport { Main } from \"../../main\"\r\nimport {\r\n  Sidebar,\r\n  applySidebar,\r\n  watchSidebar\r\n} from \"../../shared\"\r\nimport {\r\n  NavigationLayer,\r\n  applyNavigationLayer,\r\n  watchNavigationLayer\r\n} from \"../layer\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Navigation for [screen -]\r\n */\r\ninterface NavigationBelowScreen {\r\n  layer: NavigationLayer               /* Active layer */\r\n}\r\n\r\n/**\r\n * Navigation for [screen +]\r\n */\r\ninterface NavigationAboveScreen {\r\n  sidebar: Sidebar                     /* Sidebar */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Navigation\r\n */\r\nexport type Navigation =\r\n  | NavigationBelowScreen\r\n  | NavigationAboveScreen\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  main$: Observable<Main>              /* Main area observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n  screen$: Observable<boolean>         /* Screen media observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount navigation from source observable\r\n *\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountNavigation(\r\n  { header$, main$, viewport$, screen$ }: MountOptions\r\n): OperatorFunction<HTMLElement, Navigation> {\r\n  return pipe(\r\n    switchMap(el => screen$\r\n      .pipe(\r\n        switchMap(screen => {\r\n\r\n          /* [screen +]: Mount navigation in sidebar */\r\n          if (screen) {\r\n            return watchSidebar(el, { main$, viewport$ })\r\n              .pipe(\r\n                applySidebar(el, { header$ }),\r\n                map(sidebar => ({ sidebar }))\r\n              )\r\n\r\n          /* [screen -]: Mount navigation in drawer */\r\n          } else {\r\n            const els = getElements(\"nav\", el)\r\n            return watchNavigationLayer(els)\r\n              .pipe(\r\n                applyNavigationLayer(els),\r\n                map(layer => ({ layer }))\r\n              )\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nexport * from \"./_\"\r\nexport * from \"./react\"\r\nexport * from \"./set\"\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  Observable,\r\n  animationFrameScheduler,\r\n  combineLatest,\r\n  pipe\r\n} from \"rxjs\"\r\nimport {\r\n  distinctUntilChanged,\r\n  finalize,\r\n  map,\r\n  observeOn,\r\n  tap,\r\n  withLatestFrom\r\n} from \"rxjs/operators\"\r\n\r\nimport { Viewport } from \"browser\"\r\n\r\nimport { Header } from \"../../../header\"\r\nimport { Main } from \"../../../main\"\r\nimport { Sidebar } from \"../_\"\r\nimport {\r\n  resetSidebarHeight,\r\n  resetSidebarLock,\r\n  resetSidebarOffset,\r\n  setSidebarHeight,\r\n  setSidebarLock,\r\n  setSidebarOffset\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n */\r\ninterface WatchOptions {\r\n  main$: Observable<Main>              /* Main area observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/**\r\n * Apply options\r\n */\r\ninterface ApplyOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch sidebar\r\n *\r\n * This function returns an observable that computes the visual parameters of\r\n * the sidebar which depends on the vertical viewport offset, as well as the\r\n * height of the main area. When the page is scrolled beyond the header, the\r\n * sidebar is locked and fills the remaining space.\r\n *\r\n * @param el - Sidebar element\r\n * @param options - Options\r\n *\r\n * @return Sidebar observable\r\n */\r\nexport function watchSidebar(\r\n  el: HTMLElement, { main$, viewport$ }: WatchOptions\r\n): Observable<Sidebar> {\r\n  const adjust = el.parentElement!.offsetTop\r\n               - el.parentElement!.parentElement!.offsetTop\r\n\r\n  /* Compute the sidebar's available height and if it should be locked */\r\n  return combineLatest([main$, viewport$])\r\n    .pipe(\r\n      map(([{ offset, height }, { offset: { y } }]) => {\r\n        height = height\r\n          + Math.min(adjust, Math.max(0, y - offset))\r\n          - adjust\r\n        return {\r\n          height,\r\n          lock: y >= offset + adjust\r\n        }\r\n      }),\r\n      distinctUntilChanged<Sidebar>((a, b) => {\r\n        return a.height === b.height\r\n            && a.lock   === b.lock\r\n      })\r\n    )\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply sidebar\r\n *\r\n * @param el - Sidebar element\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function applySidebar(\r\n  el: HTMLElement, { header$ }: ApplyOptions\r\n): MonoTypeOperatorFunction<Sidebar> {\r\n  return pipe(\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    withLatestFrom(header$),\r\n    tap(([{ height, lock }, { height: offset }]) => {\r\n      setSidebarHeight(el, height)\r\n      setSidebarLock(el, lock)\r\n\r\n      /* Set offset in locked state depending on header height */\r\n      if (lock)\r\n        setSidebarOffset(el, offset)\r\n      else\r\n        resetSidebarOffset(el)\r\n    }),\r\n\r\n    /* Re-map to sidebar */\r\n    map(([sidebar]) => sidebar),\r\n\r\n    /* Reset on complete or error */\r\n    finalize(() => {\r\n      resetSidebarOffset(el)\r\n      resetSidebarHeight(el)\r\n      resetSidebarLock(el)\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { findLast } from \"ramda\"\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  Observable,\r\n  animationFrameScheduler,\r\n  fromEvent,\r\n  merge,\r\n  pipe\r\n} from \"rxjs\"\r\nimport {\r\n  delay,\r\n  finalize,\r\n  map,\r\n  observeOn,\r\n  scan,\r\n  tap\r\n} from \"rxjs/operators\"\r\n\r\nimport { getElement, getElementOrThrow } from \"browser\"\r\n\r\nimport { NavigationLayer } from \"../_\"\r\nimport {\r\n  resetOverflowScrolling,\r\n  setOverflowScrolling\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch navigation layer\r\n *\r\n * On iOS we want to add `-webkit-overflow-scrolling: touch` for the menus\r\n * contained in the drawer, but as the navigational layers are nested, we can\r\n * only add it to the topmost layer or extremely weird cropping will occur.\r\n * This implementation keeps track of the previous and current layer.\r\n *\r\n * @param els - Navigation elements\r\n *\r\n * @return Navigation layer observable\r\n */\r\nexport function watchNavigationLayer(\r\n  els: HTMLElement[]\r\n): Observable<NavigationLayer> {\r\n  const table = new Map<HTMLInputElement, HTMLElement>()\r\n  for (const el of els) {\r\n    const label = getElement<HTMLLabelElement>(\"label\", el)\r\n    if (typeof label !== \"undefined\") {\r\n      const input = getElementOrThrow<HTMLInputElement>(`#${label.htmlFor}`)\r\n      table.set(input, el)\r\n    }\r\n  }\r\n\r\n  /* Determine topmost layer */\r\n  const layer$ = merge(...[...table.keys()].map(input => (\r\n    fromEvent(input, \"change\")\r\n  )))\r\n    .pipe(\r\n      map(() => getElementOrThrow(\".md-nav__list\", table.get(\r\n        findLast(({ checked }) => checked, [...table.keys()])!\r\n      )))\r\n    )\r\n\r\n  /* Return previous and next layer */\r\n  return layer$\r\n    .pipe(\r\n      map(next => ({ next })),\r\n      scan(({ next: prev }, { next }) => ({ prev, next }))\r\n    )\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply navigation layer\r\n *\r\n * @param els - Navigation elements\r\n *\r\n * @return Operator function\r\n */\r\nexport function applyNavigationLayer(\r\n  els: HTMLElement[]\r\n): MonoTypeOperatorFunction<NavigationLayer> {\r\n  return pipe(\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    tap(({ prev }) => {\r\n      if (prev)\r\n        resetOverflowScrolling(prev)\r\n    }),\r\n\r\n    /* Wait until transition has finished */\r\n    delay(250),\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    tap(({ next }) => {\r\n      setOverflowScrolling(next)\r\n    }),\r\n\r\n    /* Reset on complete or error */\r\n    finalize(() => {\r\n      for (const el of els)\r\n        resetOverflowScrolling(\r\n          getElementOrThrow(\".md-nav__list\", el)\r\n        )\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nexport * from \"./_\"\r\nexport * from \"./anchor\"\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  Observable,\r\n  OperatorFunction,\r\n  combineLatest,\r\n  of,\r\n  pipe\r\n} from \"rxjs\"\r\nimport { map, switchMap } from \"rxjs/operators\"\r\n\r\nimport { Viewport, getElements } from \"browser\"\r\n\r\nimport { Header } from \"../../header\"\r\nimport { Main } from \"../../main\"\r\nimport {\r\n  Sidebar,\r\n  applySidebar,\r\n  watchSidebar\r\n} from \"../../shared\"\r\nimport {\r\n  AnchorList,\r\n  applyAnchorList,\r\n  watchAnchorList\r\n} from \"../anchor\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Table of contents for [tablet -]\r\n */\r\ninterface TableOfContentsBelowTablet {} // tslint:disable-line\r\n\r\n/**\r\n * Table of contents for [tablet +]\r\n */\r\ninterface TableOfContentsAboveTablet {\r\n  sidebar: Sidebar                     /* Sidebar */\r\n  anchors: AnchorList                  /* Anchor list */\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Table of contents\r\n */\r\nexport type TableOfContents =\r\n  | TableOfContentsBelowTablet\r\n  | TableOfContentsAboveTablet\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  main$: Observable<Main>              /* Main area observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n  tablet$: Observable<boolean>         /* Tablet media observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount table of contents from source observable\r\n *\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountTableOfContents(\r\n  { header$, main$, viewport$, tablet$ }: MountOptions\r\n): OperatorFunction<HTMLElement, TableOfContents> {\r\n  return pipe(\r\n    switchMap(el => tablet$\r\n      .pipe(\r\n        switchMap(tablet => {\r\n\r\n          /* [tablet +]: Mount table of contents in sidebar */\r\n          if (tablet) {\r\n            const els = getElements<HTMLAnchorElement>(\".md-nav__link\", el)\r\n\r\n            /* Watch and apply sidebar */\r\n            const sidebar$ = watchSidebar(el, { main$, viewport$ })\r\n              .pipe(\r\n                applySidebar(el, { header$ })\r\n              )\r\n\r\n            /* Watch and apply anchor list (scroll spy) */\r\n            const anchors$ = watchAnchorList(els, { header$, viewport$ })\r\n              .pipe(\r\n                applyAnchorList(els)\r\n              )\r\n\r\n            /* Combine into a single hot observable */\r\n            return combineLatest([sidebar$, anchors$])\r\n              .pipe(\r\n                map(([sidebar, anchors]) => ({ sidebar, anchors }))\r\n              )\r\n\r\n          /* [tablet -]: Unmount table of contents */\r\n          } else {\r\n            return of({})\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { reverse } from \"ramda\"\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  Observable,\r\n  animationFrameScheduler,\r\n  combineLatest,\r\n  pipe\r\n} from \"rxjs\"\r\nimport {\r\n  bufferCount,\r\n  distinctUntilChanged,\r\n  distinctUntilKeyChanged,\r\n  finalize,\r\n  map,\r\n  observeOn,\r\n  scan,\r\n  startWith,\r\n  switchMap,\r\n  tap\r\n} from \"rxjs/operators\"\r\n\r\nimport { Viewport, getElement, watchElementSize } from \"browser\"\r\n\r\nimport { Header } from \"../../../header\"\r\nimport { AnchorList } from \"../_\"\r\nimport {\r\n  resetAnchorActive,\r\n  resetAnchorBlur,\r\n  setAnchorActive,\r\n  setAnchorBlur\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n */\r\ninterface WatchOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch anchor list\r\n *\r\n * This is effectively a scroll-spy implementation which will account for the\r\n * fixed header and automatically re-calculate anchor offsets when the viewport\r\n * is resized. The returned observable will only emit if the anchor list needs\r\n * to be repainted.\r\n *\r\n * This implementation tracks an anchor element's entire path starting from its\r\n * level up to the top-most anchor element, e.g. `[h3, h2, h1]`. Although the\r\n * Material theme currently doesn't make use of this information, it enables\r\n * the styling of the entire hierarchy through customization.\r\n *\r\n * Note that the current anchor is the last item of the `prev` anchor list.\r\n *\r\n * @param els - Anchor elements\r\n * @param options - Options\r\n *\r\n * @return Anchor list observable\r\n */\r\nexport function watchAnchorList(\r\n  els: HTMLAnchorElement[], { header$, viewport$ }: WatchOptions\r\n): Observable<AnchorList> {\r\n  const table = new Map<HTMLAnchorElement, HTMLElement>()\r\n  for (const el of els) {\r\n    const id = decodeURIComponent(el.hash.substring(1))\r\n    const target = getElement(`[id=\"${id}\"]`)\r\n    if (typeof target !== \"undefined\")\r\n      table.set(el, target)\r\n  }\r\n\r\n  /* Compute necessary adjustment for header */\r\n  const adjust$ = header$\r\n    .pipe(\r\n      map(header => 18 + header.height)\r\n    )\r\n\r\n  /* Compute partition of previous and next anchors */\r\n  const partition$ = watchElementSize(document.body)\r\n    .pipe(\r\n      distinctUntilKeyChanged(\"height\"),\r\n\r\n      /* Build index to map anchor paths to vertical offsets */\r\n      map(() => {\r\n        let path: HTMLAnchorElement[] = []\r\n        return [...table].reduce((index, [anchor, target]) => {\r\n          while (path.length) {\r\n            const last = table.get(path[path.length - 1])!\r\n            if (last.tagName >= target.tagName) {\r\n              path.pop()\r\n            } else {\r\n              break\r\n            }\r\n          }\r\n\r\n          /* If the current anchor is hidden, continue with its parent */\r\n          let offset = target.offsetTop\r\n          while (!offset && target.parentElement) {\r\n            target = target.parentElement\r\n            offset = target.offsetTop\r\n          }\r\n\r\n          /* Map reversed anchor path to vertical offset */\r\n          return index.set(\r\n            reverse(path = [...path, anchor]),\r\n            offset\r\n          )\r\n        }, new Map<HTMLAnchorElement[], number>())\r\n      }),\r\n\r\n      /* Re-compute partition when viewport offset changes */\r\n      switchMap(index => combineLatest([adjust$, viewport$])\r\n        .pipe(\r\n          scan(([prev, next], [adjust, { offset: { y } }]) => {\r\n\r\n            /* Look forward */\r\n            while (next.length) {\r\n              const [, offset] = next[0]\r\n              if (offset - adjust < y) {\r\n                prev = [...prev, next.shift()!]\r\n              } else {\r\n                break\r\n              }\r\n            }\r\n\r\n            /* Look backward */\r\n            while (prev.length) {\r\n              const [, offset] = prev[prev.length - 1]\r\n              if (offset - adjust >= y) {\r\n                next = [prev.pop()!, ...next]\r\n              } else {\r\n                break\r\n              }\r\n            }\r\n\r\n            /* Return partition */\r\n            return [prev, next]\r\n          }, [[], [...index]]),\r\n          distinctUntilChanged((a, b) => {\r\n            return a[0] === b[0]\r\n                && a[1] === b[1]\r\n          })\r\n        )\r\n      )\r\n    )\r\n\r\n  /* Compute and return anchor list migrations */\r\n  return partition$\r\n    .pipe(\r\n      map(([prev, next]) => ({\r\n        prev: prev.map(([path]) => path),\r\n        next: next.map(([path]) => path)\r\n      })),\r\n\r\n      /* Extract anchor list migrations */\r\n      startWith({ prev: [], next: [] }),\r\n      bufferCount(2, 1),\r\n      map(([a, b]) => {\r\n\r\n        /* Moving down */\r\n        if (a.prev.length < b.prev.length) {\r\n          return {\r\n            prev: b.prev.slice(Math.max(0, a.prev.length - 1), b.prev.length),\r\n            next: []\r\n          }\r\n\r\n        /* Moving up */\r\n        } else {\r\n          return {\r\n            prev: b.prev.slice(-1),\r\n            next: b.next.slice(0, b.next.length - a.next.length)\r\n          }\r\n        }\r\n      })\r\n    )\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply anchor list\r\n *\r\n * @param els - Anchor elements\r\n *\r\n * @return Operator function\r\n */\r\nexport function applyAnchorList(\r\n  els: HTMLAnchorElement[]\r\n): MonoTypeOperatorFunction<AnchorList> {\r\n  return pipe(\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    tap(({ prev, next }) => {\r\n\r\n      /* Look forward */\r\n      for (const [el] of next) {\r\n        resetAnchorActive(el)\r\n        resetAnchorBlur(el)\r\n      }\r\n\r\n      /* Look backward */\r\n      prev.forEach(([el], index) => {\r\n        setAnchorActive(el, index === prev.length - 1)\r\n        setAnchorBlur(el, true)\r\n      })\r\n    }),\r\n\r\n    /* Reset on complete or error */\r\n    finalize(() => {\r\n      for (const el of els) {\r\n        resetAnchorActive(el)\r\n        resetAnchorBlur(el)\r\n      }\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, OperatorFunction, combineLatest, pipe } from \"rxjs\"\r\nimport { map, switchMap } from \"rxjs/operators\"\r\n\r\nimport { SearchResult } from \"integrations/search\"\r\n\r\nimport { SearchQuery } from \"../query\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search\r\n */\r\nexport interface Search {\r\n  query: SearchQuery                   /* Search query */\r\n  result: SearchResult[]               /* Search result list */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  query$: Observable<SearchQuery>      /* Search query observable */\r\n  reset$: Observable<void>             /* Search reset observable */\r\n  result$: Observable<SearchResult[]>  /* Search result observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount search from source observable\r\n *\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountSearch(\r\n  { query$, reset$, result$ }: MountOptions\r\n): OperatorFunction<HTMLElement, Search> {\r\n  return pipe(\r\n    switchMap(() => combineLatest([query$, result$, reset$])\r\n      .pipe(\r\n        map(([query, result]) => ({ query, result }))\r\n      )\r\n    )\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { OperatorFunction, pipe } from \"rxjs\"\r\nimport {\r\n  distinctUntilKeyChanged,\r\n  map,\r\n  switchMap\r\n} from \"rxjs/operators\"\r\n\r\nimport { WorkerHandler, setToggle } from \"browser\"\r\nimport {\r\n  SearchMessage,\r\n  SearchMessageType,\r\n  SearchQueryMessage,\r\n  SearchTransformFn\r\n} from \"integrations\"\r\n\r\nimport { watchSearchQuery } from \"../react\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Search query\r\n */\r\nexport interface SearchQuery {\r\n  value: string                        /* Query value */\r\n  focus: boolean                       /* Query focus */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  transform?: SearchTransformFn        /* Transformation function */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount search query from source observable\r\n *\r\n * @param handler - Worker handler\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountSearchQuery(\r\n  { tx$ }: WorkerHandler<SearchMessage>, options: MountOptions = {}\r\n): OperatorFunction<HTMLInputElement, SearchQuery> {\r\n  return pipe(\r\n    switchMap(el => {\r\n      const query$ = watchSearchQuery(el, options)\r\n\r\n      /* Subscribe worker to search query */\r\n      query$\r\n        .pipe(\r\n          distinctUntilKeyChanged(\"value\"),\r\n          map(({ value }): SearchQueryMessage => ({\r\n            type: SearchMessageType.QUERY,\r\n            data: value\r\n          }))\r\n        )\r\n          .subscribe(tx$.next.bind(tx$))\r\n\r\n      /* Toggle search on focus */\r\n      query$\r\n        .pipe(\r\n          distinctUntilKeyChanged(\"focus\")\r\n        )\r\n          .subscribe(({ focus }) => {\r\n            if (focus)\r\n              setToggle(\"search\", focus)\r\n          })\r\n\r\n      /* Return search query */\r\n      return query$\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, combineLatest, fromEvent, merge } from \"rxjs\"\r\nimport {\r\n  delay,\r\n  distinctUntilChanged,\r\n  map,\r\n  startWith\r\n} from \"rxjs/operators\"\r\n\r\nimport { watchElementFocus } from \"browser\"\r\nimport { SearchTransformFn, defaultTransform } from \"integrations\"\r\n\r\nimport { SearchQuery } from \"../_\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n */\r\ninterface WatchOptions {\r\n  transform?: SearchTransformFn        /* Transformation function */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch search query\r\n *\r\n * Note that the focus event which triggers re-reading the current query value\r\n * is delayed by `1ms` so the input's empty state is allowed to propagate.\r\n *\r\n * @param el - Search query element\r\n * @param options - Options\r\n *\r\n * @return Search query observable\r\n */\r\nexport function watchSearchQuery(\r\n  el: HTMLInputElement, { transform }: WatchOptions = {}\r\n): Observable<SearchQuery> {\r\n  const fn = transform || defaultTransform\r\n\r\n  /* Intercept keyboard events */\r\n  const value$ = merge(\r\n    fromEvent(el, \"keyup\"),\r\n    fromEvent(el, \"focus\").pipe(delay(1))\r\n  )\r\n    .pipe(\r\n      map(() => fn(el.value)),\r\n      startWith(fn(el.value)),\r\n      distinctUntilChanged()\r\n    )\r\n\r\n  /* Intercept focus events */\r\n  const focus$ = watchElementFocus(el)\r\n\r\n  /* Combine into a single observable */\r\n  return combineLatest([value$, focus$])\r\n    .pipe(\r\n      map(([value, focus]) => ({ value, focus }))\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { OperatorFunction, pipe } from \"rxjs\"\r\nimport {\r\n  mapTo,\r\n  startWith,\r\n  switchMap,\r\n  switchMapTo,\r\n  tap\r\n} from \"rxjs/operators\"\r\n\r\nimport { setElementFocus } from \"browser\"\r\n\r\nimport { useComponent } from \"../../../_\"\r\nimport { watchSearchReset } from \"../react\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount search reset from source observable\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountSearchReset(): OperatorFunction<HTMLElement, void> {\r\n  return pipe(\r\n    switchMap(el => watchSearchReset(el)\r\n      .pipe(\r\n        switchMapTo(useComponent(\"search-query\")),\r\n        tap(setElementFocus),\r\n        mapTo(undefined)\r\n      )\r\n    ),\r\n    startWith(undefined)\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, fromEvent } from \"rxjs\"\r\nimport { mapTo } from \"rxjs/operators\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch search reset\r\n *\r\n * @param el - Search reset element\r\n *\r\n * @return Search reset observable\r\n */\r\nexport function watchSearchReset(\r\n  el: HTMLElement\r\n): Observable<void> {\r\n  return fromEvent(el, \"click\")\r\n    .pipe(\r\n      mapTo(undefined)\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { translate } from \"utilities\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set number of search results\r\n *\r\n * @param el - Search result metadata element\r\n * @param value - Number of results\r\n */\r\nexport function setSearchResultMeta(\r\n  el: HTMLElement, value: number\r\n): void {\r\n  switch (value) {\r\n\r\n    /* No results */\r\n    case 0:\r\n      el.textContent = translate(\"search.result.none\")\r\n      break\r\n\r\n    /* One result */\r\n    case 1:\r\n      el.textContent = translate(\"search.result.one\")\r\n      break\r\n\r\n    /* Multiple result */\r\n    default:\r\n      el.textContent = translate(\"search.result.other\", value.toString())\r\n  }\r\n}\r\n\r\n/**\r\n * Reset number of search results\r\n *\r\n * @param el - Search result metadata element\r\n */\r\nexport function resetSearchResultMeta(\r\n  el: HTMLElement\r\n): void {\r\n  el.textContent = translate(\"search.result.placeholder\")\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Add an element to the search result list\r\n *\r\n * @param el - Search result list element\r\n * @param child - Search result element\r\n */\r\nexport function addToSearchResultList(\r\n  el: HTMLElement, child: Element\r\n): void {\r\n  el.appendChild(child)\r\n}\r\n\r\n/**\r\n * Reset search result list\r\n *\r\n * @param el - Search result list element\r\n */\r\nexport function resetSearchResultList(\r\n  el: HTMLElement\r\n): void {\r\n  el.innerHTML = \"\"\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  Observable,\r\n  animationFrameScheduler,\r\n  pipe\r\n} from \"rxjs\"\r\nimport {\r\n  finalize,\r\n  map,\r\n  mapTo,\r\n  observeOn,\r\n  scan,\r\n  switchMap,\r\n  withLatestFrom\r\n} from \"rxjs/operators\"\r\n\r\nimport { getElementOrThrow } from \"browser\"\r\nimport { SearchResult } from \"integrations/search\"\r\nimport { renderSearchResult } from \"templates\"\r\n\r\nimport { SearchQuery } from \"../../query\"\r\nimport {\r\n  addToSearchResultList,\r\n  resetSearchResultList,\r\n  resetSearchResultMeta,\r\n  setSearchResultMeta\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply options\r\n */\r\ninterface ApplyOptions {\r\n  query$: Observable<SearchQuery>     /* Search query observable */\r\n  fetch$: Observable<boolean>         /* Result fetch observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply search results\r\n *\r\n * This function will perform a lazy rendering of the search results, depending\r\n * on the vertical offset of the search result container. When the scroll offset\r\n * reaches the bottom of the element, more results are fetched and rendered.\r\n *\r\n * @param el - Search result element\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function applySearchResult(\r\n  el: HTMLElement, { query$, fetch$ }: ApplyOptions\r\n): MonoTypeOperatorFunction<SearchResult[]> {\r\n  const list = getElementOrThrow(\".md-search-result__list\", el)\r\n  const meta = getElementOrThrow(\".md-search-result__meta\", el)\r\n  return pipe(\r\n\r\n    /* Apply search result metadata */\r\n    withLatestFrom(query$),\r\n    map(([result, query]) => {\r\n      if (query.value) {\r\n        setSearchResultMeta(meta, result.length)\r\n      } else {\r\n        resetSearchResultMeta(meta)\r\n      }\r\n      return result\r\n    }),\r\n\r\n    /* Apply search result list */\r\n    switchMap(result => fetch$\r\n      .pipe(\r\n\r\n        /* Defer repaint to next animation frame */\r\n        observeOn(animationFrameScheduler),\r\n        scan(index => {\r\n          const container = el.parentElement!\r\n          while (index < result.length) {\r\n            addToSearchResultList(list, renderSearchResult(result[index++]))\r\n            if (container.scrollHeight - container.offsetHeight > 16)\r\n              break\r\n          }\r\n          return index\r\n        }, 0),\r\n\r\n        /* Re-map to search result */\r\n        mapTo(result),\r\n\r\n        /* Reset on complete or error */\r\n        finalize(() => {\r\n          resetSearchResultList(list)\r\n        })\r\n      )\r\n    )\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { identity } from \"ramda\"\r\nimport { Observable, OperatorFunction, pipe } from \"rxjs\"\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  pluck,\r\n  switchMap\r\n} from \"rxjs/operators\"\r\n\r\nimport { WorkerHandler, watchElementOffset } from \"browser\"\r\nimport {\r\n  SearchMessage,\r\n  SearchResult,\r\n  isSearchResultMessage\r\n} from \"integrations\"\r\n\r\nimport { SearchQuery } from \"../../query\"\r\nimport { applySearchResult } from \"../react\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  query$: Observable<SearchQuery>      /* Search query observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount search result from source observable\r\n *\r\n * @param handler - Worker handler\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountSearchResult(\r\n  { rx$ }: WorkerHandler<SearchMessage>, { query$ }: MountOptions\r\n): OperatorFunction<HTMLElement, SearchResult[]> {\r\n  return pipe(\r\n    switchMap(el => {\r\n      const container = el.parentElement!\r\n\r\n      /* Compute whether there are more search results to fetch */\r\n      const fetch$ = watchElementOffset(container)\r\n        .pipe(\r\n          map(({ y }) => {\r\n            return y >= container.scrollHeight - container.offsetHeight - 16\r\n          }),\r\n          distinctUntilChanged(),\r\n          filter(identity)\r\n        )\r\n\r\n      /* Apply search results */\r\n      return rx$\r\n        .pipe(\r\n          filter(isSearchResultMessage),\r\n          pluck(\"data\"),\r\n          applySearchResult(el, { query$, fetch$ })\r\n        )\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, OperatorFunction, pipe } from \"rxjs\"\r\nimport {\r\n  distinctUntilKeyChanged,\r\n  map,\r\n  switchMap\r\n} from \"rxjs/operators\"\r\n\r\nimport { Viewport, watchViewportAt } from \"browser\"\r\n\r\nimport { Header } from \"../../header\"\r\nimport { applyHero } from \"../react\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Hero\r\n */\r\nexport interface Hero {\r\n  hidden: boolean                      /* Whether the hero is hidden */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount hero from source observable\r\n *\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountHero(\r\n  { header$, viewport$ }: MountOptions\r\n): OperatorFunction<HTMLElement, Hero> {\r\n  return pipe(\r\n    switchMap(el => watchViewportAt(el, { header$, viewport$ })\r\n      .pipe(\r\n        map(({ offset: { y } }) => ({ hidden: y >= 20 })),\r\n        distinctUntilKeyChanged(\"hidden\"),\r\n        applyHero(el)\r\n      )\r\n    )\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  animationFrameScheduler,\r\n  pipe\r\n} from \"rxjs\"\r\nimport { finalize, observeOn, tap } from \"rxjs/operators\"\r\n\r\nimport { Hero } from \"../_\"\r\nimport {\r\n  resetHeroHidden,\r\n  setHeroHidden\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply hero\r\n *\r\n * @param el - Hero element\r\n *\r\n * @return Operator function\r\n */\r\nexport function applyHero(\r\n  el: HTMLElement\r\n): MonoTypeOperatorFunction<Hero> {\r\n  return pipe(\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    tap(({ hidden }) => {\r\n      setHeroHidden(el, hidden)\r\n    }),\r\n\r\n    /* Reset on complete or error */\r\n    finalize(() => {\r\n      resetHeroHidden(el)\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set hero hidden\r\n *\r\n * @param el - Hero element\r\n * @param value - Whether the element is hidden\r\n */\r\nexport function setHeroHidden(\r\n  el: HTMLElement, value: boolean\r\n): void {\r\n  el.setAttribute(\"data-md-state\", value ? \"hidden\" : \"\")\r\n}\r\n\r\n/**\r\n * Reset hero hidden\r\n *\r\n * @param el - Hero element\r\n */\r\nexport function resetHeroHidden(\r\n  el: HTMLElement\r\n): void {\r\n  el.removeAttribute(\"data-md-state\")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, OperatorFunction, of, pipe } from \"rxjs\"\r\nimport {\r\n  distinctUntilKeyChanged,\r\n  map,\r\n  switchMap\r\n} from \"rxjs/operators\"\r\n\r\nimport { Viewport, watchViewportAt } from \"browser\"\r\n\r\nimport { Header } from \"../../header\"\r\nimport { applyTabs } from \"../react\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Tabs\r\n */\r\nexport interface Tabs {\r\n  hidden: boolean                      /* Whether the tabs are hidden */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n  screen$: Observable<boolean>         /* Media screen observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount tabs from source observable\r\n *\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountTabs(\r\n  { header$, viewport$, screen$ }: MountOptions\r\n): OperatorFunction<HTMLElement, Tabs> {\r\n  return pipe(\r\n    switchMap(el => screen$\r\n      .pipe(\r\n        switchMap(screen => {\r\n\r\n          /* [screen +]: Mount tabs above screen breakpoint */\r\n          if (screen) {\r\n            return watchViewportAt(el, { header$, viewport$ })\r\n              .pipe(\r\n                map(({ offset: { y } }) => ({ hidden: y >= 10 })),\r\n                distinctUntilKeyChanged(\"hidden\"),\r\n                applyTabs(el)\r\n              )\r\n\r\n          /* [screen -]: Unmount tabs below screen breakpoint */\r\n          } else {\r\n            return of({ hidden: true })\r\n          }\r\n        })\r\n      )\r\n    )\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  animationFrameScheduler,\r\n  pipe\r\n} from \"rxjs\"\r\nimport { finalize, observeOn, tap } from \"rxjs/operators\"\r\n\r\nimport { Tabs } from \"../_\"\r\nimport {\r\n  resetTabsHidden,\r\n  setTabsHidden\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply tabs\r\n *\r\n * @param el - Tabs element\r\n *\r\n * @return Operator function\r\n */\r\nexport function applyTabs(\r\n  el: HTMLElement\r\n): MonoTypeOperatorFunction<Tabs> {\r\n  return pipe(\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    tap(({ hidden }) => {\r\n      setTabsHidden(el, hidden)\r\n    }),\r\n\r\n    /* Reset on complete or error */\r\n    finalize(() => {\r\n      resetTabsHidden(el)\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set tabs hidden\r\n *\r\n * @param el - Tabs element\r\n * @param value - Whether the element is hidden\r\n */\r\nexport function setTabsHidden(\r\n  el: HTMLElement, value: boolean\r\n): void {\r\n  el.setAttribute(\"data-md-state\", value ? \"hidden\" : \"\")\r\n}\r\n\r\n/**\r\n * Reset tabs hidden\r\n *\r\n * @param el - Tabs element\r\n */\r\nexport function resetTabsHidden(\r\n  el: HTMLElement\r\n): void {\r\n  el.removeAttribute(\"data-md-state\")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, OperatorFunction, combineLatest, pipe } from \"rxjs\"\r\nimport {\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  shareReplay,\r\n  startWith,\r\n  switchMap,\r\n  withLatestFrom\r\n} from \"rxjs/operators\"\r\n\r\nimport {\r\n  Viewport,\r\n  getElement,\r\n  watchViewportAt\r\n} from \"browser\"\r\n\r\nimport { useComponent } from \"../../_\"\r\nimport {\r\n  applyHeaderType,\r\n  watchHeader\r\n} from \"../react\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Header type\r\n */\r\nexport type HeaderType =\r\n  | \"site\"                             /* Header shows site title */\r\n  | \"page\"                             /* Header shows page title */\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Header\r\n */\r\nexport interface Header {\r\n  type: HeaderType                     /* Header type */\r\n  sticky: boolean                      /* Header stickyness */\r\n  height: number                       /* Header visible height */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount header from source observable\r\n *\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountHeader(\r\n  { document$, viewport$ }: MountOptions\r\n): OperatorFunction<HTMLElement, Header> {\r\n  return pipe(\r\n    switchMap(el => {\r\n      const header$ = watchHeader(el, { document$ })\r\n\r\n      /* Compute whether the header should switch to page header */\r\n      const type$ = useComponent(\"main\")\r\n        .pipe(\r\n          map(main => getElement(\"h1, h2, h3, h4, h5, h6\", main)!),\r\n          filter(hx => typeof hx !== \"undefined\"),\r\n          withLatestFrom(useComponent(\"header-title\")),\r\n          switchMap(([hx, title]) => watchViewportAt(hx, { header$, viewport$ })\r\n            .pipe(\r\n              map(({ offset: { y } }) => {\r\n                return y >= hx.offsetHeight ? \"page\" : \"site\"\r\n              }),\r\n              distinctUntilChanged(),\r\n              applyHeaderType(title)\r\n            )\r\n          ),\r\n          startWith<HeaderType>(\"site\")\r\n        )\r\n\r\n      /* Combine into single observable */\r\n      return combineLatest([header$, type$])\r\n        .pipe(\r\n          map(([header, type]): Header => ({ type, ...header })),\r\n          shareReplay(1)\r\n        )\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  Observable,\r\n  animationFrameScheduler,\r\n  of,\r\n  pipe\r\n} from \"rxjs\"\r\nimport {\r\n  distinctUntilChanged,\r\n  finalize,\r\n  map,\r\n  observeOn,\r\n  shareReplay,\r\n  switchMap,\r\n  tap\r\n} from \"rxjs/operators\"\r\n\r\nimport { watchElementSize } from \"browser\"\r\n\r\nimport { Header, HeaderType } from \"../_\"\r\nimport {\r\n  resetHeaderTitleActive,\r\n  setHeaderTitleActive\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n */\r\ninterface WatchOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch header\r\n *\r\n * @param el - Header element\r\n *\r\n * @return Header observable\r\n */\r\nexport function watchHeader(\r\n  el: HTMLElement, { document$ }: WatchOptions\r\n): Observable<Omit<Header, \"type\">> {\r\n  return document$\r\n    .pipe(\r\n      map(() => {\r\n        const styles = getComputedStyle(el)\r\n        return [\r\n          \"sticky\",                    /* Modern browsers */\r\n          \"-webkit-sticky\"             /* Safari */\r\n        ].includes(styles.position)\r\n      }),\r\n      distinctUntilChanged(),\r\n      switchMap(sticky => {\r\n        if (sticky) {\r\n          return watchElementSize(el)\r\n            .pipe(\r\n              map(({ height }) => ({\r\n                sticky: true,\r\n                height\r\n              }))\r\n            )\r\n        } else {\r\n          return of({\r\n            sticky: false,\r\n            height: 0\r\n          })\r\n        }\r\n      }),\r\n      shareReplay(1)\r\n    )\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply header title type\r\n *\r\n * @param el - Header title element\r\n *\r\n * @return Operator function\r\n */\r\nexport function applyHeaderType(\r\n  el: HTMLElement\r\n): MonoTypeOperatorFunction<HeaderType> {\r\n  return pipe(\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    tap(type => {\r\n      setHeaderTitleActive(el, type === \"page\")\r\n    }),\r\n\r\n    /* Reset on complete or error */\r\n    finalize(() => {\r\n      resetHeaderTitleActive(el)\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set header title active\r\n *\r\n * @param el - Header title element\r\n * @param value - Whether the title is shown\r\n */\r\nexport function setHeaderTitleActive(\r\n  el: HTMLElement, value: boolean\r\n): void {\r\n  el.setAttribute(\"data-md-state\", value ? \"active\" : \"\")\r\n}\r\n\r\n/**\r\n * Reset header title active\r\n *\r\n * @param el - Header title element\r\n */\r\nexport function resetHeaderTitleActive(\r\n  el: HTMLElement\r\n): void {\r\n  el.removeAttribute(\"data-md-state\")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable, OperatorFunction, Subject, pipe } from \"rxjs\"\r\nimport { distinctUntilKeyChanged, switchMap, tap } from \"rxjs/operators\"\r\n\r\nimport { Viewport } from \"browser\"\r\n\r\nimport { useComponent } from \"../../_\"\r\nimport { Header } from \"../../header\"\r\nimport {\r\n  applyHeaderShadow,\r\n  watchMain\r\n} from \"../react\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Main area\r\n */\r\nexport interface Main {\r\n  offset: number                       /* Main area top offset */\r\n  height: number                       /* Main area visible height */\r\n  active: boolean                      /* Scrolled past top offset */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount main area from source observable\r\n *\r\n * The header must be connected to the main area observable outside of the\r\n * operator function, as the header will persist in-between document switches\r\n * while the main area is replaced. However, the header observable must be\r\n * passed to this function, so we connect both via a long-living subject.\r\n *\r\n * @param options - Options\r\n *\r\n * @return Operator function\r\n */\r\nexport function mountMain(\r\n  { header$, viewport$ }: MountOptions\r\n): OperatorFunction<HTMLElement, Main> {\r\n  const main$ = new Subject<Main>()\r\n\r\n  /* Connect to main area observable via long-living subject */\r\n  useComponent(\"header\")\r\n    .pipe(\r\n      switchMap(header => main$\r\n        .pipe(\r\n          distinctUntilKeyChanged(\"active\"),\r\n          applyHeaderShadow(header)\r\n        )\r\n      )\r\n    )\r\n      .subscribe()\r\n\r\n  /* Return operator */\r\n  return pipe(\r\n    switchMap(el => watchMain(el, { header$, viewport$ })),\r\n    tap(main => main$.next(main))\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport {\r\n  MonoTypeOperatorFunction,\r\n  Observable,\r\n  animationFrameScheduler,\r\n  combineLatest,\r\n  pipe\r\n} from \"rxjs\"\r\nimport {\r\n  distinctUntilChanged,\r\n  distinctUntilKeyChanged,\r\n  finalize,\r\n  map,\r\n  observeOn,\r\n  pluck,\r\n  shareReplay,\r\n  switchMap,\r\n  tap\r\n} from \"rxjs/operators\"\r\n\r\nimport { Viewport, watchElementSize } from \"browser\"\r\n\r\nimport { Header } from \"../../header\"\r\nimport { Main } from \"../_\"\r\nimport {\r\n  resetHeaderShadow,\r\n  setHeaderShadow\r\n} from \"../set\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch options\r\n */\r\ninterface WatchOptions {\r\n  header$: Observable<Header>          /* Header observable */\r\n  viewport$: Observable<Viewport>      /* Viewport observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Watch main area\r\n *\r\n * This function returns an observable that computes the visual parameters of\r\n * the main area which depends on the viewport vertical offset and height, as\r\n * well as the height of the header element, if the header is fixed.\r\n *\r\n * @param el - Main area element\r\n * @param options - Options\r\n *\r\n * @return Main area observable\r\n */\r\nexport function watchMain(\r\n  el: HTMLElement, { header$, viewport$ }: WatchOptions\r\n): Observable<Main> {\r\n\r\n  /* Compute necessary adjustment for header */\r\n  const adjust$ = header$\r\n    .pipe(\r\n      pluck(\"height\"),\r\n      distinctUntilChanged(),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* Compute the main area's top and bottom borders */\r\n  const border$ = adjust$\r\n    .pipe(\r\n      switchMap(() => watchElementSize(el)\r\n        .pipe(\r\n          map(({ height }) => ({\r\n            top:    el.offsetTop,\r\n            bottom: el.offsetTop + height\r\n          }))\r\n        )\r\n      ),\r\n      distinctUntilKeyChanged(\"bottom\"),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* Compute the main area's offset, visible height and if we scrolled past */\r\n  return combineLatest([adjust$, border$, viewport$])\r\n    .pipe(\r\n      map(([header, { top, bottom }, { offset: { y }, size: { height } }]) => {\r\n        height = Math.max(0, height\r\n          - Math.max(0, top    - y,  header)\r\n          - Math.max(0, height + y - bottom)\r\n        )\r\n        return {\r\n          offset: top - header,\r\n          height,\r\n          active: top - header <= y\r\n        }\r\n      }),\r\n      distinctUntilChanged<Main>((a, b) => {\r\n        return a.offset === b.offset\r\n            && a.height === b.height\r\n            && a.active === b.active\r\n      })\r\n    )\r\n}\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Apply header shadow\r\n *\r\n * @param el - Header element\r\n *\r\n * @return Operator function\r\n */\r\nexport function applyHeaderShadow(\r\n  el: HTMLElement\r\n): MonoTypeOperatorFunction<Main> {\r\n  return pipe(\r\n\r\n    /* Defer repaint to next animation frame */\r\n    observeOn(animationFrameScheduler),\r\n    tap(({ active }) => {\r\n      setHeaderShadow(el, active)\r\n    }),\r\n\r\n    /* Reset on complete or error */\r\n    finalize(() => {\r\n      resetHeaderShadow(el)\r\n    })\r\n  )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Set header shadow\r\n *\r\n * @param el - Header element\r\n * @param value - Whether the shadow is shown\r\n */\r\nexport function setHeaderShadow(\r\n  el: HTMLElement, value: boolean\r\n): void {\r\n  el.setAttribute(\"data-md-state\", value ? \"shadow\" : \"\")\r\n}\r\n\r\n/**\r\n * Reset header shadow\r\n *\r\n * @param el - Header element\r\n */\r\nexport function resetHeaderShadow(\r\n  el: HTMLElement\r\n): void {\r\n  el.removeAttribute(\"data-md-state\")\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { NEVER, Observable, fromEvent, iif, merge } from \"rxjs\"\r\nimport { map, mapTo, shareReplay, switchMap } from \"rxjs/operators\"\r\n\r\nimport { getElements } from \"browser\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch options\r\n */\r\ninterface PatchOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Check whether the given device is an Apple device\r\n *\r\n * @return Test result\r\n */\r\nfunction isAppleDevice(): boolean {\r\n  return /(iPad|iPhone|iPod)/.test(navigator.userAgent)\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch all elements with `data-md-scrollfix` attributes\r\n *\r\n * This is a year-old patch which ensures that overflow scrolling works at the\r\n * top and bottom of containers on iOS by ensuring a `1px` scroll offset upon\r\n * the start of a touch event.\r\n *\r\n * @see https://bit.ly/2SCtAOO - Original source\r\n *\r\n * @param options - Options\r\n */\r\nexport function patchScrollfix(\r\n  { document$ }: PatchOptions\r\n): void {\r\n  const els$ = document$\r\n    .pipe(\r\n      map(() => getElements(\"[data-md-scrollfix]\")),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* Remove marker attribute, so we'll only add the fix once */\r\n  els$.subscribe(els => {\r\n    for (const el of els)\r\n      el.removeAttribute(\"data-md-scrollfix\")\r\n  })\r\n\r\n  /* Patch overflow scrolling on touch start */\r\n  iif(isAppleDevice, els$, NEVER)\r\n    .pipe(\r\n      switchMap(els => merge(...els.map(el => (\r\n        fromEvent(el, \"touchstart\", { passive: true })\r\n          .pipe(\r\n            mapTo(el)\r\n          )\r\n      ))))\r\n    )\r\n      .subscribe(el => {\r\n        const top = el.scrollTop\r\n\r\n        /* We're at the top of the container */\r\n        if (top === 0) {\r\n          el.scrollTop = 1\r\n\r\n        /* We're at the bottom of the container */\r\n        } else if (top + el.offsetHeight === el.scrollHeight) {\r\n          el.scrollTop = top - 1\r\n        }\r\n      })\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { NEVER, Observable } from \"rxjs\"\r\nimport { catchError, map, switchMap } from \"rxjs/operators\"\r\n\r\nimport { getElementOrThrow, getElements } from \"browser\"\r\nimport { renderSource } from \"templates\"\r\nimport { cache, hash } from \"utilities\"\r\n\r\nimport { fetchSourceFactsFromGitHub } from \"./github\"\r\nimport { fetchSourceFactsFromGitLab } from \"./gitlab\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Source facts\r\n */\r\nexport type SourceFacts = string[]\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch options\r\n */\r\ninterface PatchOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Fetch source facts\r\n *\r\n * @param url - Source repository URL\r\n *\r\n * @return Source facts observable\r\n */\r\nfunction fetchSourceFacts(\r\n  url: string\r\n): Observable<SourceFacts> {\r\n  const [type] = url.match(/(git(?:hub|lab))/i) || []\r\n  switch (type.toLowerCase()) {\r\n\r\n    /* GitHub repository */\r\n    case \"github\":\r\n      const [, user, repo] = url.match(/^.+github\\.com\\/([^\\/]+)\\/?([^\\/]+)/i)\r\n      return fetchSourceFactsFromGitHub(user, repo)\r\n\r\n    /* GitLab repository */\r\n    case \"gitlab\":\r\n      const [, base, project] = url.match(/^.+?([^\\/]*gitlab[^\\/]+)\\/(.+)/i)\r\n      return fetchSourceFactsFromGitLab(base, project)\r\n\r\n    /* Everything else */\r\n    default:\r\n      return NEVER\r\n  }\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch elements containing repository information\r\n *\r\n * This function will retrieve the URL from the repository link and try to\r\n * query data from integrated source code platforms like GitHub or GitLab.\r\n *\r\n * @param options - Options\r\n */\r\nexport function patchSource(\r\n  { document$ }: PatchOptions\r\n): void {\r\n  document$\r\n    .pipe(\r\n      map(() => getElementOrThrow<HTMLAnchorElement>(\".md-source[href]\")),\r\n      switchMap(({ href }) => (\r\n        cache(`${hash(href)}`, () => fetchSourceFacts(href))\r\n      )),\r\n      catchError(() => NEVER)\r\n    )\r\n      .subscribe(facts => {\r\n        for (const el of getElements(\".md-source__repository\")) {\r\n          if (!el.hasAttribute(\"data-md-state\")) {\r\n            el.setAttribute(\"data-md-state\", \"done\")\r\n            el.appendChild(renderSource(facts))\r\n          }\r\n        }\r\n      })\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Repo, User } from \"github-types\"\r\nimport { Observable, of } from \"rxjs\"\r\nimport { ajax } from \"rxjs/ajax\"\r\nimport { filter, pluck, switchMap } from \"rxjs/operators\"\r\n\r\nimport { round } from \"utilities\"\r\n\r\nimport { SourceFacts } from \"..\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Fetch GitHub source facts\r\n *\r\n * @param user - GitHub user\r\n * @param repo - GitHub repository\r\n *\r\n * @return Source facts observable\r\n */\r\nexport function fetchSourceFactsFromGitHub(\r\n  user: string, repo?: string\r\n): Observable<SourceFacts> {\r\n  return ajax({\r\n    url: typeof repo !== \"undefined\"\r\n      ? `https://api.github.com/repos/${user}/${repo}`\r\n      : `https://api.github.com/users/${user}`,\r\n    responseType: \"json\"\r\n  })\r\n    .pipe(\r\n      filter(({ status }) => status === 200),\r\n      pluck(\"response\"),\r\n      switchMap(data => {\r\n\r\n        /* GitHub repository */\r\n        if (typeof repo !== \"undefined\") {\r\n          const { stargazers_count, forks_count }: Repo = data\r\n          return of([\r\n            `${round(stargazers_count || 0)} Stars`,\r\n            `${round(forks_count || 0)} Forks`\r\n          ])\r\n\r\n        /* GitHub user/organization */\r\n        } else {\r\n          const { public_repos }: User = data\r\n          return of([\r\n            `${round(public_repos || 0)} Repositories`\r\n          ])\r\n        }\r\n      })\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { ProjectSchema } from \"gitlab\"\r\nimport { Observable } from \"rxjs\"\r\nimport { ajax } from \"rxjs/ajax\"\r\nimport { filter, map, pluck } from \"rxjs/operators\"\r\n\r\nimport { round } from \"utilities\"\r\n\r\nimport { SourceFacts } from \"..\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Fetch GitLab source facts\r\n *\r\n * @param base - GitLab base\r\n * @param project - GitLab project\r\n *\r\n * @return Source facts observable\r\n */\r\nexport function fetchSourceFactsFromGitLab(\r\n  base: string, project: string\r\n): Observable<SourceFacts> {\r\n  return ajax({\r\n    url: `https://${base}/api/v4/projects/${encodeURIComponent(project)}`,\r\n    responseType: \"json\"\r\n  })\r\n    .pipe(\r\n      filter(({ status }) => status === 200),\r\n      pluck(\"response\"),\r\n      map(({ star_count, forks_count }: ProjectSchema) => ([\r\n        `${round(star_count)} Stars`,\r\n        `${round(forks_count)} Forks`\r\n      ]))\r\n    )\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\n// DISCLAIMER: this file is still WIP. There're some refactoring opportunities\r\n// which must be tackled after we gathered some feedback on v5.\r\n// tslint:disable\r\n\r\nimport \"../stylesheets/main.scss\"\r\nimport \"../stylesheets/palette.scss\"\r\n\r\nimport { values } from \"ramda\"\r\nimport {\r\n  merge,\r\n  combineLatest,\r\n  animationFrameScheduler,\r\n  fromEvent,\r\n  from\r\n} from \"rxjs\"\r\nimport { ajax } from \"rxjs/ajax\"\r\nimport {\r\n  delay,\r\n  switchMap,\r\n  tap,\r\n  filter,\r\n  withLatestFrom,\r\n  observeOn,\r\n  take,\r\n  shareReplay,\r\n  pluck\r\n} from \"rxjs/operators\"\r\n\r\nimport {\r\n  watchToggle,\r\n  setToggle,\r\n  getElements,\r\n  watchMedia,\r\n  watchDocument,\r\n  watchLocation,\r\n  watchLocationHash,\r\n  watchViewport,\r\n  isLocalLocation,\r\n  setLocationHash,\r\n  watchLocationBase\r\n} from \"browser\"\r\nimport {\r\n  mountHeader,\r\n  mountHero,\r\n  mountMain,\r\n  mountNavigation,\r\n  mountSearch,\r\n  mountTableOfContents,\r\n  mountTabs,\r\n  useComponent,\r\n  setupComponents,\r\n  mountSearchQuery,\r\n  mountSearchReset,\r\n  mountSearchResult\r\n} from \"components\"\r\nimport {\r\n  setupClipboard,\r\n  setupDialog,\r\n  setupKeyboard,\r\n  setupInstantLoading,\r\n  setupSearchWorker,\r\n  SearchIndex\r\n} from \"integrations\"\r\nimport {\r\n  patchTables,\r\n  patchDetails,\r\n  patchScrollfix,\r\n  patchSource,\r\n  patchScripts\r\n} from \"patches\"\r\nimport { isConfig } from \"utilities\"\r\n\r\n/* ------------------------------------------------------------------------- */\r\n\r\n/* Denote that JavaScript is available */\r\ndocument.documentElement.classList.remove(\"no-js\")\r\ndocument.documentElement.classList.add(\"js\")\r\n\r\n/* Test for iOS */\r\nif (navigator.userAgent.match(/(iPad|iPhone|iPod)/g))\r\n  document.documentElement.classList.add(\"ios\")\r\n\r\n/**\r\n * Set scroll lock\r\n *\r\n * @param el - Scrollable element\r\n * @param value - Vertical offset\r\n */\r\nexport function setScrollLock(\r\n  el: HTMLElement, value: number\r\n): void {\r\n  el.setAttribute(\"data-md-state\", \"lock\")\r\n  el.style.top = `-${value}px`\r\n}\r\n\r\n/**\r\n * Reset scroll lock\r\n *\r\n * @param el - Scrollable element\r\n */\r\nexport function resetScrollLock(\r\n  el: HTMLElement\r\n): void {\r\n  const value = -1 * parseInt(el.style.top, 10)\r\n  el.removeAttribute(\"data-md-state\")\r\n  el.style.top = \"\"\r\n  if (value)\r\n    window.scrollTo(0, value)\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Initialize Material for MkDocs\r\n *\r\n * @param config - Configuration\r\n */\r\nexport function initialize(config: unknown) {\r\n  if (!isConfig(config))\r\n    throw new SyntaxError(`Invalid configuration: ${JSON.stringify(config)}`)\r\n\r\n  /* Set up subjects */\r\n  const document$ = watchDocument()\r\n  const location$ = watchLocation()\r\n\r\n  /* Set up user interface observables */\r\n  const base$     = watchLocationBase(config.base, { location$ })\r\n  const hash$     = watchLocationHash()\r\n  const viewport$ = watchViewport()\r\n  const tablet$   = watchMedia(\"(min-width: 960px)\")\r\n  const screen$   = watchMedia(\"(min-width: 1220px)\")\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  /* Set up component bindings */\r\n  setupComponents([\r\n    \"announce\",                        /* Announcement bar */\r\n    \"container\",                       /* Container */\r\n    \"header\",                          /* Header */\r\n    \"header-title\",                    /* Header title */\r\n    \"hero\",                            /* Hero */\r\n    \"main\",                            /* Main area */\r\n    \"navigation\",                      /* Navigation */\r\n    \"search\",                          /* Search */\r\n    \"search-query\",                    /* Search input */\r\n    \"search-reset\",                    /* Search reset */\r\n    \"search-result\",                   /* Search results */\r\n    \"skip\",                            /* Skip link */\r\n    \"tabs\",                            /* Tabs */\r\n    \"toc\"                              /* Table of contents */\r\n  ], { document$ })\r\n\r\n  const keyboard$ = setupKeyboard()\r\n\r\n  patchDetails({ document$, hash$ })\r\n  patchScripts({ document$ })\r\n  patchSource({ document$ })\r\n  patchTables({ document$ })\r\n\r\n  /* Force 1px scroll offset to trigger overflow scrolling */\r\n  patchScrollfix({ document$ })\r\n\r\n  /* Set up clipboard and dialog */\r\n  const dialog$ = setupDialog()\r\n  const clipboard$ = setupClipboard({ document$, dialog$ })\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  /* Create header observable */\r\n  const header$ = useComponent(\"header\")\r\n    .pipe(\r\n      mountHeader({ document$, viewport$ }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  const main$ = useComponent(\"main\")\r\n    .pipe(\r\n      mountMain({ header$, viewport$ }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  const navigation$ = useComponent(\"navigation\")\r\n    .pipe(\r\n      mountNavigation({ header$, main$, viewport$, screen$ }),\r\n      shareReplay(1) // shareReplay because there might be late subscribers\r\n    )\r\n\r\n  const toc$ = useComponent(\"toc\")\r\n    .pipe(\r\n      mountTableOfContents({ header$, main$, viewport$, tablet$ }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  const tabs$ = useComponent(\"tabs\")\r\n    .pipe(\r\n      mountTabs({ header$, viewport$, screen$ }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  const hero$ = useComponent(\"hero\")\r\n    .pipe(\r\n      mountHero({ header$, viewport$ }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  // External index\r\n  const index = config.search && config.search.index\r\n    ? config.search.index\r\n    : undefined\r\n\r\n  /* Fetch index if it wasn't passed explicitly */\r\n  const index$ = typeof index !== \"undefined\"\r\n    ? from(index)\r\n    : base$\r\n        .pipe(\r\n          switchMap(base => ajax({\r\n            url: `${base}/search/search_index.json`,\r\n            responseType: \"json\",\r\n            withCredentials: true\r\n          })\r\n            .pipe<SearchIndex>(\r\n              pluck(\"response\")\r\n            )\r\n          )\r\n        )\r\n\r\n  const worker = setupSearchWorker(config.search.worker, {\r\n    base$, index$\r\n  })\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  /* Mount search query */\r\n  const query$ = useComponent(\"search-query\")\r\n    .pipe(\r\n      mountSearchQuery(worker, { transform: config.search.transform }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* Mount search reset */\r\n  const reset$ = useComponent(\"search-reset\")\r\n    .pipe(\r\n      mountSearchReset(),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* Mount search result */\r\n  const result$ = useComponent(\"search-result\")\r\n    .pipe(\r\n      mountSearchResult(worker, { query$ }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  const search$ = useComponent(\"search\")\r\n    .pipe(\r\n      mountSearch({ query$, reset$, result$ }),\r\n      shareReplay(1)\r\n    )\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  // // put into search...\r\n  hash$\r\n    .pipe(\r\n      tap(() => setToggle(\"search\", false)),\r\n      delay(125), // ensure that it runs after the body scroll reset...\r\n    )\r\n      .subscribe(hash => setLocationHash(`#${hash}`))\r\n\r\n  // TODO: scroll restoration must be centralized\r\n  combineLatest([\r\n    watchToggle(\"search\"),\r\n    tablet$,\r\n  ])\r\n    .pipe(\r\n      withLatestFrom(viewport$),\r\n      switchMap(([[toggle, tablet], { offset: { y }}]) => {\r\n        const active = toggle && !tablet\r\n        return document$\r\n          .pipe(\r\n            delay(active ? 400 : 100),\r\n            observeOn(animationFrameScheduler),\r\n            tap(({ body }) => active\r\n              ? setScrollLock(body, y)\r\n              : resetScrollLock(body)\r\n            )\r\n          )\r\n      })\r\n    )\r\n      .subscribe()\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  /* Always close drawer on click */\r\n  fromEvent<MouseEvent>(document.body, \"click\")\r\n    .pipe(\r\n      filter(ev => !(ev.metaKey || ev.ctrlKey)),\r\n      filter(ev => {\r\n        if (ev.target instanceof HTMLElement) {\r\n          const el = ev.target.closest(\"a\") // TODO: abstract as link click?\r\n          if (el && isLocalLocation(el)) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      })\r\n    )\r\n      .subscribe(() => {\r\n        setToggle(\"drawer\", false)\r\n      })\r\n\r\n  /* Enable instant loading, if not on file:// protocol */\r\n  if (config.features.includes(\"instant\") && location.protocol !== \"file:\")\r\n    setupInstantLoading({ document$, location$, viewport$ })\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  /* Unhide permalinks on first tab */\r\n  keyboard$\r\n    .pipe(\r\n      filter(key => key.mode === \"global\" && key.type === \"Tab\"),\r\n      take(1)\r\n    )\r\n      .subscribe(() => {\r\n        for (const link of getElements(\".headerlink\"))\r\n          link.style.visibility = \"visible\"\r\n      })\r\n\r\n  /* ----------------------------------------------------------------------- */\r\n\r\n  const state = {\r\n\r\n    /* Browser observables */\r\n    document$,\r\n    location$,\r\n    viewport$,\r\n\r\n    /* Component observables */\r\n    header$,\r\n    hero$,\r\n    main$,\r\n    navigation$,\r\n    search$,\r\n    tabs$,\r\n    toc$,\r\n\r\n    /* Integration observables */\r\n    clipboard$,\r\n    keyboard$,\r\n    dialog$\r\n  }\r\n\r\n  /* Subscribe to all observables */\r\n  merge(...values(state))\r\n    .subscribe()\r\n  return state\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { identity } from \"ramda\"\r\nimport { Observable, fromEvent, merge } from \"rxjs\"\r\nimport {\r\n  filter,\r\n  map,\r\n  switchMapTo,\r\n  tap\r\n} from \"rxjs/operators\"\r\n\r\nimport {\r\n  getElement,\r\n  getElements,\r\n  watchMedia\r\n} from \"browser\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch options\r\n */\r\ninterface PatchOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n  hash$: Observable<string>            /* Location hash observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch all `details` elements\r\n *\r\n * This function will ensure that all `details` tags are opened prior to\r\n * printing, so the whole content of the page is included, and on anchor jumps.\r\n *\r\n * @param options - Options\r\n */\r\nexport function patchDetails(\r\n  { document$, hash$ }: PatchOptions\r\n): void {\r\n  const els$ = document$\r\n    .pipe(\r\n      map(() => getElements<HTMLDetailsElement>(\"details\"))\r\n    )\r\n\r\n  /* Open all details before printing */\r\n  merge(\r\n    watchMedia(\"print\").pipe(filter(identity)), /* Webkit */\r\n    fromEvent(window, \"beforeprint\")            /* IE, FF */\r\n  )\r\n    .pipe(\r\n      switchMapTo(els$)\r\n    )\r\n      .subscribe(els => {\r\n        for (const el of els)\r\n          el.setAttribute(\"open\", \"\")\r\n      })\r\n\r\n  /* Open parent details and fix anchor jump */\r\n  hash$\r\n    .pipe(\r\n      map(id => getElement(`[id=\"${id}\"]`)!),\r\n      filter(el => typeof el !== \"undefined\"),\r\n      tap(el => {\r\n        const details = el.closest(\"details\")\r\n        if (details && !details.open)\r\n          details.setAttribute(\"open\", \"\")\r\n      })\r\n    )\r\n      .subscribe(el => el.scrollIntoView())\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable } from \"rxjs\"\r\nimport { map, skip, withLatestFrom } from \"rxjs/operators\"\r\n\r\nimport {\r\n  createElement,\r\n  getElements,\r\n  replaceElement\r\n} from \"browser\"\r\nimport { useComponent } from \"components\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch options\r\n */\r\ninterface PatchOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch all `script` elements\r\n *\r\n * This function must be run after a document switch, which means the first\r\n * emission must be ignored.\r\n *\r\n * @param options - Options\r\n */\r\nexport function patchScripts(\r\n  { document$ }: PatchOptions\r\n): void {\r\n  const els$ = document$\r\n    .pipe(\r\n      skip(1),\r\n      withLatestFrom(useComponent(\"container\")),\r\n      map(([, el]) => getElements<HTMLScriptElement>(\"script\", el))\r\n    )\r\n\r\n  /* Evaluate all scripts via replacement */\r\n  els$.subscribe(els => {\r\n    for (const el of els) {\r\n      if (el.src || /(^|\\/javascript)$/i.test(el.type)) {\r\n        const script = createElement(\"script\")\r\n        const key = el.src ? \"src\" : \"textContent\"\r\n        script[key] = el[key]!\r\n        replaceElement(el, script)\r\n      }\r\n    }\r\n  })\r\n}\r\n","/*\r\n * Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n */\r\n\r\nimport { Observable } from \"rxjs\"\r\nimport { map } from \"rxjs/operators\"\r\n\r\nimport {\r\n  createElement,\r\n  getElements,\r\n  replaceElement\r\n} from \"browser\"\r\nimport { renderTable } from \"templates\"\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Helper types\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Mount options\r\n */\r\ninterface MountOptions {\r\n  document$: Observable<Document>      /* Document observable */\r\n}\r\n\r\n/* ----------------------------------------------------------------------------\r\n * Functions\r\n * ------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Patch all `table` elements\r\n *\r\n * This function will re-render all tables by wrapping them to improve overflow\r\n * scrolling on smaller screen sizes.\r\n *\r\n * @param options - Options\r\n */\r\nexport function patchTables(\r\n  { document$ }: MountOptions\r\n): void {\r\n  const sentinel = createElement(\"table\")\r\n  document$\r\n    .pipe(\r\n      map(() => getElements<HTMLTableElement>(\"table:not([class])\"))\r\n    )\r\n      .subscribe(els => {\r\n        for (const el of els) {\r\n          replaceElement(el, sentinel)\r\n          replaceElement(sentinel, renderTable(el))\r\n        }\r\n      })\r\n}\r\n"],"sourceRoot":""}