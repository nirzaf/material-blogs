////
/// Copyright (c) 2016 Martin Donath <martin.donath@squidfunk.com>
///
/// Permission is hereby granted, free of charge, to any person obtaining a
/// copy of this software and associated documentation files (the "Software"),
/// to deal in the Software without restriction, including without limitation
/// the rights to use, copy, modify, merge, publish, distribute, sublicense,
/// and/or sell copies of the Software, and to permit persons to whom the
/// Software is furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in
/// all copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
/// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
/// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
/// DEALINGS
////

// ----------------------------------------------------------------------------
// Codehilite extension
// ----------------------------------------------------------------------------

// Github-style syntax highlighting
.codehilite,
.code {

  // Errors
  .err { color: #A61717; }

  // Operators
  .o { color: inherit; }

  // Generics

  .ge { color: #000000; } // Generic.Emph
  .gr { color: #AA0000; } // Generic.Error
  .gh { color: #999999; } // Generic.Heading
  .go { color: #888888; } // Generic.Output
  .gp { color: #555555; } // Generic.Prompt
  .gs { color: inherit; } // Generic.Strong
  .gu { color: #AAAAAA; } // Generic.Subheading
  .gt { color: #AA0000; } // Generic.Traceback

  // Keywords

  .k  { color: #A71D5D; } // Keyword
  .kc { color: #A71D5D; } // Keyword.Constant
  .kd { color: #A71D5D; } // Keyword.Declaration
  .kn { color: #A71D5D; } // Keyword.Namespace
  .kp { color: #A71D5D; } // Keyword.Pseudo
  .kr { color: #0086B3; } // Keyword.Reserved
  .kt { color: #0086B3; } // Keyword.Type

  // Comments

  .c  { color: #969896; } // Comment
  .cm { color: #969896; } // Comment.Multiline
  .cp { color: #666666; } // Comment.Preproc
  .c1 { color: #969896; } // Comment.Single
  .cs { color: #969896; } // Comment.Special

  // Names

  .na { color: #795DA3; } // Name.Attribute
  .na { color: #795DA3; } // Name.Attribute
  .nb { color: #795DA3; } // Name.Builtin
  .bp { color: #795DA3; } // Name.Builtin.Pseudo
  .nc { color: #795DA3; } // Name.Class
  .no { color: #795DA3; } // Name.Constant
  .nd { color: #795DA3; } // Name.Decorator
  .ni { color: #795DA3; } // Name.Entity
  .ne { color: #795DA3; } // Name.Exception
  .nf { color: #795DA3; } // Name.Function
  .nl { color: #795DA3; } // Name.Label
  .nn { color: #795DA3; } // Name.Namespace
  .nt { color: #795DA3; } // Name.Tag
  .nv { color: #795DA3; } // Name.Variable
  .vc { color: #795DA3; } // Name.Variable.Class
  .vg { color: #795DA3; } // Name.Variable.Global
  .vi { color: #795DA3; } // Name.Variable.Instance
  .ow { color: inherit; } // Operator.Word

  // Numbers

  .m  { color: #0086B3; } // Literal.Number
  .mf { color: #0086B3; } // Literal.Number.Float
  .mh { color: #0086B3; } // Literal.Number.Hex
  .mi { color: #0086B3; } // Literal.Number.Integer
  .mo { color: #0086B3; } // Literal.Number.Oct
  .il { color: #0086B3; } // Literal.Number.Integer.Long

  // Strings

  .s  { color: #183691; } // Literal.String
  .sb { color: #183691; } // Literal.String.Backtick
  .sc { color: #183691; } // Literal.String.Char
  .sd { color: #183691; } // Literal.String.Doc
  .s2 { color: #183691; } // Literal.String.Double
  .se { color: #183691; } // Literal.String.Escape
  .sh { color: #183691; } // Literal.String.Heredoc
  .si { color: #183691; } // Literal.String.Interpol
  .sx { color: #183691; } // Literal.String.Other
  .sr { color: #009926; } // Literal.String.Regex
  .s1 { color: #D01040; } // Literal.String.Single
  .ss { color: #990073; } // Literal.String.Symbol

  // Diffs
  .gd { background-color: #FFDDDD; } // Generic.Deleted
  .gi { background-color: #DDFFDD; } // Generic.Inserted

  // Miscellaneous
  .w { color: transparent; } // Text.Whitespace
}
