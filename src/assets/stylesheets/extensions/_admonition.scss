////
/// Copyright (c) 2016-2020 Martin Donath <martin.donath@squidfunk.com>
///
/// Permission is hereby granted, free of charge, to any person obtaining a
/// copy of this software and associated documentation files (the "Software"),
/// to deal in the Software without restriction, including without limitation
/// the rights to use, copy, modify, merge, publish, distribute, sublicense,
/// and/or sell copies of the Software, and to permit persons to whom the
/// Software is furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in
/// all copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
/// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
/// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
/// DEALINGS
////

// ----------------------------------------------------------------------------
// Rules
// ----------------------------------------------------------------------------

// Scoped in typesetted content to match specificity of regular content
.md-typeset {

  // Admonition extension
  .admonition {
    margin: 1.5625em 0;
    padding: 0 px2rem(12px);
    border-left: px2rem(3px) solid $clr-blue-a200;
    border-radius: px2rem(2px);
    font-size: ms(-1);
    box-shadow:
      inset 0 0 0 px2rem(1px) transparentize($clr-blue-a200, 0.85),
      inset 1px 0 $clr-blue-a200;
    overflow: auto;

    // Adjust for right-to-left languages
    [dir="rtl"] & {
      border-right: px2rem(3px) solid $clr-blue-a200;
      border-left: none;
      box-shadow:
        inset 0 0 0 px2rem(1px) transparentize($clr-blue-a200, 0.85),
        inset -1px 0 $clr-blue-a200;
    }

    // Adjust spacing on last element
    html & > :last-child {
      margin-bottom: px2rem(12px);
    }

    // Adjust margin for nested admonition blocks
    .admonition {
      margin: 1em 0;
    }

    // Title
    > .admonition-title {
      margin: 0 px2rem(-12px);
      padding: px2rem(8px) px2rem(12px) px2rem(8px) px2rem(40px);
      background-color: transparentize($clr-blue-a200, 0.9);
      font-weight: 700;

      // Adjust for right-to-left languages
      [dir="rtl"] & {
        padding: px2rem(8px) px2rem(40px) px2rem(8px) px2rem(12px);
      }

      // Reset spacing, if title is the only element
      &:last-child {
        margin-bottom: 0;
      }

      // Icon
      &::before {
        position: absolute;
        width: px2rem(20px);
        height: px2rem(20px);
        margin-left: px2rem(-28px);
        background-color: $clr-blue-a200;
        mask-image: url("{{ pencil }}");
        content: "";

        // Adjust for right-to-left languages
        [dir="rtl"] & {
          margin-right: px2rem(-28px);
          margin-left: initial;
        }
      }
    }

    // Build representational classes
    @each $names, $appearance in (
      abstract summary tldr: $clr-light-blue-a400 "text-subject",
      info todo: $clr-cyan-a700 "information",
      tip hint important: $clr-teal-a700 "fire",
      success check done: $clr-green-a700 "check-circle",
      question help faq: $clr-light-green-a700 "help-circle",
      warning caution attention: $clr-orange-a400 "alert",
      failure fail missing: $clr-red-a200 "close-circle",
      danger error: $clr-red-a400 "flash-circle",
      bug: $clr-pink-a400 "bug",
      example: $clr-deep-purple-a400 "format-list-numbered",
      quote cite: $clr-grey "format-quote-close"
    ) {
      $tint: nth($appearance, 1);
      $icon: nth($appearance, 2);

      // Define base class
      &%#{nth($names, 1)},
      &.#{nth($names, 1)} {
        border-left-color: $tint;
        box-shadow:
          inset 0 0 0 px2rem(1px) transparentize($tint, 0.85),
          inset 1px 0 $tint;

        // Adjust for right-to-left languages
        [dir="rtl"] & {
          border-right-color: $tint;
          box-shadow:
            inset 0 0 0 px2rem(1px) transparentize($tint, 0.85),
            inset -1px 0 $tint;
        }

        // Title
        > .admonition-title {
          background-color: transparentize($tint, 0.9);

          // Icon
          &::before {
            background-color: $tint;
            mask-image: url("{{ #{$icon} }}");
          }
        }
      }

      // Define synonyms for base class
      @if length($names) > 1 {
        @for $n from 2 through length($names) {
          &.#{nth($names, $n)} {
            @extend %#{nth($names, 1)};
          }
        }
      }
    }
  }
}
